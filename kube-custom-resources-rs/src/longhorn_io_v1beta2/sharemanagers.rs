// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/longhorn/longhorn/longhorn.io/v1beta2/sharemanagers.yaml --derive=Default --derive=PartialEq
// kopium version: 0.16.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// ShareManagerSpec defines the desired state of the Longhorn share manager
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "longhorn.io", version = "v1beta2", kind = "ShareManager", plural = "sharemanagers")]
#[kube(namespaced)]
#[kube(status = "ShareManagerStatus")]
#[kube(schema = "disabled")]
pub struct ShareManagerSpec {
    /// Share manager image used for creating a share manager pod
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
}

/// ShareManagerStatus defines the observed state of the Longhorn share manager
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ShareManagerStatus {
    /// NFS endpoint that can access the mounted filesystem of the volume
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub endpoint: Option<String>,
    /// The node ID on which the controller is responsible to reconcile this share manager resource
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ownerID")]
    pub owner_id: Option<String>,
    /// The state of the share manager resource
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
}

