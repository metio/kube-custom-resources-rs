// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/openshift/api/platform.openshift.io/v1alpha1/platformoperators.yaml --derive=PartialEq
// kopium version: 0.17.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;

/// PlatformOperatorSpec defines the desired state of PlatformOperator.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, PartialEq)]
#[kube(group = "platform.openshift.io", version = "v1alpha1", kind = "PlatformOperator", plural = "platformoperators")]
#[kube(status = "PlatformOperatorStatus")]
#[kube(schema = "disabled")]
pub struct PlatformOperatorSpec {
    /// package contains the desired package and its configuration for this PlatformOperator.
    pub package: PlatformOperatorPackage,
}

/// package contains the desired package and its configuration for this PlatformOperator.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct PlatformOperatorPackage {
    /// name contains the desired OLM-based Operator package name that is defined in an existing CatalogSource resource in the cluster. 
    ///  This configured package will be managed with the cluster's lifecycle. In the current implementation, it will be retrieving this name from a list of supported operators out of the catalogs included with OpenShift. 
    ///  ---
    pub name: String,
}

/// PlatformOperatorStatus defines the observed state of PlatformOperator
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct PlatformOperatorStatus {
    /// activeBundleDeployment is the reference to the BundleDeployment resource that's being managed by this PO resource. If this field is not populated in the status then it means the PlatformOperator has either not been installed yet or is failing to install.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "activeBundleDeployment")]
    pub active_bundle_deployment: Option<PlatformOperatorStatusActiveBundleDeployment>,
    /// conditions represent the latest available observations of a platform operator's current state.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
}

/// activeBundleDeployment is the reference to the BundleDeployment resource that's being managed by this PO resource. If this field is not populated in the status then it means the PlatformOperator has either not been installed yet or is failing to install.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct PlatformOperatorStatusActiveBundleDeployment {
    /// name is the metadata.name of the referenced BundleDeployment object.
    pub name: String,
}

