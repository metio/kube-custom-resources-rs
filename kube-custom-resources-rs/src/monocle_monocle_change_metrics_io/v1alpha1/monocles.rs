// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/change-metrics/monocle-operator/monocle.monocle.change-metrics.io/v1alpha1/monocles.yaml --derive=Default --derive=PartialEq
// kopium version: 0.17.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;

/// MonocleSpec defines the desired state of Monocle
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "monocle.monocle.change-metrics.io", version = "v1alpha1", kind = "Monocle", plural = "monocles")]
#[kube(namespaced)]
#[kube(status = "MonocleStatus")]
#[kube(schema = "disabled")]
pub struct MonocleSpec {
    /// Monocle container image
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
    /// Public URL to access the Monocle API
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "publicURL")]
    pub public_url: Option<String>,
    /// If set a Route (Openshift) resource will be spawned
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub route: Option<MonocleRoute>,
    /// Storage class name when creating the PVC
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "storageClassName")]
    pub storage_class_name: Option<String>,
    /// Initial Storage Size for the database storage
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "storageSize")]
    pub storage_size: Option<String>,
}

/// If set a Route (Openshift) resource will be spawned
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct MonocleRoute {
    /// Hostname to use for setting the Route
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub host: Option<String>,
    /// Labels to add to the Route resource
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub labels: Option<BTreeMap<String, String>>,
}

/// MonocleStatus defines the observed state of Monocle
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct MonocleStatus {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "monocle-api")]
    pub monocle_api: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "monocle-crawler")]
    pub monocle_crawler: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "monocle-elastic")]
    pub monocle_elastic: Option<String>,
}

