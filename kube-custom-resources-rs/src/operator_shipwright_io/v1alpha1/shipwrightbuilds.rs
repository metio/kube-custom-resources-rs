// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/shipwright-io/operator/operator.shipwright.io/v1alpha1/shipwrightbuilds.yaml --derive=Default --derive=PartialEq --smart-derive-elision
// kopium version: 0.20.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
    pub use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;
}
use self::prelude::*;

/// ShipwrightBuildSpec defines the configuration of a Shipwright Build deployment.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "operator.shipwright.io", version = "v1alpha1", kind = "ShipwrightBuild", plural = "shipwrightbuilds")]
#[kube(status = "ShipwrightBuildStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct ShipwrightBuildSpec {
    /// TargetNamespace is the target namespace where Shipwright's build controller will be deployed.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "targetNamespace")]
    pub target_namespace: Option<String>,
}

/// ShipwrightBuildStatus defines the observed state of ShipwrightBuild
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ShipwrightBuildStatus {
    /// Conditions holds the latest available observations of a resource's current state.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
}

