// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename ./crd-catalog/traefik/traefik/traefik.io/v1alpha1/middlewaretcps.yaml
// kopium version: 0.16.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// MiddlewareTCPSpec defines the desired state of a MiddlewareTCP.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug)]
#[kube(group = "traefik.io", version = "v1alpha1", kind = "MiddlewareTCP", plural = "middlewaretcps")]
#[kube(namespaced)]
#[kube(schema = "disabled")]
pub struct MiddlewareTCPSpec {
    /// InFlightConn defines the InFlightConn middleware configuration.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "inFlightConn")]
    pub in_flight_conn: Option<MiddlewareTCPInFlightConn>,
    /// IPAllowList defines the IPAllowList middleware configuration.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ipAllowList")]
    pub ip_allow_list: Option<MiddlewareTCPIpAllowList>,
}

/// InFlightConn defines the InFlightConn middleware configuration.
#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct MiddlewareTCPInFlightConn {
    /// Amount defines the maximum amount of allowed simultaneous connections. The middleware closes the connection if there are already amount connections opened.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub amount: Option<i64>,
}

/// IPAllowList defines the IPAllowList middleware configuration.
#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct MiddlewareTCPIpAllowList {
    /// SourceRange defines the allowed IPs (or ranges of allowed IPs by using CIDR notation).
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sourceRange")]
    pub source_range: Option<Vec<String>>,
}

