// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/openshift/api/network.openshift.io/v1/egressnetworkpolicies.yaml --derive=Default --derive=PartialEq
// kopium version: 0.17.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// spec is the specification of the current egress network policy
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "network.openshift.io", version = "v1", kind = "EgressNetworkPolicy", plural = "egressnetworkpolicies")]
#[kube(namespaced)]
#[kube(schema = "disabled")]
pub struct EgressNetworkPolicySpec {
    /// egress contains the list of egress policy rules
    pub egress: Vec<EgressNetworkPolicyEgress>,
}

/// EgressNetworkPolicyRule contains a single egress network policy rule
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct EgressNetworkPolicyEgress {
    /// to is the target that traffic is allowed/denied to
    pub to: EgressNetworkPolicyEgressTo,
    /// type marks this as an "Allow" or "Deny" rule
    #[serde(rename = "type")]
    pub r#type: String,
}

/// to is the target that traffic is allowed/denied to
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct EgressNetworkPolicyEgressTo {
    /// CIDRSelector is the CIDR range to allow/deny traffic to. If this is set, dnsName must be unset Ideally we would have liked to use the cidr openapi format for this property. But openshift-sdn only supports v4 while specifying the cidr format allows both v4 and v6 cidrs We are therefore using a regex pattern to validate instead.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "cidrSelector")]
    pub cidr_selector: Option<String>,
    /// DNSName is the domain name to allow/deny traffic to. If this is set, cidrSelector must be unset
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dnsName")]
    pub dns_name: Option<String>,
}

