// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/openshift/api/config.openshift.io/v1/projects.yaml --derive=Default --derive=PartialEq
// kopium version: 0.16.5

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// spec holds user settable values for configuration
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "config.openshift.io", version = "v1", kind = "Project", plural = "projects")]
#[kube(status = "ProjectStatus")]
#[kube(schema = "disabled")]
pub struct ProjectSpec {
    /// projectRequestMessage is the string presented to a user if they are unable to request a project via the projectrequest api endpoint
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "projectRequestMessage")]
    pub project_request_message: Option<String>,
    /// projectRequestTemplate is the template to use for creating projects in response to projectrequest. This must point to a template in 'openshift-config' namespace. It is optional. If it is not specified, a default template is used.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "projectRequestTemplate")]
    pub project_request_template: Option<ProjectProjectRequestTemplate>,
}

/// projectRequestTemplate is the template to use for creating projects in response to projectrequest. This must point to a template in 'openshift-config' namespace. It is optional. If it is not specified, a default template is used.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ProjectProjectRequestTemplate {
    /// name is the metadata.name of the referenced project request template
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

/// status holds observed values from the cluster. They may not be overridden.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ProjectStatus {
}

