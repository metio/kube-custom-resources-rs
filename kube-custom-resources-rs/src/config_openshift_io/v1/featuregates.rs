// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/openshift/api/config.openshift.io/v1/featuregates.yaml --derive=PartialEq
// kopium version: 0.17.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;

/// spec holds user settable values for configuration
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, PartialEq)]
#[kube(group = "config.openshift.io", version = "v1", kind = "FeatureGate", plural = "featuregates")]
#[kube(status = "FeatureGateStatus")]
#[kube(schema = "disabled")]
pub struct FeatureGateSpec {
    /// customNoUpgrade allows the enabling or disabling of any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT BE UNDONE, and PREVENTS UPGRADES. Because of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations your cluster may fail in an unrecoverable way.  featureSet must equal "CustomNoUpgrade" must be set to use this field.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customNoUpgrade")]
    pub custom_no_upgrade: Option<FeatureGateCustomNoUpgrade>,
    /// featureSet changes the list of features in the cluster.  The default is empty.  Be very careful adjusting this setting. Turning on or off features may cause irreversible changes in your cluster which cannot be undone.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "featureSet")]
    pub feature_set: Option<String>,
}

/// customNoUpgrade allows the enabling or disabling of any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT BE UNDONE, and PREVENTS UPGRADES. Because of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations your cluster may fail in an unrecoverable way.  featureSet must equal "CustomNoUpgrade" must be set to use this field.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct FeatureGateCustomNoUpgrade {
    /// disabled is a list of all feature gates that you want to force off
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub disabled: Option<Vec<String>>,
    /// enabled is a list of all feature gates that you want to force on
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub enabled: Option<Vec<String>>,
}

/// status holds observed values from the cluster. They may not be overridden.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct FeatureGateStatus {
    /// conditions represent the observations of the current state. Known .status.conditions.type are: "DeterminationDegraded"
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
    /// featureGates contains a list of enabled and disabled featureGates that are keyed by payloadVersion. Operators other than the CVO and cluster-config-operator, must read the .status.featureGates, locate the version they are managing, find the enabled/disabled featuregates and make the operand and operator match. The enabled/disabled values for a particular version may change during the life of the cluster as various .spec.featureSet values are selected. Operators may choose to restart their processes to pick up these changes, but remembering past enable/disable lists is beyond the scope of this API and is the responsibility of individual operators. Only featureGates with .version in the ClusterVersion.status will be present in this list.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "featureGates")]
    pub feature_gates: Option<Vec<FeatureGateStatusFeatureGates>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct FeatureGateStatusFeatureGates {
    /// disabled is a list of all feature gates that are disabled in the cluster for the named version.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub disabled: Option<Vec<FeatureGateStatusFeatureGatesDisabled>>,
    /// enabled is a list of all feature gates that are enabled in the cluster for the named version.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub enabled: Option<Vec<FeatureGateStatusFeatureGatesEnabled>>,
    /// version matches the version provided by the ClusterVersion and in the ClusterOperator.Status.Versions field.
    pub version: String,
}

#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct FeatureGateStatusFeatureGatesDisabled {
    /// name is the name of the FeatureGate.
    pub name: String,
}

#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct FeatureGateStatusFeatureGatesEnabled {
    /// name is the name of the FeatureGate.
    pub name: String,
}

