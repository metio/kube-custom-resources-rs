// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/spidernet-io/egressgateway/egressgateway.spidernet.io/v1beta1/egresstunnels.yaml --derive=Default --derive=PartialEq --smart-derive-elision
// kopium version: 0.21.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "egressgateway.spidernet.io", version = "v1beta1", kind = "EgressTunnel", plural = "egresstunnels")]
#[kube(status = "EgressTunnelStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct EgressTunnelSpec {
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct EgressTunnelStatus {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lastHeartbeatTime")]
    pub last_heartbeat_time: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub mark: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub phase: Option<EgressTunnelStatusPhase>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub tunnel: Option<EgressTunnelStatusTunnel>,
}

#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub enum EgressTunnelStatusPhase {
    Pending,
    Init,
    Failed,
    Ready,
    HeartbeatTimeout,
    NodeNotReady,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct EgressTunnelStatusTunnel {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub ipv4: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub ipv6: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub mac: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub parent: Option<EgressTunnelStatusTunnelParent>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct EgressTunnelStatusTunnelParent {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub ipv4: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub ipv6: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

