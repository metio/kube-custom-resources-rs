// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/aws/eks-anywhere/anywhere.eks.amazonaws.com/v1alpha1/eksareleases.yaml --derive=Default --derive=PartialEq
// kopium version: 0.20.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
}
use self::prelude::*;

/// EKSAReleaseSpec defines the desired state of EKSARelease.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "anywhere.eks.amazonaws.com", version = "v1alpha1", kind = "EKSARelease", plural = "eksareleases")]
#[kube(namespaced)]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct EKSAReleaseSpec {
    /// Manifest url to parse bundle information from for this EKS-A release
    #[serde(rename = "bundleManifestUrl")]
    pub bundle_manifest_url: String,
    /// Reference to a Bundles resource in the cluster
    #[serde(rename = "bundlesRef")]
    pub bundles_ref: EKSAReleaseBundlesRef,
    /// Git commit the component is built from, before any patches
    #[serde(rename = "gitCommit")]
    pub git_commit: String,
    /// Date of EKS-A Release
    #[serde(rename = "releaseDate")]
    pub release_date: String,
    /// EKS-A release semantic version
    pub version: String,
}

/// Reference to a Bundles resource in the cluster
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct EKSAReleaseBundlesRef {
    /// APIVersion refers to the Bundles APIVersion
    #[serde(rename = "apiVersion")]
    pub api_version: String,
    /// Name refers to the name of the Bundles object in the cluster
    pub name: String,
    /// Namespace refers to the Bundles's namespace
    pub namespace: String,
}

