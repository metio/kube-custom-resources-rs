// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/clusternet/clusternet/apps.clusternet.io/v1alpha1/localizations.yaml --derive=PartialEq
// kopium version: 0.17.0

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// LocalizationSpec defines the desired state of Localization
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, PartialEq)]
#[kube(group = "apps.clusternet.io", version = "v1alpha1", kind = "Localization", plural = "localizations")]
#[kube(namespaced)]
#[kube(schema = "disabled")]
pub struct LocalizationSpec {
    /// Feed holds references to the objects the Localization applies to.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub feed: Option<LocalizationFeed>,
    /// OverridePolicy specifies the override policy for this Localization.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "overridePolicy")]
    pub override_policy: Option<LocalizationOverridePolicy>,
    /// Overrides holds all the OverrideConfig.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub overrides: Option<Vec<LocalizationOverrides>>,
    /// Priority is an integer defining the relative importance of this Localization compared to others.
    /// Lower numbers are considered lower priority.
    /// And these Localization(s) will be applied by order from lower priority to higher.
    /// That means override values in lower Localization will be overridden by those in higher Localization.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
}

/// Feed holds references to the objects the Localization applies to.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct LocalizationFeed {
    /// APIVersion defines the versioned schema of this representation of an object.
    #[serde(rename = "apiVersion")]
    pub api_version: String,
    /// Kind is a string value representing the REST resource this object represents.
    /// In CamelCase.
    pub kind: String,
    /// Name of the target resource.
    pub name: String,
    /// Namespace of the target resource.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

/// LocalizationSpec defines the desired state of Localization
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub enum LocalizationOverridePolicy {
    ApplyNow,
    ApplyLater,
}

/// OverrideConfig holds information that describes a override config.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct LocalizationOverrides {
    /// Name indicate the OverrideConfig name.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// OverrideChart indicates whether the override value for the HelmChart CR.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "overrideChart")]
    pub override_chart: Option<bool>,
    /// Type specifies the override type for override value.
    #[serde(rename = "type")]
    pub r#type: LocalizationOverridesType,
    /// Value represents override value.
    pub value: String,
}

/// OverrideConfig holds information that describes a override config.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub enum LocalizationOverridesType {
    Helm,
    #[serde(rename = "JSONPatch")]
    JsonPatch,
    MergePatch,
}

