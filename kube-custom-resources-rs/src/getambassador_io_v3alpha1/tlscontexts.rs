// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename ./crd-catalog/emissary-ingress/emissary/getambassador.io/v3alpha1/tlscontexts.yaml
// kopium version: 0.16.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// TLSContextSpec defines the desired state of TLSContext
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug)]
#[kube(group = "getambassador.io", version = "v3alpha1", kind = "TLSContext", plural = "tlscontexts")]
#[kube(namespaced)]
#[kube(schema = "disabled")]
pub struct TLSContextSpec {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub alpn_protocols: Option<String>,
    /// AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: 
    ///  ambassador_id: - "default"
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub ambassador_id: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub ca_secret: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cacert_chain_file: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cert_chain_file: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cert_required: Option<bool>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cipher_suites: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub crl_secret: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub ecdh_curves: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub hosts: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub max_tls_version: Option<TLSContextMaxTlsVersion>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub min_tls_version: Option<TLSContextMinTlsVersion>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub private_key_file: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub redirect_cleartext_from: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub secret_namespacing: Option<bool>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub sni: Option<String>,
}

/// TLSContextSpec defines the desired state of TLSContext
#[derive(Serialize, Deserialize, Clone, Debug)]
pub enum TLSContextMaxTlsVersion {
    #[serde(rename = "v1.0")]
    V10,
    #[serde(rename = "v1.1")]
    V11,
    #[serde(rename = "v1.2")]
    V12,
    #[serde(rename = "v1.3")]
    V13,
}

/// TLSContextSpec defines the desired state of TLSContext
#[derive(Serialize, Deserialize, Clone, Debug)]
pub enum TLSContextMinTlsVersion {
    #[serde(rename = "v1.0")]
    V10,
    #[serde(rename = "v1.1")]
    V11,
    #[serde(rename = "v1.2")]
    V12,
    #[serde(rename = "v1.3")]
    V13,
}

