// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/apecloud/kubeblocks/apps.kubeblocks.io/v1alpha1/componentclassdefinitions.yaml --derive=Default --derive=PartialEq
// kopium version: 0.17.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use k8s_openapi::apimachinery::pkg::util::intstr::IntOrString;

/// ComponentClassDefinitionSpec defines the desired state of ComponentClassDefinition
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "apps.kubeblocks.io", version = "v1alpha1", kind = "ComponentClassDefinition", plural = "componentclassdefinitions")]
#[kube(status = "ComponentClassDefinitionStatus")]
#[kube(schema = "disabled")]
pub struct ComponentClassDefinitionSpec {
    /// group defines a list of class series that conform to the same constraint.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<ComponentClassDefinitionGroups>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ComponentClassDefinitionGroups {
    /// series is a series of class definitions.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub series: Option<Vec<ComponentClassDefinitionGroupsSeries>>,
    /// template is a class definition template that uses the Go template syntax and allows for variable declaration. When defining a class in Series, specifying the variable's value is sufficient, as the complete class definition will be generated through rendering the template. 
    ///  For example: 
    ///  ```yaml template: | cpu: "{{ or .cpu 1 }}" memory: "{{ or .memory 4 }}Gi" ```
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub template: Option<String>,
    /// vars defines the variables declared in the template and will be used to generating the complete class definition by render the template.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub vars: Option<Vec<String>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ComponentClassDefinitionGroupsSeries {
    /// classes are definitions of classes that come in two forms. In the first form, only ComponentClass.Args need to be defined, and the complete class definition is generated by rendering the ComponentClassGroup.Template and Name. In the second form, the Name, CPU and Memory must be defined.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub classes: Option<Vec<ComponentClassDefinitionGroupsSeriesClasses>>,
    /// namingTemplate is a template that uses the Go template syntax and allows for referencing variables defined in ComponentClassGroup.Template. This enables dynamic generation of class names. For example: name: "general-{{ .cpu }}c{{ .memory }}g"
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "namingTemplate")]
    pub naming_template: Option<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ComponentClassDefinitionGroupsSeriesClasses {
    /// args are variable's value
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub args: Option<Vec<String>>,
    /// the CPU of the class
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cpu: Option<IntOrString>,
    /// the memory of the class
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub memory: Option<IntOrString>,
    /// name is the class name
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

/// ComponentClassDefinitionStatus defines the observed state of ComponentClassDefinition
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ComponentClassDefinitionStatus {
    /// classes is the list of classes that have been observed for this ComponentClassDefinition
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub classes: Option<Vec<ComponentClassDefinitionStatusClasses>>,
    /// observedGeneration is the most recent generation observed for this ComponentClassDefinition. It corresponds to the ComponentClassDefinition's generation, which is updated on mutation by the API Server.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "observedGeneration")]
    pub observed_generation: Option<i64>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ComponentClassDefinitionStatusClasses {
    /// args are variable's value
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub args: Option<Vec<String>>,
    /// the CPU of the class
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cpu: Option<IntOrString>,
    /// the memory of the class
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub memory: Option<IntOrString>,
    /// name is the class name
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

