// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/kubernetes-sigs/boskos/boskos.k8s.io/v1/resources.yaml --derive=Default --derive=PartialEq
// kopium version: 0.18.0

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;

/// Holds information that are not likely to change
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "boskos.k8s.io", version = "v1", kind = "ResourceObject", plural = "resources")]
#[kube(namespaced)]
#[kube(schema = "disabled")]
pub struct ResourceObjectSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "type")]
    pub r#type: Option<String>,
}

/// Holds information that are likely to change
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ResourceObjectStatus {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "expirationDate")]
    pub expiration_date: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lastUpdate")]
    pub last_update: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "userData")]
    pub user_data: Option<BTreeMap<String, serde_json::Value>>,
}

