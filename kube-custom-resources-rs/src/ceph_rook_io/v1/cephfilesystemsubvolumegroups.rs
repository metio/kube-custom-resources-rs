// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/rook/rook/ceph.rook.io/v1/cephfilesystemsubvolumegroups.yaml --derive=Default --derive=PartialEq
// kopium version: 0.16.5

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;

/// Spec represents the specification of a Ceph Filesystem SubVolumeGroup
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "ceph.rook.io", version = "v1", kind = "CephFilesystemSubVolumeGroup", plural = "cephfilesystemsubvolumegroups")]
#[kube(namespaced)]
#[kube(status = "CephFilesystemSubVolumeGroupStatus")]
#[kube(schema = "disabled")]
pub struct CephFilesystemSubVolumeGroupSpec {
    /// FilesystemName is the name of Ceph Filesystem SubVolumeGroup volume name.
    #[serde(rename = "filesystemName")]
    pub filesystem_name: String,
    /// The name of the subvolume group. If not set, the default is the name of the subvolumeGroup CR.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Pinning configuration of CephFilesystemSubVolumeGroup, reference https://docs.ceph.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub pinning: Option<CephFilesystemSubVolumeGroupPinning>,
}

/// Pinning configuration of CephFilesystemSubVolumeGroup, reference https://docs.ceph.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CephFilesystemSubVolumeGroupPinning {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub distributed: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub export: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub random: Option<f64>,
}

/// Status represents the status of a CephFilesystem SubvolumeGroup
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CephFilesystemSubVolumeGroupStatus {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub info: Option<BTreeMap<String, String>>,
    /// ObservedGeneration is the latest generation observed by the controller.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "observedGeneration")]
    pub observed_generation: Option<i64>,
    /// ConditionType represent a resource's status
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub phase: Option<String>,
}

