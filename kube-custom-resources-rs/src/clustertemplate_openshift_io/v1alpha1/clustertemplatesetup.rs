// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/stolostron/cluster-templates-operator/clustertemplate.openshift.io/v1alpha1/clustertemplatesetup.yaml --derive=Default --derive=PartialEq
// kopium version: 0.16.5

use kube::CustomResource;
use serde::{Serialize, Deserialize};

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "clustertemplate.openshift.io", version = "v1alpha1", kind = "ClusterTemplateSetup", plural = "clustertemplatesetup")]
#[kube(status = "ClusterTemplateSetupStatus")]
#[kube(schema = "disabled")]
pub struct ClusterTemplateSetupSpec {
    /// Array of ArgoCD applicationset names which are used for post installation setup of the cluster
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "clusterSetup")]
    pub cluster_setup: Option<Vec<String>>,
    /// Skip the registeration of the cluster to the hub cluster
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "skipClusterRegistration")]
    pub skip_cluster_registration: Option<bool>,
}

/// ClusterTemplateStatus defines the observed state of ClusterTemplateSetup
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ClusterTemplateSetupStatus {
    /// Describes helm chart properties and schema for every cluster setup step
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "clusterSetup")]
    pub cluster_setup: Option<Vec<ClusterTemplateSetupStatusClusterSetup>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct ClusterTemplateSetupStatusClusterSetup {
    /// Contain information about failure during fetching helm chart
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub error: Option<String>,
    /// Name of the cluster setup step
    pub name: String,
    /// Content of helm chart values.schema.json
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    /// Content of helm chart values.yaml
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub values: Option<String>,
}

