// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/gravitational/teleport/resources.teleport.dev/v1/teleportloginrules.yaml --derive=PartialEq
// kopium version: 0.17.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;
use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;

/// LoginRule resource definition v1 from Teleport
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, PartialEq)]
#[kube(group = "resources.teleport.dev", version = "v1", kind = "TeleportLoginRule", plural = "teleportloginrules")]
#[kube(namespaced)]
#[kube(status = "TeleportLoginRuleStatus")]
#[kube(schema = "disabled")]
pub struct TeleportLoginRuleSpec {
    /// Priority is the priority of the login rule relative to other login rules in the same cluster. Login rules with a lower numbered priority will be evaluated first.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
    /// TraitsExpression is a predicate expression which should return the desired traits for the user upon login.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub traits_expression: Option<String>,
    /// TraitsMap is a map of trait keys to lists of predicate expressions which should evaluate to the desired values for that trait.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub traits_map: Option<BTreeMap<String, String>>,
}

/// Status defines the observed state of the Teleport resource
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct TeleportLoginRuleStatus {
    /// Conditions represent the latest available observations of an object's state
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "teleportResourceID")]
    pub teleport_resource_id: Option<i64>,
}

