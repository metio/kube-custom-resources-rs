// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/kubernetes-sigs/node-feature-discovery-operator/topology.node.k8s.io/v1alpha1/noderesourcetopologies.yaml --derive=Default --derive=PartialEq
// kopium version: 0.16.5


use serde::{Serialize, Deserialize};
use k8s_openapi::apimachinery::pkg::util::intstr::IntOrString;

/// Zone represents a resource topology zone, e.g. socket, node, die or core.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct NodeResourceTopologyZones {
    /// AttributeList contains an array of AttributeInfo objects.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Vec<NodeResourceTopologyZonesAttributes>>,
    /// CostList contains an array of CostInfo objects.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub costs: Option<Vec<NodeResourceTopologyZonesCosts>>,
    pub name: String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub parent: Option<String>,
    /// ResourceInfoList contains an array of ResourceInfo objects.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub resources: Option<Vec<NodeResourceTopologyZonesResources>>,
    #[serde(rename = "type")]
    pub r#type: String,
}

/// AttributeInfo contains one attribute of a Zone.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct NodeResourceTopologyZonesAttributes {
    pub name: String,
    pub value: String,
}

/// CostInfo describes the cost (or distance) between two Zones.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct NodeResourceTopologyZonesCosts {
    pub name: String,
    pub value: i64,
}

/// ResourceInfo contains information about one resource type.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct NodeResourceTopologyZonesResources {
    /// Allocatable quantity of the resource, corresponding to allocatable in node status, i.e. total amount of this resource available to be used by pods.
    pub allocatable: IntOrString,
    /// Available is the amount of this resource currently available for new (to be scheduled) pods, i.e. Allocatable minus the resources reserved by currently running pods.
    pub available: IntOrString,
    /// Capacity of the resource, corresponding to capacity in node status, i.e. total amount of this resource that the node has.
    pub capacity: IntOrString,
    /// Name of the resource.
    pub name: String,
}

