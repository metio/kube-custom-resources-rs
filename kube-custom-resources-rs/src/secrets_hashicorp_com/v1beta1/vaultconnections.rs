// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/hashicorp/vault-secrets-operator/secrets.hashicorp.com/v1beta1/vaultconnections.yaml --derive=Default --derive=PartialEq
// kopium version: 0.17.0

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;

/// VaultConnectionSpec defines the desired state of VaultConnection
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "secrets.hashicorp.com", version = "v1beta1", kind = "VaultConnection", plural = "vaultconnections")]
#[kube(namespaced)]
#[kube(status = "VaultConnectionStatus")]
#[kube(schema = "disabled")]
pub struct VaultConnectionSpec {
    /// Address of the Vault server
    pub address: String,
    /// CACertSecretRef is the name of a Kubernetes secret containing the trusted PEM encoded CA certificate chain as `ca.crt`.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "caCertSecretRef")]
    pub ca_cert_secret_ref: Option<String>,
    /// Headers to be included in all Vault requests.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub headers: Option<BTreeMap<String, String>>,
    /// SkipTLSVerify for TLS connections.
    #[serde(rename = "skipTLSVerify")]
    pub skip_tls_verify: bool,
    /// TLSServerName to use as the SNI host for TLS connections.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "tlsServerName")]
    pub tls_server_name: Option<String>,
}

/// VaultConnectionStatus defines the observed state of VaultConnection
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct VaultConnectionStatus {
    /// Valid auth mechanism.
    pub valid: bool,
}

