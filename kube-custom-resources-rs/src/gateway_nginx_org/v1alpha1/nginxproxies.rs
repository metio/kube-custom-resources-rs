// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/nginxinc/nginx-kubernetes-gateway/gateway.nginx.org/v1alpha1/nginxproxies.yaml --derive=Default --derive=PartialEq
// kopium version: 0.18.0

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// Spec defines the desired state of the NginxProxy.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "gateway.nginx.org", version = "v1alpha1", kind = "NginxProxy", plural = "nginxproxies")]
#[kube(schema = "disabled")]
pub struct NginxProxySpec {
    /// Telemetry specifies the OpenTelemetry configuration.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub telemetry: Option<NginxProxyTelemetry>,
}

/// Telemetry specifies the OpenTelemetry configuration.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct NginxProxyTelemetry {
    /// Exporter specifies OpenTelemetry export parameters.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub exporter: Option<NginxProxyTelemetryExporter>,
    /// ServiceName is the "service.name" attribute of the OpenTelemetry resource.
    /// Default is 'ngf:<gateway-namespace>:<gateway-name>'. If a value is provided by the user,
    /// then the default becomes a prefix to that value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "serviceName")]
    pub service_name: Option<String>,
    /// SpanAttributes are custom key/value attributes that are added to each span.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "spanAttributes")]
    pub span_attributes: Option<Vec<NginxProxyTelemetrySpanAttributes>>,
}

/// Exporter specifies OpenTelemetry export parameters.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct NginxProxyTelemetryExporter {
    /// BatchCount is the number of pending batches per worker, spans exceeding the limit are dropped.
    /// Default: https://nginx.org/en/docs/ngx_otel_module.html#otel_exporter
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "batchCount")]
    pub batch_count: Option<i32>,
    /// BatchSize is the maximum number of spans to be sent in one batch per worker.
    /// Default: https://nginx.org/en/docs/ngx_otel_module.html#otel_exporter
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "batchSize")]
    pub batch_size: Option<i32>,
    /// Endpoint is the address of OTLP/gRPC endpoint that will accept telemetry data.
    /// Format: alphanumeric hostname with optional http scheme and optional port.
    pub endpoint: String,
    /// Interval is the maximum interval between two exports.
    /// Default: https://nginx.org/en/docs/ngx_otel_module.html#otel_exporter
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub interval: Option<String>,
}

/// SpanAttribute is a key value pair to be added to a tracing span.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct NginxProxyTelemetrySpanAttributes {
    /// Key is the key for a span attribute.
    /// Format: must have all '"' escaped and must not contain any '$' or end with an unescaped '\'
    pub key: String,
    /// Value is the value for a span attribute.
    /// Format: must have all '"' escaped and must not contain any '$' or end with an unescaped '\'
    pub value: String,
}

