// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename ./crd-catalog/rook/rook/ceph.rook.io/v1/cephobjectzonegroups.yaml
// kopium version: 0.16.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};

/// ObjectZoneGroupSpec represent the spec of an ObjectZoneGroup
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug)]
#[kube(group = "ceph.rook.io", version = "v1", kind = "CephObjectZoneGroup", plural = "cephobjectzonegroups")]
#[kube(namespaced)]
#[kube(status = "CephObjectZoneGroupStatus")]
#[kube(schema = "disabled")]
pub struct CephObjectZoneGroupSpec {
    /// The display name for the ceph users
    pub realm: String,
}

/// Status represents the status of an object
#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct CephObjectZoneGroupStatus {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<CephObjectZoneGroupStatusConditions>>,
    /// ObservedGeneration is the latest generation observed by the controller.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "observedGeneration")]
    pub observed_generation: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub phase: Option<String>,
}

/// Condition represents a status condition on any Rook-Ceph Custom Resource.
#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct CephObjectZoneGroupStatusConditions {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lastHeartbeatTime")]
    pub last_heartbeat_time: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lastTransitionTime")]
    pub last_transition_time: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// ConditionReason is a reason for a condition
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// ConditionType represent a resource's status
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "type")]
    pub r#type: Option<String>,
}

