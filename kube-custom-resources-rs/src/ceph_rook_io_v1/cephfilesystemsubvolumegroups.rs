// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename ./crd-catalog/rook/rook/ceph.rook.io/v1/cephfilesystemsubvolumegroups.yaml
// kopium version: 0.16.1

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;

/// Spec represents the specification of a Ceph Filesystem SubVolumeGroup
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug)]
#[kube(group = "ceph.rook.io", version = "v1", kind = "CephFilesystemSubVolumeGroup", plural = "cephfilesystemsubvolumegroups")]
#[kube(namespaced)]
#[kube(status = "CephFilesystemSubVolumeGroupStatus")]
#[kube(schema = "disabled")]
pub struct CephFilesystemSubVolumeGroupSpec {
    /// FilesystemName is the name of Ceph Filesystem SubVolumeGroup volume name. Typically it's the name of the CephFilesystem CR. If not coming from the CephFilesystem CR, it can be retrieved from the list of Ceph Filesystem volumes with `ceph fs volume ls`. To learn more about Ceph Filesystem abstractions see https://docs.ceph.com/en/latest/cephfs/fs-volumes/#fs-volumes-and-subvolumes
    #[serde(rename = "filesystemName")]
    pub filesystem_name: String,
}

/// Status represents the status of a CephFilesystem SubvolumeGroup
#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct CephFilesystemSubVolumeGroupStatus {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub info: Option<BTreeMap<String, String>>,
    /// ObservedGeneration is the latest generation observed by the controller.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "observedGeneration")]
    pub observed_generation: Option<i64>,
    /// ConditionType represent a resource's status
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub phase: Option<String>,
}

