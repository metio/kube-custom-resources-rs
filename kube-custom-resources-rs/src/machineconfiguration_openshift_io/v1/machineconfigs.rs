// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --filename=./crd-catalog/openshift/api/machineconfiguration.openshift.io/v1/machineconfigs.yaml --derive=Default --derive=PartialEq
// kopium version: 0.16.5

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;

/// MachineConfigSpec is the spec for MachineConfig
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "machineconfiguration.openshift.io", version = "v1", kind = "MachineConfig", plural = "machineconfigs")]
#[kube(schema = "disabled")]
pub struct MachineConfigSpec {
    /// BaseOSExtensionsContainerImage specifies the remote location that will be used to fetch the extensions container matching a new-format OS image
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "baseOSExtensionsContainerImage")]
    pub base_os_extensions_container_image: Option<String>,
    /// Config is a Ignition Config object.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub config: Option<BTreeMap<String, serde_json::Value>>,
    /// extensions contains a list of additional features that can be enabled on host
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub extensions: Option<Vec<String>>,
    /// fips controls FIPS mode
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub fips: Option<bool>,
    /// kernelArguments contains a list of kernel arguments to be added
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kernelArguments")]
    pub kernel_arguments: Option<Vec<String>>,
    /// kernelType contains which kernel we want to be running like default (traditional), realtime, 64k-pages (aarch64 only).
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kernelType")]
    pub kernel_type: Option<String>,
    /// OSImageURL specifies the remote location that will be used to fetch the OS.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "osImageURL")]
    pub os_image_url: Option<String>,
}

