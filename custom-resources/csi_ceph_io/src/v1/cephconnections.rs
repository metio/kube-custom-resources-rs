// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/ceph/ceph-csi-operator/csi.ceph.io/v1/cephconnections.yaml
// kopium version: 0.22.5

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
}
use self::prelude::*;

/// CephConnectionSpec defines the desired state of CephConnection
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "csi.ceph.io", version = "v1", kind = "CephConnection", plural = "cephconnections")]
#[kube(namespaced)]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct CephConnectionSpec {
    pub monitors: Vec<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "rbdMirrorDaemonCount")]
    pub rbd_mirror_daemon_count: Option<i64>,
    /// ReadAffinitySpec capture Ceph CSI read affinity settings
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "readAffinity")]
    pub read_affinity: Option<CephConnectionReadAffinity>,
}

/// ReadAffinitySpec capture Ceph CSI read affinity settings
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CephConnectionReadAffinity {
    #[serde(rename = "crushLocationLabels")]
    pub crush_location_labels: Vec<String>,
}

/// CephConnectionStatus defines the observed state of CephConnection
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CephConnectionStatus {
}

