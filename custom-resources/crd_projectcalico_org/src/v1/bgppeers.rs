// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/projectcalico/calico/crd.projectcalico.org/v1/bgppeers.yaml
// kopium version: 0.21.2

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "crd.projectcalico.org", version = "v1", kind = "BGPPeer", plural = "bgppeers")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct BGPPeerSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "asNumber")]
    pub as_number: Option<i32>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "keepOriginalNextHop")]
    pub keep_original_next_hop: Option<bool>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "localWorkloadSelector")]
    pub local_workload_selector: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "maxRestartTime")]
    pub max_restart_time: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub node: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "nodeSelector")]
    pub node_selector: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "numAllowedLocalASNumbers")]
    pub num_allowed_local_as_numbers: Option<i32>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub password: Option<BGPPeerPassword>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "peerIP")]
    pub peer_ip: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "peerSelector")]
    pub peer_selector: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "reachableBy")]
    pub reachable_by: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sourceAddress")]
    pub source_address: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ttlSecurity")]
    pub ttl_security: Option<i64>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BGPPeerPassword {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "secretKeyRef")]
    pub secret_key_ref: Option<BGPPeerPasswordSecretKeyRef>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BGPPeerPasswordSecretKeyRef {
    pub key: String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub optional: Option<bool>,
}

