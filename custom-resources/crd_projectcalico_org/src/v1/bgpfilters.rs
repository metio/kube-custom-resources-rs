// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/projectcalico/calico/crd.projectcalico.org/v1/bgpfilters.yaml
// kopium version: 0.22.4

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "crd.projectcalico.org", version = "v1", kind = "BGPFilter", plural = "bgpfilters")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct BgpFilterSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "exportV4")]
    pub export_v4: Option<Vec<BgpFilterExportV4>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "exportV6")]
    pub export_v6: Option<Vec<BgpFilterExportV6>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "importV4")]
    pub import_v4: Option<Vec<BgpFilterImportV4>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "importV6")]
    pub import_v6: Option<Vec<BgpFilterImportV6>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterExportV4 {
    pub action: String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cidr: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub interface: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "matchOperator")]
    pub match_operator: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "prefixLength")]
    pub prefix_length: Option<BgpFilterExportV4PrefixLength>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterExportV4PrefixLength {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub max: Option<i32>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub min: Option<i32>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterExportV6 {
    pub action: String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cidr: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub interface: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "matchOperator")]
    pub match_operator: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "prefixLength")]
    pub prefix_length: Option<BgpFilterExportV6PrefixLength>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterExportV6PrefixLength {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub max: Option<i32>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub min: Option<i32>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterImportV4 {
    pub action: String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cidr: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub interface: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "matchOperator")]
    pub match_operator: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "prefixLength")]
    pub prefix_length: Option<BgpFilterImportV4PrefixLength>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterImportV4PrefixLength {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub max: Option<i32>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub min: Option<i32>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterImportV6 {
    pub action: String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub cidr: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub interface: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "matchOperator")]
    pub match_operator: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "prefixLength")]
    pub prefix_length: Option<BgpFilterImportV6PrefixLength>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BgpFilterImportV6PrefixLength {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub max: Option<i32>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub min: Option<i32>,
}

