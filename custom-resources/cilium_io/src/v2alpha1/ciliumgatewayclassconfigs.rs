// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/cilium/cilium/cilium.io/v2alpha1/ciliumgatewayclassconfigs.yaml
// kopium version: 0.21.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
    pub use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;
}
use self::prelude::*;

/// Spec is a human-readable of a GatewayClass configuration.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "cilium.io", version = "v2alpha1", kind = "CiliumGatewayClassConfig", plural = "ciliumgatewayclassconfigs")]
#[kube(namespaced)]
#[kube(status = "CiliumGatewayClassConfigStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct CiliumGatewayClassConfigSpec {
    /// Description helps describe a GatewayClass configuration with more details.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Service specifies the configuration for the generated Service.
    /// Note that not all fields from upstream Service.Spec are supported
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub service: Option<CiliumGatewayClassConfigService>,
}

/// Service specifies the configuration for the generated Service.
/// Note that not all fields from upstream Service.Spec are supported
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CiliumGatewayClassConfigService {
    /// Sets the Service.Spec.AllocateLoadBalancerNodePorts in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "allocateLoadBalancerNodePorts")]
    pub allocate_load_balancer_node_ports: Option<bool>,
    /// Sets the Service.Spec.ExternalTrafficPolicy in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "externalTrafficPolicy")]
    pub external_traffic_policy: Option<String>,
    /// Sets the Service.Spec.IPFamilies in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ipFamilies")]
    pub ip_families: Option<Vec<String>>,
    /// Sets the Service.Spec.IPFamilyPolicy in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ipFamilyPolicy")]
    pub ip_family_policy: Option<String>,
    /// Sets the Service.Spec.LoadBalancerClass in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "loadBalancerClass")]
    pub load_balancer_class: Option<String>,
    /// Sets the Service.Spec.LoadBalancerSourceRanges in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "loadBalancerSourceRanges")]
    pub load_balancer_source_ranges: Option<Vec<String>>,
    /// LoadBalancerSourceRangesPolicy defines the policy for the LoadBalancerSourceRanges if the incoming traffic
    /// is allowed or denied.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "loadBalancerSourceRangesPolicy")]
    pub load_balancer_source_ranges_policy: Option<CiliumGatewayClassConfigServiceLoadBalancerSourceRangesPolicy>,
    /// Sets the Service.Spec.TrafficDistribution in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "trafficDistribution")]
    pub traffic_distribution: Option<String>,
    /// Sets the Service.Spec.Type in generated Service objects to the given value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "type")]
    pub r#type: Option<String>,
}

/// Service specifies the configuration for the generated Service.
/// Note that not all fields from upstream Service.Spec are supported
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub enum CiliumGatewayClassConfigServiceLoadBalancerSourceRangesPolicy {
    Allow,
    Deny,
}

/// Status is the status of the policy.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CiliumGatewayClassConfigStatus {
    /// Current service state
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
}

