// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/perses/perses-operator/perses.dev/v1alpha1/persesdatasources.yaml
// kopium version: 0.21.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
    pub use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "perses.dev", version = "v1alpha1", kind = "PersesDatasource", plural = "persesdatasources")]
#[kube(namespaced)]
#[kube(status = "PersesDatasourceStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct PersesDatasourceSpec {
    pub default: bool,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub display: Option<PersesDatasourceDisplay>,
    /// Plugin will contain the datasource configuration.
    /// The data typed is available in Cue.
    pub plugin: PersesDatasourcePlugin,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct PersesDatasourceDisplay {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

/// Plugin will contain the datasource configuration.
/// The data typed is available in Cue.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct PersesDatasourcePlugin {
    pub kind: String,
    pub spec: serde_json::Value,
}

/// PersesDatasourceStatus defines the observed state of PersesDatasource
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct PersesDatasourceStatus {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
}

