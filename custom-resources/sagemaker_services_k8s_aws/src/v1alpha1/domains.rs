// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/aws-controllers-k8s/sagemaker-controller/sagemaker.services.k8s.aws/v1alpha1/domains.yaml
// kopium version: 0.22.5

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
    pub use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;
}
use self::prelude::*;

/// DomainSpec defines the desired state of Domain.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "sagemaker.services.k8s.aws", version = "v1alpha1", kind = "Domain", plural = "domains")]
#[kube(namespaced)]
#[kube(status = "DomainStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct DomainSpec {
    /// Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.
    /// 
    ///    * PublicInternetOnly - Non-EFS traffic is through a VPC managed by Amazon
    ///    SageMaker AI, which allows direct internet access
    /// 
    ///    * VpcOnly - All traffic is through the specified VPC and subnets
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "appNetworkAccessType")]
    pub app_network_access_type: Option<String>,
    /// The entity that creates and manages the required security groups for inter-app
    /// communication in VPCOnly mode. Required when CreateDomain.AppNetworkAccessType
    /// is VPCOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn
    /// is provided. If setting up the domain for use with RStudio, this value must
    /// be set to Service.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "appSecurityGroupManagement")]
    pub app_security_group_management: Option<String>,
    /// The mode of authentication that members use to access the domain.
    #[serde(rename = "authMode")]
    pub auth_mode: String,
    /// The default settings for shared spaces that users create in the domain.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultSpaceSettings")]
    pub default_space_settings: Option<DomainDefaultSpaceSettings>,
    /// The default settings to use to create a user profile when UserSettings isn't
    /// specified in the call to the CreateUserProfile API.
    /// 
    /// SecurityGroups is aggregated when specified in both calls. For all other
    /// settings in UserSettings, the values specified in CreateUserProfile take
    /// precedence over those specified in CreateDomain.
    #[serde(rename = "defaultUserSettings")]
    pub default_user_settings: DomainDefaultUserSettings,
    /// A name for the domain.
    /// 
    /// Regex Pattern: `^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$`
    #[serde(rename = "domainName")]
    pub domain_name: String,
    /// A collection of Domain settings.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainSettings")]
    pub domain_settings: Option<DomainDomainSettings>,
    /// Use KmsKeyId.
    /// 
    /// Regex Pattern: `^[a-zA-Z0-9:/_-]*$`
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "homeEFSFileSystemKMSKeyID")]
    pub home_efs_file_system_kms_key_id: Option<String>,
    /// SageMaker AI uses Amazon Web Services KMS to encrypt EFS and EBS volumes
    /// attached to the domain with an Amazon Web Services managed key by default.
    /// For more control, specify a customer managed key.
    /// 
    /// Regex Pattern: `^[a-zA-Z0-9:/_-]*$`
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kmsKeyID")]
    pub kms_key_id: Option<String>,
    /// The VPC subnets that the domain uses for communication.
    /// 
    /// The field is optional when the AppNetworkAccessType parameter is set to PublicInternetOnly
    /// for domains created from Amazon SageMaker Unified Studio.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "subnetIDs")]
    pub subnet_i_ds: Option<Vec<String>>,
    /// Tags to associated with the Domain. Each tag consists of a key and an optional
    /// value. Tag keys must be unique per resource. Tags are searchable using the
    /// Search API.
    /// 
    /// Tags that you specify for the Domain are also added to all Apps that the
    /// Domain launches.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<DomainTags>>,
    /// The ID of the Amazon Virtual Private Cloud (VPC) that the domain uses for
    /// communication.
    /// 
    /// The field is optional when the AppNetworkAccessType parameter is set to PublicInternetOnly
    /// for domains created from Amazon SageMaker Unified Studio.
    /// 
    /// Regex Pattern: `^[-0-9a-zA-Z]+$`
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "vpcID")]
    pub vpc_id: Option<String>,
}

/// The default settings for shared spaces that users create in the domain.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customFileSystemConfigs")]
    pub custom_file_system_configs: Option<Vec<DomainDefaultSpaceSettingsCustomFileSystemConfigs>>,
    /// Details about the POSIX identity that is used for file system operations.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customPosixUserConfig")]
    pub custom_posix_user_config: Option<DomainDefaultSpaceSettingsCustomPosixUserConfig>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "executionRole")]
    pub execution_role: Option<String>,
    /// The settings for the JupyterLab application.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "jupyterLabAppSettings")]
    pub jupyter_lab_app_settings: Option<DomainDefaultSpaceSettingsJupyterLabAppSettings>,
    /// The JupyterServer app settings.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "jupyterServerAppSettings")]
    pub jupyter_server_app_settings: Option<DomainDefaultSpaceSettingsJupyterServerAppSettings>,
    /// The KernelGateway app settings.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kernelGatewayAppSettings")]
    pub kernel_gateway_app_settings: Option<DomainDefaultSpaceSettingsKernelGatewayAppSettings>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "securityGroups")]
    pub security_groups: Option<Vec<String>>,
    /// The default storage settings for a space.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "spaceStorageSettings")]
    pub space_storage_settings: Option<DomainDefaultSpaceSettingsSpaceStorageSettings>,
}

/// The settings for assigning a custom file system to a user profile or space
/// for an Amazon SageMaker AI Domain. Permitted users can access this file system
/// in Amazon SageMaker AI Studio.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsCustomFileSystemConfigs {
    /// The settings for assigning a custom Amazon EFS file system to a user profile
    /// or space for an Amazon SageMaker AI Domain.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "efsFileSystemConfig")]
    pub efs_file_system_config: Option<DomainDefaultSpaceSettingsCustomFileSystemConfigsEfsFileSystemConfig>,
    /// The settings for assigning a custom Amazon FSx for Lustre file system to
    /// a user profile or space for an Amazon SageMaker Domain.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fSxLustreFileSystemConfig")]
    pub f_sx_lustre_file_system_config: Option<DomainDefaultSpaceSettingsCustomFileSystemConfigsFSxLustreFileSystemConfig>,
    /// Configuration for the custom Amazon S3 file system.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "s3FileSystemConfig")]
    pub s3_file_system_config: Option<DomainDefaultSpaceSettingsCustomFileSystemConfigsS3FileSystemConfig>,
}

/// The settings for assigning a custom Amazon EFS file system to a user profile
/// or space for an Amazon SageMaker AI Domain.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsCustomFileSystemConfigsEfsFileSystemConfig {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemID")]
    pub file_system_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemPath")]
    pub file_system_path: Option<String>,
}

/// The settings for assigning a custom Amazon FSx for Lustre file system to
/// a user profile or space for an Amazon SageMaker Domain.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsCustomFileSystemConfigsFSxLustreFileSystemConfig {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemID")]
    pub file_system_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemPath")]
    pub file_system_path: Option<String>,
}

/// Configuration for the custom Amazon S3 file system.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsCustomFileSystemConfigsS3FileSystemConfig {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "mountPath")]
    pub mount_path: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "s3URI")]
    pub s3_uri: Option<String>,
}

/// Details about the POSIX identity that is used for file system operations.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsCustomPosixUserConfig {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub gid: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub uid: Option<i64>,
}

/// The settings for the JupyterLab application.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsJupyterLabAppSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "codeRepositories")]
    pub code_repositories: Option<Vec<DomainDefaultSpaceSettingsJupyterLabAppSettingsCodeRepositories>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customImages")]
    pub custom_images: Option<Vec<DomainDefaultSpaceSettingsJupyterLabAppSettingsCustomImages>>,
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultSpaceSettingsJupyterLabAppSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARNs")]
    pub lifecycle_config_ar_ns: Option<Vec<String>>,
}

/// A Git repository that SageMaker AI automatically displays to users for cloning
/// in the JupyterServer application.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsJupyterLabAppSettingsCodeRepositories {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "repositoryURL")]
    pub repository_url: Option<String>,
}

/// A custom SageMaker AI image. For more information, see Bring your own SageMaker
/// AI image (<https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).>
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsJupyterLabAppSettingsCustomImages {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "appImageConfigName")]
    pub app_image_config_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageName")]
    pub image_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageVersionNumber")]
    pub image_version_number: Option<i64>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsJupyterLabAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// The JupyterServer app settings.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsJupyterServerAppSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "codeRepositories")]
    pub code_repositories: Option<Vec<DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositories>>,
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARNs")]
    pub lifecycle_config_ar_ns: Option<Vec<String>>,
}

/// A Git repository that SageMaker AI automatically displays to users for cloning
/// in the JupyterServer application.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositories {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "repositoryURL")]
    pub repository_url: Option<String>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// The KernelGateway app settings.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsKernelGatewayAppSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customImages")]
    pub custom_images: Option<Vec<DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImages>>,
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARNs")]
    pub lifecycle_config_ar_ns: Option<Vec<String>>,
}

/// A custom SageMaker AI image. For more information, see Bring your own SageMaker
/// AI image (<https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).>
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImages {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "appImageConfigName")]
    pub app_image_config_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageName")]
    pub image_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageVersionNumber")]
    pub image_version_number: Option<i64>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// The default storage settings for a space.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsSpaceStorageSettings {
    /// A collection of default EBS storage settings that apply to spaces created
    /// within a domain or user profile.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultEBSStorageSettings")]
    pub default_ebs_storage_settings: Option<DomainDefaultSpaceSettingsSpaceStorageSettingsDefaultEbsStorageSettings>,
}

/// A collection of default EBS storage settings that apply to spaces created
/// within a domain or user profile.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultSpaceSettingsSpaceStorageSettingsDefaultEbsStorageSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultEBSVolumeSizeInGb")]
    pub default_ebs_volume_size_in_gb: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "maximumEBSVolumeSizeInGb")]
    pub maximum_ebs_volume_size_in_gb: Option<i64>,
}

/// The default settings to use to create a user profile when UserSettings isn't
/// specified in the call to the CreateUserProfile API.
/// 
/// SecurityGroups is aggregated when specified in both calls. For all other
/// settings in UserSettings, the values specified in CreateUserProfile take
/// precedence over those specified in CreateDomain.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettings {
    /// The Code Editor application settings.
    /// 
    /// For more information about Code Editor, see Get started with Code Editor
    /// in Amazon SageMaker (<https://docs.aws.amazon.com/sagemaker/latest/dg/code-editor.html).>
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "codeEditorAppSettings")]
    pub code_editor_app_settings: Option<DomainDefaultUserSettingsCodeEditorAppSettings>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customFileSystemConfigs")]
    pub custom_file_system_configs: Option<Vec<DomainDefaultUserSettingsCustomFileSystemConfigs>>,
    /// Details about the POSIX identity that is used for file system operations.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customPosixUserConfig")]
    pub custom_posix_user_config: Option<DomainDefaultUserSettingsCustomPosixUserConfig>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultLandingURI")]
    pub default_landing_uri: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "executionRole")]
    pub execution_role: Option<String>,
    /// The settings for the JupyterLab application.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "jupyterLabAppSettings")]
    pub jupyter_lab_app_settings: Option<DomainDefaultUserSettingsJupyterLabAppSettings>,
    /// The JupyterServer app settings.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "jupyterServerAppSettings")]
    pub jupyter_server_app_settings: Option<DomainDefaultUserSettingsJupyterServerAppSettings>,
    /// The KernelGateway app settings.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kernelGatewayAppSettings")]
    pub kernel_gateway_app_settings: Option<DomainDefaultUserSettingsKernelGatewayAppSettings>,
    /// A collection of settings that configure user interaction with the RStudioServerPro
    /// app.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "rStudioServerProAppSettings")]
    pub r_studio_server_pro_app_settings: Option<DomainDefaultUserSettingsRStudioServerProAppSettings>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "securityGroups")]
    pub security_groups: Option<Vec<String>>,
    /// Specifies options for sharing Amazon SageMaker AI Studio notebooks. These
    /// settings are specified as part of DefaultUserSettings when the CreateDomain
    /// API is called, and as part of UserSettings when the CreateUserProfile API
    /// is called. When SharingSettings is not specified, notebook sharing isn't
    /// allowed.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sharingSettings")]
    pub sharing_settings: Option<DomainDefaultUserSettingsSharingSettings>,
    /// The default storage settings for a space.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "spaceStorageSettings")]
    pub space_storage_settings: Option<DomainDefaultUserSettingsSpaceStorageSettings>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "studioWebPortal")]
    pub studio_web_portal: Option<String>,
    /// The TensorBoard app settings.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "tensorBoardAppSettings")]
    pub tensor_board_app_settings: Option<DomainDefaultUserSettingsTensorBoardAppSettings>,
}

/// The Code Editor application settings.
/// 
/// For more information about Code Editor, see Get started with Code Editor
/// in Amazon SageMaker (<https://docs.aws.amazon.com/sagemaker/latest/dg/code-editor.html).>
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsCodeEditorAppSettings {
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARNs")]
    pub lifecycle_config_ar_ns: Option<Vec<String>>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsCodeEditorAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// The settings for assigning a custom file system to a user profile or space
/// for an Amazon SageMaker AI Domain. Permitted users can access this file system
/// in Amazon SageMaker AI Studio.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsCustomFileSystemConfigs {
    /// The settings for assigning a custom Amazon EFS file system to a user profile
    /// or space for an Amazon SageMaker AI Domain.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "efsFileSystemConfig")]
    pub efs_file_system_config: Option<DomainDefaultUserSettingsCustomFileSystemConfigsEfsFileSystemConfig>,
    /// The settings for assigning a custom Amazon FSx for Lustre file system to
    /// a user profile or space for an Amazon SageMaker Domain.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fSxLustreFileSystemConfig")]
    pub f_sx_lustre_file_system_config: Option<DomainDefaultUserSettingsCustomFileSystemConfigsFSxLustreFileSystemConfig>,
    /// Configuration for the custom Amazon S3 file system.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "s3FileSystemConfig")]
    pub s3_file_system_config: Option<DomainDefaultUserSettingsCustomFileSystemConfigsS3FileSystemConfig>,
}

/// The settings for assigning a custom Amazon EFS file system to a user profile
/// or space for an Amazon SageMaker AI Domain.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsCustomFileSystemConfigsEfsFileSystemConfig {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemID")]
    pub file_system_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemPath")]
    pub file_system_path: Option<String>,
}

/// The settings for assigning a custom Amazon FSx for Lustre file system to
/// a user profile or space for an Amazon SageMaker Domain.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsCustomFileSystemConfigsFSxLustreFileSystemConfig {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemID")]
    pub file_system_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fileSystemPath")]
    pub file_system_path: Option<String>,
}

/// Configuration for the custom Amazon S3 file system.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsCustomFileSystemConfigsS3FileSystemConfig {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "mountPath")]
    pub mount_path: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "s3URI")]
    pub s3_uri: Option<String>,
}

/// Details about the POSIX identity that is used for file system operations.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsCustomPosixUserConfig {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub gid: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub uid: Option<i64>,
}

/// The settings for the JupyterLab application.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsJupyterLabAppSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "codeRepositories")]
    pub code_repositories: Option<Vec<DomainDefaultUserSettingsJupyterLabAppSettingsCodeRepositories>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customImages")]
    pub custom_images: Option<Vec<DomainDefaultUserSettingsJupyterLabAppSettingsCustomImages>>,
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARNs")]
    pub lifecycle_config_ar_ns: Option<Vec<String>>,
}

/// A Git repository that SageMaker AI automatically displays to users for cloning
/// in the JupyterServer application.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsJupyterLabAppSettingsCodeRepositories {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "repositoryURL")]
    pub repository_url: Option<String>,
}

/// A custom SageMaker AI image. For more information, see Bring your own SageMaker
/// AI image (<https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).>
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsJupyterLabAppSettingsCustomImages {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "appImageConfigName")]
    pub app_image_config_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageName")]
    pub image_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageVersionNumber")]
    pub image_version_number: Option<i64>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsJupyterLabAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// The JupyterServer app settings.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsJupyterServerAppSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "codeRepositories")]
    pub code_repositories: Option<Vec<DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositories>>,
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARNs")]
    pub lifecycle_config_ar_ns: Option<Vec<String>>,
}

/// A Git repository that SageMaker AI automatically displays to users for cloning
/// in the JupyterServer application.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositories {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "repositoryURL")]
    pub repository_url: Option<String>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// The KernelGateway app settings.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsKernelGatewayAppSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customImages")]
    pub custom_images: Option<Vec<DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImages>>,
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARNs")]
    pub lifecycle_config_ar_ns: Option<Vec<String>>,
}

/// A custom SageMaker AI image. For more information, see Bring your own SageMaker
/// AI image (<https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).>
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImages {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "appImageConfigName")]
    pub app_image_config_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageName")]
    pub image_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "imageVersionNumber")]
    pub image_version_number: Option<i64>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// A collection of settings that configure user interaction with the RStudioServerPro
/// app.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsRStudioServerProAppSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "accessStatus")]
    pub access_status: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "userGroup")]
    pub user_group: Option<String>,
}

/// Specifies options for sharing Amazon SageMaker AI Studio notebooks. These
/// settings are specified as part of DefaultUserSettings when the CreateDomain
/// API is called, and as part of UserSettings when the CreateUserProfile API
/// is called. When SharingSettings is not specified, notebook sharing isn't
/// allowed.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsSharingSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "notebookOutputOption")]
    pub notebook_output_option: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "s3KMSKeyID")]
    pub s3_kms_key_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "s3OutputPath")]
    pub s3_output_path: Option<String>,
}

/// The default storage settings for a space.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsSpaceStorageSettings {
    /// A collection of default EBS storage settings that apply to spaces created
    /// within a domain or user profile.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultEBSStorageSettings")]
    pub default_ebs_storage_settings: Option<DomainDefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettings>,
}

/// A collection of default EBS storage settings that apply to spaces created
/// within a domain or user profile.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsSpaceStorageSettingsDefaultEbsStorageSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultEBSVolumeSizeInGb")]
    pub default_ebs_volume_size_in_gb: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "maximumEBSVolumeSizeInGb")]
    pub maximum_ebs_volume_size_in_gb: Option<i64>,
}

/// The TensorBoard app settings.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsTensorBoardAppSettings {
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// A collection of Domain settings.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDomainSettings {
    /// A collection of settings that configure the domain's Docker interaction.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dockerSettings")]
    pub docker_settings: Option<DomainDomainSettingsDockerSettings>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ipAddressType")]
    pub ip_address_type: Option<String>,
    /// A collection of settings that configure the RStudioServerPro Domain-level
    /// app.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "rStudioServerProDomainSettings")]
    pub r_studio_server_pro_domain_settings: Option<DomainDomainSettingsRStudioServerProDomainSettings>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "securityGroupIDs")]
    pub security_group_i_ds: Option<Vec<String>>,
    /// The Trusted Identity Propagation (TIP) settings for the SageMaker domain.
    /// These settings determine how user identities from IAM Identity Center are
    /// propagated through the domain to TIP enabled Amazon Web Services services.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "trustedIdentityPropagationSettings")]
    pub trusted_identity_propagation_settings: Option<DomainDomainSettingsTrustedIdentityPropagationSettings>,
    /// The settings that apply to an Amazon SageMaker AI domain when you use it
    /// in Amazon SageMaker Unified Studio.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "unifiedStudioSettings")]
    pub unified_studio_settings: Option<DomainDomainSettingsUnifiedStudioSettings>,
}

/// A collection of settings that configure the domain's Docker interaction.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDomainSettingsDockerSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "enableDockerAccess")]
    pub enable_docker_access: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "rootlessDocker")]
    pub rootless_docker: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "vpcOnlyTrustedAccounts")]
    pub vpc_only_trusted_accounts: Option<Vec<String>>,
}

/// A collection of settings that configure the RStudioServerPro Domain-level
/// app.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDomainSettingsRStudioServerProDomainSettings {
    /// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
    /// and the instance type that the version runs on.
    /// 
    /// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
    /// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
    /// already exists in the ResourceSpec because SageMakerImageVersionArn always
    /// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
    /// None as the value.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "defaultResourceSpec")]
    pub default_resource_spec: Option<DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainExecutionRoleARN")]
    pub domain_execution_role_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "rStudioConnectURL")]
    pub r_studio_connect_url: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "rStudioPackageManagerURL")]
    pub r_studio_package_manager_url: Option<String>,
}

/// Specifies the ARN's of a SageMaker AI image and SageMaker AI image version,
/// and the instance type that the version runs on.
/// 
/// When both SageMakerImageVersionArn and SageMakerImageArn are passed, SageMakerImageVersionArn
/// is used. Any updates to SageMakerImageArn will not take effect if SageMakerImageVersionArn
/// already exists in the ResourceSpec because SageMakerImageVersionArn always
/// takes precedence. To clear the value set for SageMakerImageVersionArn, pass
/// None as the value.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceType")]
    pub instance_type: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "lifecycleConfigARN")]
    pub lifecycle_config_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageARN")]
    pub sage_maker_image_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionARN")]
    pub sage_maker_image_version_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sageMakerImageVersionAlias")]
    pub sage_maker_image_version_alias: Option<String>,
}

/// The Trusted Identity Propagation (TIP) settings for the SageMaker domain.
/// These settings determine how user identities from IAM Identity Center are
/// propagated through the domain to TIP enabled Amazon Web Services services.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDomainSettingsTrustedIdentityPropagationSettings {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

/// The settings that apply to an Amazon SageMaker AI domain when you use it
/// in Amazon SageMaker Unified Studio.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainDomainSettingsUnifiedStudioSettings {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainAccountID")]
    pub domain_account_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainID")]
    pub domain_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainRegion")]
    pub domain_region: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "environmentID")]
    pub environment_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "projectID")]
    pub project_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "projectS3Path")]
    pub project_s3_path: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "singleSignOnApplicationARN")]
    pub single_sign_on_application_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "studioWebPortalAccess")]
    pub studio_web_portal_access: Option<String>,
}

/// A tag object that consists of a key and an optional value, used to manage
/// metadata for SageMaker Amazon Web Services resources.
/// 
/// You can add tags to notebook instances, training jobs, hyperparameter tuning
/// jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
/// and endpoints. For more information on adding tags to SageMaker resources,
/// see AddTags (<https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).>
/// 
/// For more information on adding metadata to your Amazon Web Services resources
/// with tagging, see Tagging Amazon Web Services resources (<https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).>
/// For advice on best practices for managing Amazon Web Services resources with
/// tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
/// Resource Tagging Strategy (<https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).>
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainTags {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

/// DomainStatus defines the observed state of Domain
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainStatus {
    /// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
    /// that is used to contain resource sync state, account ownership,
    /// constructed ARN for the resource
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ackResourceMetadata")]
    pub ack_resource_metadata: Option<DomainStatusAckResourceMetadata>,
    /// All CRs managed by ACK have a common `Status.Conditions` member that
    /// contains a collection of `ackv1alpha1.Condition` objects that describe
    /// the various terminal states of the CR and its backend AWS service API
    /// resource
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
    /// The domain ID.
    /// 
    /// Regex Pattern: `^d-(-*[a-z0-9]){1,61}$`
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainID")]
    pub domain_id: Option<String>,
    /// The status.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The URL to the created domain.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

/// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
/// that is used to contain resource sync state, account ownership,
/// constructed ARN for the resource
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DomainStatusAckResourceMetadata {
    /// ARN is the Amazon Resource Name for the resource. This is a
    /// globally-unique identifier and is set only by the ACK service controller
    /// once the controller has orchestrated the creation of the resource OR
    /// when it has verified that an "adopted" resource (a resource where the
    /// ARN annotation was set by the Kubernetes user on the CR) exists and
    /// matches the supplied CR's Spec field values.
    /// <https://github.com/aws/aws-controllers-k8s/issues/270>
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub arn: Option<String>,
    /// OwnerAccountID is the AWS Account ID of the account that owns the
    /// backend AWS service API resource.
    #[serde(rename = "ownerAccountID")]
    pub owner_account_id: String,
    /// Region is the AWS region in which the resource exists or will exist.
    pub region: String,
}

