// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/epam/edp-codebase-operator/v2.edp.epam.com/v1/codebaseimagestreams.yaml
// kopium version: 0.21.3

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
}
use self::prelude::*;

/// CodebaseImageStreamSpec defines the desired state of CodebaseImageStream.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "v2.edp.epam.com", version = "v1", kind = "CodebaseImageStream", plural = "codebaseimagestreams")]
#[kube(namespaced)]
#[kube(status = "CodebaseImageStreamStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct CodebaseImageStreamSpec {
    /// Name of Codebase associated with.
    pub codebase: String,
    /// Docker container name without tag, e.g. registry-name/path/name.
    #[serde(rename = "imageName")]
    pub image_name: String,
    /// A list of docker image tags available for ImageName and their creation date.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<CodebaseImageStreamTags>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CodebaseImageStreamTags {
    pub created: String,
    pub name: String,
}

/// CodebaseImageStreamStatus defines the observed state of CodebaseImageStream.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct CodebaseImageStreamStatus {
    /// Detailed information regarding action result
    /// which were performed
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub detailed_message: Option<String>,
    /// Amount of times, operator fail to serve with existing CR.
    #[serde(rename = "failureCount")]
    pub failure_count: i64,
}

