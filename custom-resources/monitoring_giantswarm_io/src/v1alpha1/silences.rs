// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/giantswarm/silence-operator/monitoring.giantswarm.io/v1alpha1/silences.yaml
// kopium version: 0.21.2

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "monitoring.giantswarm.io", version = "v1alpha1", kind = "Silence", plural = "silences")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct SilenceSpec {
    /// IssueURL is a link to a GitHub issue describing the problem.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub issue_url: Option<String>,
    pub matchers: Vec<SilenceMatchers>,
    /// Owner is GitHub username of a person who created and/or owns the silence.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// PostmortemURL is a link to a document describing the problem.
    /// Deprecated: Use IssueURL instead.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub postmortem_url: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "targetTags")]
    pub target_tags: Option<Vec<SilenceTargetTags>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct SilenceMatchers {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "isEqual")]
    pub is_equal: Option<bool>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "isRegex")]
    pub is_regex: Option<bool>,
    pub name: String,
    pub value: String,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct SilenceTargetTags {
    pub name: String,
    pub value: String,
}

