// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/aws-controllers-k8s/rds-controller/rds.services.k8s.aws/v1alpha1/dbinstances.yaml
// kopium version: 0.21.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
    pub use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;
}
use self::prelude::*;

/// DBInstanceSpec defines the desired state of DBInstance.
/// 
/// Contains the details of an Amazon RDS DB instance.
/// 
/// This data type is used as a response element in the operations CreateDBInstance,
/// CreateDBInstanceReadReplica, DeleteDBInstance, DescribeDBInstances, ModifyDBInstance,
/// PromoteReadReplica, RebootDBInstance, RestoreDBInstanceFromDBSnapshot, RestoreDBInstanceFromS3,
/// RestoreDBInstanceToPointInTime, StartDBInstance, and StopDBInstance.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "rds.services.k8s.aws", version = "v1alpha1", kind = "DBInstance", plural = "dbinstances")]
#[kube(namespaced)]
#[kube(status = "DBInstanceStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct DBInstanceSpec {
    /// The amount of storage in gibibytes (GiB) to allocate for the DB instance.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. Aurora cluster
    /// volumes automatically grow as the amount of data in your database increases,
    /// though you are only charged for the space that you use in an Aurora cluster
    /// volume.
    /// 
    /// Amazon RDS Custom
    /// 
    /// Constraints to the amount of storage for each storage type are the following:
    /// 
    ///    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 40
    ///    to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.
    /// 
    ///    * Provisioned IOPS storage (io1, io2): Must be an integer from 40 to 65536
    ///    for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.
    /// 
    /// RDS for Db2
    /// 
    /// Constraints to the amount of storage for each storage type are the following:
    /// 
    ///    * General Purpose (SSD) storage (gp3): Must be an integer from 20 to 65536.
    /// 
    ///    * Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
    ///    65536.
    /// 
    /// RDS for MariaDB
    /// 
    /// Constraints to the amount of storage for each storage type are the following:
    /// 
    ///    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
    ///    to 65536.
    /// 
    ///    * Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
    ///    65536.
    /// 
    ///    * Magnetic storage (standard): Must be an integer from 5 to 3072.
    /// 
    /// RDS for MySQL
    /// 
    /// Constraints to the amount of storage for each storage type are the following:
    /// 
    ///    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
    ///    to 65536.
    /// 
    ///    * Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
    ///    65536.
    /// 
    ///    * Magnetic storage (standard): Must be an integer from 5 to 3072.
    /// 
    /// RDS for Oracle
    /// 
    /// Constraints to the amount of storage for each storage type are the following:
    /// 
    ///    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
    ///    to 65536.
    /// 
    ///    * Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
    ///    65536.
    /// 
    ///    * Magnetic storage (standard): Must be an integer from 10 to 3072.
    /// 
    /// RDS for PostgreSQL
    /// 
    /// Constraints to the amount of storage for each storage type are the following:
    /// 
    ///    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
    ///    to 65536.
    /// 
    ///    * Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
    ///    65536.
    /// 
    ///    * Magnetic storage (standard): Must be an integer from 5 to 3072.
    /// 
    /// RDS for SQL Server
    /// 
    /// Constraints to the amount of storage for each storage type are the following:
    /// 
    ///    * General Purpose (SSD) storage (gp2, gp3): Enterprise and Standard editions:
    ///    Must be an integer from 20 to 16384. Web and Express editions: Must be
    ///    an integer from 20 to 16384.
    /// 
    ///    * Provisioned IOPS storage (io1, io2): Enterprise and Standard editions:
    ///    Must be an integer from 100 to 16384. Web and Express editions: Must be
    ///    an integer from 100 to 16384.
    /// 
    ///    * Magnetic storage (standard): Enterprise and Standard editions: Must
    ///    be an integer from 20 to 1024. Web and Express editions: Must be an integer
    ///    from 20 to 1024.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "allocatedStorage")]
    pub allocated_storage: Option<i64>,
    /// Specifies whether minor engine upgrades are applied automatically to the
    /// DB instance during the maintenance window. By default, minor engine upgrades
    /// are applied automatically.
    /// 
    /// If you create an RDS Custom DB instance, you must set AutoMinorVersionUpgrade
    /// to false.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "autoMinorVersionUpgrade")]
    pub auto_minor_version_upgrade: Option<bool>,
    /// The Availability Zone (AZ) where the database will be created. For information
    /// on Amazon Web Services Regions and Availability Zones, see Regions and Availability
    /// Zones (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
    /// 
    /// For Amazon Aurora, each Aurora DB cluster hosts copies of its storage in
    /// three separate Availability Zones. Specify one of these Availability Zones.
    /// Aurora automatically chooses an appropriate Availability Zone if you don't
    /// specify one.
    /// 
    /// Default: A random, system-chosen Availability Zone in the endpoint's Amazon
    /// Web Services Region.
    /// 
    /// Constraints:
    /// 
    ///    * The AvailabilityZone parameter can't be specified if the DB instance
    ///    is a Multi-AZ deployment.
    /// 
    ///    * The specified Availability Zone must be in the same Amazon Web Services
    ///    Region as the current endpoint.
    /// 
    /// Example: us-east-1d
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "availabilityZone")]
    pub availability_zone: Option<String>,
    /// The number of days for which automated backups are retained. Setting this
    /// parameter to a positive number enables backups. Setting this parameter to
    /// 0 disables automated backups.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The retention period
    /// for automated backups is managed by the DB cluster.
    /// 
    /// Default: 1
    /// 
    /// Constraints:
    /// 
    ///    * Must be a value from 0 to 35.
    /// 
    ///    * Can't be set to 0 if the DB instance is a source to read replicas.
    /// 
    ///    * Can't be set to 0 for an RDS Custom for Oracle DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "backupRetentionPeriod")]
    pub backup_retention_period: Option<i64>,
    /// The location for storing automated backups and manual snapshots.
    /// 
    /// Valid Values:
    /// 
    ///    * outposts (Amazon Web Services Outposts)
    /// 
    ///    * region (Amazon Web Services Region)
    /// 
    /// Default: region
    /// 
    /// For more information, see Working with Amazon RDS on Amazon Web Services
    /// Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
    /// in the Amazon RDS User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "backupTarget")]
    pub backup_target: Option<String>,
    /// The CA certificate identifier to use for the DB instance's server certificate.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    /// 
    /// For more information, see Using SSL/TLS to encrypt a connection to a DB instance
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html)
    /// in the Amazon RDS User Guide and Using SSL/TLS to encrypt a connection to
    /// a DB cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html)
    /// in the Amazon Aurora User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "caCertificateIdentifier")]
    pub ca_certificate_identifier: Option<String>,
    /// For supported engines, the character set (CharacterSet) to associate the
    /// DB instance with.
    /// 
    /// This setting doesn't apply to the following DB instances:
    /// 
    ///    * Amazon Aurora - The character set is managed by the DB cluster. For
    ///    more information, see CreateDBCluster.
    /// 
    ///    * RDS Custom - However, if you need to change the character set, you can
    ///    change it on the database itself.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "characterSetName")]
    pub character_set_name: Option<String>,
    /// Specifies whether to copy tags from the DB instance to snapshots of the DB
    /// instance. By default, tags are not copied.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. Copying tags to
    /// snapshots is managed by the DB cluster. Setting this value for an Aurora
    /// DB instance has no effect on the DB cluster setting.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "copyTagsToSnapshot")]
    pub copy_tags_to_snapshot: Option<bool>,
    /// The instance profile associated with the underlying Amazon EC2 instance of
    /// an RDS Custom DB instance.
    /// 
    /// This setting is required for RDS Custom.
    /// 
    /// Constraints:
    /// 
    ///    * The profile must exist in your account.
    /// 
    ///    * The profile must have an IAM role that Amazon EC2 has permissions to
    ///    assume.
    /// 
    ///    * The instance profile name and the associated IAM role name must start
    ///    with the prefix AWSRDSCustom.
    /// 
    /// For the list of permissions required for the IAM role, see Configure IAM
    /// and your VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc)
    /// in the Amazon RDS User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customIAMInstanceProfile")]
    pub custom_iam_instance_profile: Option<String>,
    /// The identifier of the DB cluster that this DB instance will belong to.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbClusterIdentifier")]
    pub db_cluster_identifier: Option<String>,
    /// The identifier for the Multi-AZ DB cluster snapshot to restore from.
    /// 
    /// For more information on Multi-AZ DB clusters, see Multi-AZ DB cluster deployments
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// Constraints:
    /// 
    ///    * Must match the identifier of an existing Multi-AZ DB cluster snapshot.
    /// 
    ///    * Can't be specified when DBSnapshotIdentifier is specified.
    /// 
    ///    * Must be specified when DBSnapshotIdentifier isn't specified.
    /// 
    ///    * If you are restoring from a shared manual Multi-AZ DB cluster snapshot,
    ///    the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.
    /// 
    ///    * Can't be the identifier of an Aurora DB cluster snapshot.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbClusterSnapshotIdentifier")]
    pub db_cluster_snapshot_identifier: Option<String>,
    /// The compute and memory capacity of the DB instance, for example db.m5.large.
    /// Not all DB instance classes are available in all Amazon Web Services Regions,
    /// or for all database engines. For the full list of DB instance classes, and
    /// availability for your engine, see DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
    /// in the Amazon RDS User Guide or Aurora DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html)
    /// in the Amazon Aurora User Guide.
    #[serde(rename = "dbInstanceClass")]
    pub db_instance_class: String,
    /// The identifier for this DB instance. This parameter is stored as a lowercase
    /// string.
    /// 
    /// Constraints:
    /// 
    ///    * Must contain from 1 to 63 letters, numbers, or hyphens.
    /// 
    ///    * First character must be a letter.
    /// 
    ///    * Can't end with a hyphen or contain two consecutive hyphens.
    /// 
    /// Example: mydbinstance
    #[serde(rename = "dbInstanceIdentifier")]
    pub db_instance_identifier: String,
    /// The meaning of this parameter differs according to the database engine you
    /// use.
    /// 
    /// Amazon Aurora MySQL
    /// 
    /// The name of the database to create when the primary DB instance of the Aurora
    /// MySQL DB cluster is created. If this parameter isn't specified for an Aurora
    /// MySQL DB cluster, no database is created in the DB cluster.
    /// 
    /// Constraints:
    /// 
    ///    * Must contain 1 to 64 alphanumeric characters.
    /// 
    ///    * Must begin with a letter. Subsequent characters can be letters, underscores,
    ///    or digits (0-9).
    /// 
    ///    * Can't be a word reserved by the database engine.
    /// 
    /// Amazon Aurora PostgreSQL
    /// 
    /// The name of the database to create when the primary DB instance of the Aurora
    /// PostgreSQL DB cluster is created. A database named postgres is always created.
    /// If this parameter is specified, an additional database with this name is
    /// created.
    /// 
    /// Constraints:
    /// 
    ///    * It must contain 1 to 63 alphanumeric characters.
    /// 
    ///    * Must begin with a letter. Subsequent characters can be letters, underscores,
    ///    or digits (0 to 9).
    /// 
    ///    * Can't be a word reserved by the database engine.
    /// 
    /// Amazon RDS Custom for Oracle
    /// 
    /// The Oracle System ID (SID) of the created RDS Custom DB instance. If you
    /// don't specify a value, the default value is ORCL for non-CDBs and RDSCDB
    /// for CDBs.
    /// 
    /// Default: ORCL
    /// 
    /// Constraints:
    /// 
    ///    * Must contain 1 to 8 alphanumeric characters.
    /// 
    ///    * Must contain a letter.
    /// 
    ///    * Can't be a word reserved by the database engine.
    /// 
    /// Amazon RDS Custom for SQL Server
    /// 
    /// Not applicable. Must be null.
    /// 
    /// RDS for Db2
    /// 
    /// The name of the database to create when the DB instance is created. If this
    /// parameter isn't specified, no database is created in the DB instance. In
    /// some cases, we recommend that you don't add a database name. For more information,
    /// see Additional considerations (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-db-instance-prereqs.html#db2-prereqs-additional-considerations)
    /// in the Amazon RDS User Guide.
    /// 
    /// Constraints:
    /// 
    ///    * Must contain 1 to 64 letters or numbers.
    /// 
    ///    * Must begin with a letter. Subsequent characters can be letters, underscores,
    ///    or digits (0-9).
    /// 
    ///    * Can't be a word reserved by the specified database engine.
    /// 
    /// RDS for MariaDB
    /// 
    /// The name of the database to create when the DB instance is created. If this
    /// parameter isn't specified, no database is created in the DB instance.
    /// 
    /// Constraints:
    /// 
    ///    * Must contain 1 to 64 letters or numbers.
    /// 
    ///    * Must begin with a letter. Subsequent characters can be letters, underscores,
    ///    or digits (0-9).
    /// 
    ///    * Can't be a word reserved by the specified database engine.
    /// 
    /// RDS for MySQL
    /// 
    /// The name of the database to create when the DB instance is created. If this
    /// parameter isn't specified, no database is created in the DB instance.
    /// 
    /// Constraints:
    /// 
    ///    * Must contain 1 to 64 letters or numbers.
    /// 
    ///    * Must begin with a letter. Subsequent characters can be letters, underscores,
    ///    or digits (0-9).
    /// 
    ///    * Can't be a word reserved by the specified database engine.
    /// 
    /// RDS for Oracle
    /// 
    /// The Oracle System ID (SID) of the created DB instance. If you don't specify
    /// a value, the default value is ORCL. You can't specify the string null, or
    /// any other reserved word, for DBName.
    /// 
    /// Default: ORCL
    /// 
    /// Constraints:
    /// 
    ///    * Can't be longer than 8 characters.
    /// 
    /// RDS for PostgreSQL
    /// 
    /// The name of the database to create when the DB instance is created. A database
    /// named postgres is always created. If this parameter is specified, an additional
    /// database with this name is created.
    /// 
    /// Constraints:
    /// 
    ///    * Must contain 1 to 63 letters, numbers, or underscores.
    /// 
    ///    * Must begin with a letter. Subsequent characters can be letters, underscores,
    ///    or digits (0-9).
    /// 
    ///    * Can't be a word reserved by the specified database engine.
    /// 
    /// RDS for SQL Server
    /// 
    /// Not applicable. Must be null.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbName")]
    pub db_name: Option<String>,
    /// The name of the DB parameter group to associate with this DB instance. If
    /// you don't specify a value, then Amazon RDS uses the default DB parameter
    /// group for the specified DB engine and version.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    /// 
    /// Constraints:
    /// 
    ///    * Must be 1 to 255 letters, numbers, or hyphens.
    /// 
    ///    * The first character must be a letter.
    /// 
    ///    * Can't end with a hyphen or contain two consecutive hyphens.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbParameterGroupName")]
    pub db_parameter_group_name: Option<String>,
    /// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
    /// type to provide more user friendly syntax for references using 'from' field
    /// Ex:
    /// APIIDRef:
    /// 
    /// 	from:
    /// 	  name: my-api
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbParameterGroupRef")]
    pub db_parameter_group_ref: Option<DBInstanceDbParameterGroupRef>,
    /// The identifier for the DB snapshot to restore from.
    /// 
    /// Constraints:
    /// 
    ///    * Must match the identifier of an existing DB snapshot.
    /// 
    ///    * Can't be specified when DBClusterSnapshotIdentifier is specified.
    /// 
    ///    * Must be specified when DBClusterSnapshotIdentifier isn't specified.
    /// 
    ///    * If you are restoring from a shared manual DB snapshot, the DBSnapshotIdentifier
    ///    must be the ARN of the shared DB snapshot.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSnapshotIdentifier")]
    pub db_snapshot_identifier: Option<String>,
    /// A DB subnet group to associate with this DB instance.
    /// 
    /// Constraints:
    /// 
    ///    * Must match the name of an existing DB subnet group.
    /// 
    /// Example: mydbsubnetgroup
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSubnetGroupName")]
    pub db_subnet_group_name: Option<String>,
    /// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
    /// type to provide more user friendly syntax for references using 'from' field
    /// Ex:
    /// APIIDRef:
    /// 
    /// 	from:
    /// 	  name: my-api
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSubnetGroupRef")]
    pub db_subnet_group_ref: Option<DBInstanceDbSubnetGroupRef>,
    /// Specifies whether the DB instance has deletion protection enabled. The database
    /// can't be deleted when deletion protection is enabled. By default, deletion
    /// protection isn't enabled. For more information, see Deleting a DB Instance
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. You can enable
    /// or disable deletion protection for the DB cluster. For more information,
    /// see CreateDBCluster. DB instances in a DB cluster can be deleted even when
    /// deletion protection is enabled for the DB cluster.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "deletionProtection")]
    pub deletion_protection: Option<bool>,
    /// DestinationRegion is used for presigning the request to a given region.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "destinationRegion")]
    pub destination_region: Option<String>,
    /// The Active Directory directory ID to create the DB instance in. Currently,
    /// you can create only Db2, MySQL, Microsoft SQL Server, Oracle, and PostgreSQL
    /// DB instances in an Active Directory Domain.
    /// 
    /// For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// This setting doesn't apply to the following DB instances:
    /// 
    ///    * Amazon Aurora (The domain is managed by the DB cluster.)
    /// 
    ///    * RDS Custom
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    /// The name of the IAM role to use when making API calls to the Directory Service.
    /// 
    /// This setting doesn't apply to the following DB instances:
    /// 
    ///    * Amazon Aurora (The domain is managed by the DB cluster.)
    /// 
    ///    * RDS Custom
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainIAMRoleName")]
    pub domain_iam_role_name: Option<String>,
    /// The list of log types to enable for exporting to CloudWatch Logs. For more
    /// information, see Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
    /// in the Amazon RDS User Guide.
    /// 
    /// This setting doesn't apply to the following DB instances:
    /// 
    ///    * Amazon Aurora (CloudWatch Logs exports are managed by the DB cluster.)
    /// 
    ///    * RDS Custom
    /// 
    /// The following values are valid for each DB engine:
    /// 
    ///    * RDS for Db2 - diag.log | notify.log
    /// 
    ///    * RDS for MariaDB - audit | error | general | slowquery
    /// 
    ///    * RDS for Microsoft SQL Server - agent | error
    /// 
    ///    * RDS for MySQL - audit | error | general | slowquery
    /// 
    ///    * RDS for Oracle - alert | audit | listener | trace | oemagent
    /// 
    ///    * RDS for PostgreSQL - postgresql | upgrade
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "enableCloudwatchLogsExports")]
    pub enable_cloudwatch_logs_exports: Option<Vec<String>>,
    /// Specifies whether to enable a customer-owned IP address (CoIP) for an RDS
    /// on Outposts DB instance.
    /// 
    /// A CoIP provides local or external connectivity to resources in your Outpost
    /// subnets through your on-premises network. For some use cases, a CoIP can
    /// provide lower latency for connections to the DB instance from outside of
    /// its virtual private cloud (VPC) on your local network.
    /// 
    /// For more information about RDS on Outposts, see Working with Amazon RDS on
    /// Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
    /// in the Amazon Web Services Outposts User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "enableCustomerOwnedIP")]
    pub enable_customer_owned_ip: Option<bool>,
    /// Specifies whether to enable mapping of Amazon Web Services Identity and Access
    /// Management (IAM) accounts to database accounts. By default, mapping isn't
    /// enabled.
    /// 
    /// For more information, see IAM Database Authentication for MySQL and PostgreSQL
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// This setting doesn't apply to the following DB instances:
    /// 
    ///    * Amazon Aurora (Mapping Amazon Web Services IAM accounts to database
    ///    accounts is managed by the DB cluster.)
    /// 
    ///    * RDS Custom
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "enableIAMDatabaseAuthentication")]
    pub enable_iam_database_authentication: Option<bool>,
    /// The database engine to use for this DB instance.
    /// 
    /// Not every database engine is available in every Amazon Web Services Region.
    /// 
    /// Valid Values:
    /// 
    ///    * aurora-mysql (for Aurora MySQL DB instances)
    /// 
    ///    * aurora-postgresql (for Aurora PostgreSQL DB instances)
    /// 
    ///    * custom-oracle-ee (for RDS Custom for Oracle DB instances)
    /// 
    ///    * custom-oracle-ee-cdb (for RDS Custom for Oracle DB instances)
    /// 
    ///    * custom-oracle-se2 (for RDS Custom for Oracle DB instances)
    /// 
    ///    * custom-oracle-se2-cdb (for RDS Custom for Oracle DB instances)
    /// 
    ///    * custom-sqlserver-ee (for RDS Custom for SQL Server DB instances)
    /// 
    ///    * custom-sqlserver-se (for RDS Custom for SQL Server DB instances)
    /// 
    ///    * custom-sqlserver-web (for RDS Custom for SQL Server DB instances)
    /// 
    ///    * custom-sqlserver-dev (for RDS Custom for SQL Server DB instances)
    /// 
    ///    * db2-ae
    /// 
    ///    * db2-se
    /// 
    ///    * mariadb
    /// 
    ///    * mysql
    /// 
    ///    * oracle-ee
    /// 
    ///    * oracle-ee-cdb
    /// 
    ///    * oracle-se2
    /// 
    ///    * oracle-se2-cdb
    /// 
    ///    * postgres
    /// 
    ///    * sqlserver-ee
    /// 
    ///    * sqlserver-se
    /// 
    ///    * sqlserver-ex
    /// 
    ///    * sqlserver-web
    pub engine: String,
    /// The version number of the database engine to use.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The version number
    /// of the database engine the DB instance uses is managed by the DB cluster.
    /// 
    /// For a list of valid engine versions, use the DescribeDBEngineVersions operation.
    /// 
    /// The following are the database engines and links to information about the
    /// major and minor versions that are available with Amazon RDS. Not every database
    /// engine is available for every Amazon Web Services Region.
    /// 
    /// Amazon RDS Custom for Oracle
    /// 
    /// A custom engine version (CEV) that you have previously created. This setting
    /// is required for RDS Custom for Oracle. The CEV name has the following format:
    /// 19.customized_string. A valid CEV name is 19.my_cev1. For more information,
    /// see Creating an RDS Custom for Oracle DB instance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-creating.html#custom-creating.create)
    /// in the Amazon RDS User Guide.
    /// 
    /// Amazon RDS Custom for SQL Server
    /// 
    /// See RDS Custom for SQL Server general requirements (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// RDS for Db2
    /// 
    /// For information, see Db2 on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Db2.html#Db2.Concepts.VersionMgmt)
    /// in the Amazon RDS User Guide.
    /// 
    /// RDS for MariaDB
    /// 
    /// For information, see MariaDB on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
    /// in the Amazon RDS User Guide.
    /// 
    /// RDS for Microsoft SQL Server
    /// 
    /// For information, see Microsoft SQL Server versions on Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport)
    /// in the Amazon RDS User Guide.
    /// 
    /// RDS for MySQL
    /// 
    /// For information, see MySQL on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
    /// in the Amazon RDS User Guide.
    /// 
    /// RDS for Oracle
    /// 
    /// For information, see Oracle Database Engine release notes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// RDS for PostgreSQL
    /// 
    /// For information, see Amazon RDS for PostgreSQL versions and extensions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts)
    /// in the Amazon RDS User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "engineVersion")]
    pub engine_version: Option<String>,
    /// The amount of Provisioned IOPS (input/output operations per second) to initially
    /// allocate for the DB instance. For information about valid IOPS values, see
    /// Amazon RDS DB instance storage (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
    /// by the DB cluster.
    /// 
    /// Constraints:
    /// 
    ///    * For RDS for Db2, MariaDB, MySQL, Oracle, and PostgreSQL - Must be a
    ///    multiple between .5 and 50 of the storage amount for the DB instance.
    /// 
    ///    * For RDS for SQL Server - Must be a multiple between 1 and 50 of the
    ///    storage amount for the DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub iops: Option<i64>,
    /// The Amazon Web Services KMS key identifier for an encrypted DB instance.
    /// 
    /// The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
    /// ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
    /// Web Services account, specify the key ARN or alias ARN.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The Amazon Web
    /// Services KMS key identifier is managed by the DB cluster. For more information,
    /// see CreateDBCluster.
    /// 
    /// If StorageEncrypted is enabled, and you do not specify a value for the KmsKeyId
    /// parameter, then Amazon RDS uses your default KMS key. There is a default
    /// KMS key for your Amazon Web Services account. Your Amazon Web Services account
    /// has a different default KMS key for each Amazon Web Services Region.
    /// 
    /// For Amazon RDS Custom, a KMS key is required for DB instances. For most RDS
    /// engines, if you leave this parameter empty while enabling StorageEncrypted,
    /// the engine uses the default KMS key. However, RDS Custom doesn't use the
    /// default key when this parameter is empty. You must explicitly specify a key.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kmsKeyID")]
    pub kms_key_id: Option<String>,
    /// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
    /// type to provide more user friendly syntax for references using 'from' field
    /// Ex:
    /// APIIDRef:
    /// 
    /// 	from:
    /// 	  name: my-api
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kmsKeyRef")]
    pub kms_key_ref: Option<DBInstanceKmsKeyRef>,
    /// The license model information for this DB instance.
    /// 
    /// License models for RDS for Db2 require additional configuration. The Bring
    /// Your Own License (BYOL) model requires a custom parameter group and an Amazon
    /// Web Services License Manager self-managed license. The Db2 license through
    /// Amazon Web Services Marketplace model requires an Amazon Web Services Marketplace
    /// subscription. For more information, see Amazon RDS for Db2 licensing options
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-licensing.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// The default for RDS for Db2 is bring-your-own-license.
    /// 
    /// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
    /// 
    /// Valid Values:
    /// 
    ///    * RDS for Db2 - bring-your-own-license | marketplace-license
    /// 
    ///    * RDS for MariaDB - general-public-license
    /// 
    ///    * RDS for Microsoft SQL Server - license-included
    /// 
    ///    * RDS for MySQL - general-public-license
    /// 
    ///    * RDS for Oracle - bring-your-own-license | license-included
    /// 
    ///    * RDS for PostgreSQL - postgresql-license
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "licenseModel")]
    pub license_model: Option<String>,
    /// Specifies whether to manage the master user password with Amazon Web Services
    /// Secrets Manager.
    /// 
    /// For more information, see Password management with Amazon Web Services Secrets
    /// Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// Constraints:
    /// 
    ///    * Can't manage the master user password with Amazon Web Services Secrets
    ///    Manager if MasterUserPassword is specified.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "manageMasterUserPassword")]
    pub manage_master_user_password: Option<bool>,
    /// The password for the master user.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The password for
    /// the master user is managed by the DB cluster.
    /// 
    /// Constraints:
    /// 
    ///    * Can't be specified if ManageMasterUserPassword is turned on.
    /// 
    ///    * Can include any printable ASCII character except "/", """, or "@". For
    ///    RDS for Oracle, can't include the "&" (ampersand) or the "'" (single quotes)
    ///    character.
    /// 
    /// Length Constraints:
    /// 
    ///    * RDS for Db2 - Must contain from 8 to 255 characters.
    /// 
    ///    * RDS for MariaDB - Must contain from 8 to 41 characters.
    /// 
    ///    * RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.
    /// 
    ///    * RDS for MySQL - Must contain from 8 to 41 characters.
    /// 
    ///    * RDS for Oracle - Must contain from 8 to 30 characters.
    /// 
    ///    * RDS for PostgreSQL - Must contain from 8 to 128 characters.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "masterUserPassword")]
    pub master_user_password: Option<DBInstanceMasterUserPassword>,
    /// The Amazon Web Services KMS key identifier to encrypt a secret that is automatically
    /// generated and managed in Amazon Web Services Secrets Manager.
    /// 
    /// This setting is valid only if the master user password is managed by RDS
    /// in Amazon Web Services Secrets Manager for the DB instance.
    /// 
    /// The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
    /// ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
    /// Web Services account, specify the key ARN or alias ARN.
    /// 
    /// If you don't specify MasterUserSecretKmsKeyId, then the aws/secretsmanager
    /// KMS key is used to encrypt the secret. If the secret is in a different Amazon
    /// Web Services account, then you can't use the aws/secretsmanager KMS key to
    /// encrypt the secret, and you must use a customer managed KMS key.
    /// 
    /// There is a default KMS key for your Amazon Web Services account. Your Amazon
    /// Web Services account has a different default KMS key for each Amazon Web
    /// Services Region.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "masterUserSecretKMSKeyID")]
    pub master_user_secret_kms_key_id: Option<String>,
    /// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
    /// type to provide more user friendly syntax for references using 'from' field
    /// Ex:
    /// APIIDRef:
    /// 
    /// 	from:
    /// 	  name: my-api
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "masterUserSecretKMSKeyRef")]
    pub master_user_secret_kms_key_ref: Option<DBInstanceMasterUserSecretKmsKeyRef>,
    /// The name for the master user.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The name for the
    /// master user is managed by the DB cluster.
    /// 
    /// This setting is required for RDS DB instances.
    /// 
    /// Constraints:
    /// 
    ///    * Must be 1 to 16 letters, numbers, or underscores.
    /// 
    ///    * First character must be a letter.
    /// 
    ///    * Can't be a reserved word for the chosen database engine.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "masterUsername")]
    pub master_username: Option<String>,
    /// The upper limit in gibibytes (GiB) to which Amazon RDS can automatically
    /// scale the storage of the DB instance.
    /// 
    /// For more information about this setting, including limitations that apply
    /// to it, see Managing capacity automatically with Amazon RDS storage autoscaling
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
    /// in the Amazon RDS User Guide.
    /// 
    /// This setting doesn't apply to the following DB instances:
    /// 
    ///    * Amazon Aurora (Storage is managed by the DB cluster.)
    /// 
    ///    * RDS Custom
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "maxAllocatedStorage")]
    pub max_allocated_storage: Option<i64>,
    /// The interval, in seconds, between points when Enhanced Monitoring metrics
    /// are collected for the DB instance. To disable collection of Enhanced Monitoring
    /// metrics, specify 0.
    /// 
    /// If MonitoringRoleArn is specified, then you must set MonitoringInterval to
    /// a value other than 0.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    /// 
    /// Valid Values: 0 | 1 | 5 | 10 | 15 | 30 | 60
    /// 
    /// Default: 0
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "monitoringInterval")]
    pub monitoring_interval: Option<i64>,
    /// The ARN for the IAM role that permits RDS to send enhanced monitoring metrics
    /// to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess.
    /// For information on creating a monitoring role, see Setting Up and Enabling
    /// Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
    /// in the Amazon RDS User Guide.
    /// 
    /// If MonitoringInterval is set to a value other than 0, then you must supply
    /// a MonitoringRoleArn value.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "monitoringRoleARN")]
    pub monitoring_role_arn: Option<String>,
    /// Specifies whether the DB instance is a Multi-AZ deployment. You can't set
    /// the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.
    /// 
    /// This setting doesn't apply to the following DB instances:
    /// 
    ///    * Amazon Aurora (DB instance Availability Zones (AZs) are managed by the
    ///    DB cluster.)
    /// 
    ///    * RDS Custom
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "multiAZ")]
    pub multi_az: Option<bool>,
    /// The name of the NCHAR character set for the Oracle DB instance.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ncharCharacterSetName")]
    pub nchar_character_set_name: Option<String>,
    /// The network type of the DB instance.
    /// 
    /// The network type is determined by the DBSubnetGroup specified for the DB
    /// instance. A DBSubnetGroup can support only the IPv4 protocol or the IPv4
    /// and the IPv6 protocols (DUAL).
    /// 
    /// For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// Valid Values: IPV4 | DUAL
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "networkType")]
    pub network_type: Option<String>,
    /// The option group to associate the DB instance with.
    /// 
    /// Permanent options, such as the TDE option for Oracle Advanced Security TDE,
    /// can't be removed from an option group. Also, that option group can't be removed
    /// from a DB instance after it is associated with a DB instance.
    /// 
    /// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "optionGroupName")]
    pub option_group_name: Option<String>,
    /// Specifies whether to enable Performance Insights for the DB instance. For
    /// more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "performanceInsightsEnabled")]
    pub performance_insights_enabled: Option<bool>,
    /// The Amazon Web Services KMS key identifier for encryption of Performance
    /// Insights data.
    /// 
    /// The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
    /// ARN, or alias name for the KMS key.
    /// 
    /// If you don't specify a value for PerformanceInsightsKMSKeyId, then Amazon
    /// RDS uses your default KMS key. There is a default KMS key for your Amazon
    /// Web Services account. Your Amazon Web Services account has a different default
    /// KMS key for each Amazon Web Services Region.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "performanceInsightsKMSKeyID")]
    pub performance_insights_kms_key_id: Option<String>,
    /// The number of days to retain Performance Insights data.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    /// 
    /// Valid Values:
    /// 
    ///    * 7
    /// 
    ///    * month * 31, where month is a number of months from 1-23. Examples: 93
    ///    (3 months * 31), 341 (11 months * 31), 589 (19 months * 31)
    /// 
    ///    * 731
    /// 
    /// Default: 7 days
    /// 
    /// If you specify a retention period that isn't valid, such as 94, Amazon RDS
    /// returns an error.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "performanceInsightsRetentionPeriod")]
    pub performance_insights_retention_period: Option<i64>,
    /// The port number on which the database accepts connections.
    /// 
    /// This setting doesn't apply to Aurora DB instances. The port number is managed
    /// by the cluster.
    /// 
    /// Valid Values: 1150-65535
    /// 
    /// Default:
    /// 
    ///    * RDS for Db2 - 50000
    /// 
    ///    * RDS for MariaDB - 3306
    /// 
    ///    * RDS for Microsoft SQL Server - 1433
    /// 
    ///    * RDS for MySQL - 3306
    /// 
    ///    * RDS for Oracle - 1521
    /// 
    ///    * RDS for PostgreSQL - 5432
    /// 
    /// Constraints:
    /// 
    ///    * For RDS for Microsoft SQL Server, the value can't be 1234, 1434, 3260,
    ///    3343, 3389, 47001, or 49152-49156.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub port: Option<i64>,
    /// When you are creating a read replica from one Amazon Web Services GovCloud
    /// (US) Region to another or from one China Amazon Web Services Region to another,
    /// the URL that contains a Signature Version 4 signed request for the CreateDBInstanceReadReplica
    /// API operation in the source Amazon Web Services Region that contains the
    /// source DB instance.
    /// 
    /// This setting applies only to Amazon Web Services GovCloud (US) Regions and
    /// China Amazon Web Services Regions. It's ignored in other Amazon Web Services
    /// Regions.
    /// 
    /// This setting applies only when replicating from a source DB instance. Source
    /// DB clusters aren't supported in Amazon Web Services GovCloud (US) Regions
    /// and China Amazon Web Services Regions.
    /// 
    /// You must specify this parameter when you create an encrypted read replica
    /// from another Amazon Web Services Region by using the Amazon RDS API. Don't
    /// specify PreSignedUrl when you are creating an encrypted read replica in the
    /// same Amazon Web Services Region.
    /// 
    /// The presigned URL must be a valid request for the CreateDBInstanceReadReplica
    /// API operation that can run in the source Amazon Web Services Region that
    /// contains the encrypted source DB instance. The presigned URL request must
    /// contain the following parameter values:
    /// 
    ///    * DestinationRegion - The Amazon Web Services Region that the encrypted
    ///    read replica is created in. This Amazon Web Services Region is the same
    ///    one where the CreateDBInstanceReadReplica operation is called that contains
    ///    this presigned URL. For example, if you create an encrypted DB instance
    ///    in the us-west-1 Amazon Web Services Region, from a source DB instance
    ///    in the us-east-2 Amazon Web Services Region, then you call the CreateDBInstanceReadReplica
    ///    operation in the us-east-1 Amazon Web Services Region and provide a presigned
    ///    URL that contains a call to the CreateDBInstanceReadReplica operation
    ///    in the us-west-2 Amazon Web Services Region. For this example, the DestinationRegion
    ///    in the presigned URL must be set to the us-east-1 Amazon Web Services
    ///    Region.
    /// 
    ///    * KmsKeyId - The KMS key identifier for the key to use to encrypt the
    ///    read replica in the destination Amazon Web Services Region. This is the
    ///    same identifier for both the CreateDBInstanceReadReplica operation that
    ///    is called in the destination Amazon Web Services Region, and the operation
    ///    contained in the presigned URL.
    /// 
    ///    * SourceDBInstanceIdentifier - The DB instance identifier for the encrypted
    ///    DB instance to be replicated. This identifier must be in the Amazon Resource
    ///    Name (ARN) format for the source Amazon Web Services Region. For example,
    ///    if you are creating an encrypted read replica from a DB instance in the
    ///    us-west-2 Amazon Web Services Region, then your SourceDBInstanceIdentifier
    ///    looks like the following example: arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115.
    /// 
    /// To learn how to generate a Signature Version 4 signed request, see Authenticating
    /// Requests: Using Query Parameters (Amazon Web Services Signature Version 4)
    /// (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html)
    /// and Signature Version 4 Signing Process (https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
    /// 
    /// If you are using an Amazon Web Services SDK tool or the CLI, you can specify
    /// SourceRegion (or --source-region for the CLI) instead of specifying PreSignedUrl
    /// manually. Specifying SourceRegion autogenerates a presigned URL that is a
    /// valid request for the operation that can run in the source Amazon Web Services
    /// Region.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "preSignedURL")]
    pub pre_signed_url: Option<String>,
    /// The daily time range during which automated backups are created if automated
    /// backups are enabled, using the BackupRetentionPeriod parameter. The default
    /// is a 30-minute window selected at random from an 8-hour block of time for
    /// each Amazon Web Services Region. For more information, see Backup window
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
    /// in the Amazon RDS User Guide.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The daily time
    /// range for creating automated backups is managed by the DB cluster.
    /// 
    /// Constraints:
    /// 
    ///    * Must be in the format hh24:mi-hh24:mi.
    /// 
    ///    * Must be in Universal Coordinated Time (UTC).
    /// 
    ///    * Must not conflict with the preferred maintenance window.
    /// 
    ///    * Must be at least 30 minutes.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "preferredBackupWindow")]
    pub preferred_backup_window: Option<String>,
    /// The time range each week during which system maintenance can occur. For more
    /// information, see Amazon RDS Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance)
    /// in the Amazon RDS User Guide.
    /// 
    /// The default is a 30-minute window selected at random from an 8-hour block
    /// of time for each Amazon Web Services Region, occurring on a random day of
    /// the week.
    /// 
    /// Constraints:
    /// 
    ///    * Must be in the format ddd:hh24:mi-ddd:hh24:mi.
    /// 
    ///    * The day values must be mon | tue | wed | thu | fri | sat | sun.
    /// 
    ///    * Must be in Universal Coordinated Time (UTC).
    /// 
    ///    * Must not conflict with the preferred backup window.
    /// 
    ///    * Must be at least 30 minutes.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "preferredMaintenanceWindow")]
    pub preferred_maintenance_window: Option<String>,
    /// The number of CPU cores and the number of threads per core for the DB instance
    /// class of the DB instance.
    /// 
    /// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "processorFeatures")]
    pub processor_features: Option<Vec<DBInstanceProcessorFeatures>>,
    /// The order of priority in which an Aurora Replica is promoted to the primary
    /// instance after a failure of the existing primary instance. For more information,
    /// see Fault Tolerance for an Aurora DB Cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance)
    /// in the Amazon Aurora User Guide.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    /// 
    /// Default: 1
    /// 
    /// Valid Values: 0 - 15
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "promotionTier")]
    pub promotion_tier: Option<i64>,
    /// Specifies whether the DB instance is publicly accessible.
    /// 
    /// When the DB instance is publicly accessible and you connect from outside
    /// of the DB instance's virtual private cloud (VPC), its Domain Name System
    /// (DNS) endpoint resolves to the public IP address. When you connect from within
    /// the same VPC as the DB instance, the endpoint resolves to the private IP
    /// address. Access to the DB instance is ultimately controlled by the security
    /// group it uses. That public access is not permitted if the security group
    /// assigned to the DB instance doesn't permit it.
    /// 
    /// When the DB instance isn't publicly accessible, it is an internal DB instance
    /// with a DNS name that resolves to a private IP address.
    /// 
    /// Default: The default behavior varies depending on whether DBSubnetGroupName
    /// is specified.
    /// 
    /// If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified,
    /// the following applies:
    /// 
    ///    * If the default VPC in the target Region doesn’t have an internet gateway
    ///    attached to it, the DB instance is private.
    /// 
    ///    * If the default VPC in the target Region has an internet gateway attached
    ///    to it, the DB instance is public.
    /// 
    /// If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified,
    /// the following applies:
    /// 
    ///    * If the subnets are part of a VPC that doesn’t have an internet gateway
    ///    attached to it, the DB instance is private.
    /// 
    ///    * If the subnets are part of a VPC that has an internet gateway attached
    ///    to it, the DB instance is public.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "publiclyAccessible")]
    pub publicly_accessible: Option<bool>,
    /// The open mode of the replica database: mounted or read-only.
    /// 
    /// This parameter is only supported for Oracle DB instances.
    /// 
    /// Mounted DB replicas are included in Oracle Database Enterprise Edition. The
    /// main use case for mounted replicas is cross-Region disaster recovery. The
    /// primary database doesn't use Active Data Guard to transmit information to
    /// the mounted replica. Because it doesn't accept user connections, a mounted
    /// replica can't serve a read-only workload.
    /// 
    /// You can create a combination of mounted and read-only DB replicas for the
    /// same primary DB instance. For more information, see Working with Oracle Read
    /// Replicas for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// For RDS Custom, you must specify this parameter and set it to mounted. The
    /// value won't be set by default. After replica creation, you can manage the
    /// open mode manually.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "replicaMode")]
    pub replica_mode: Option<String>,
    /// The identifier of the DB instance that will act as the source for the read
    /// replica. Each DB instance can have up to 15 read replicas, with the exception
    /// of Oracle and SQL Server, which can have up to five.
    /// 
    /// Constraints:
    /// 
    ///    * Must be the identifier of an existing Db2, MariaDB, MySQL, Oracle, PostgreSQL,
    ///    or SQL Server DB instance.
    /// 
    ///    * Can't be specified if the SourceDBClusterIdentifier parameter is also
    ///    specified.
    /// 
    ///    * For the limitations of Oracle read replicas, see Version and licensing
    ///    considerations for RDS for Oracle replicas (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.limitations.html#oracle-read-replicas.limitations.versions-and-licenses)
    ///    in the Amazon RDS User Guide.
    /// 
    ///    * For the limitations of SQL Server read replicas, see Read replica limitations
    ///    with SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/SQLServer.ReadReplicas.html#SQLServer.ReadReplicas.Limitations)
    ///    in the Amazon RDS User Guide.
    /// 
    ///    * The specified DB instance must have automatic backups enabled, that
    ///    is, its backup retention period must be greater than 0.
    /// 
    ///    * If the source DB instance is in the same Amazon Web Services Region
    ///    as the read replica, specify a valid DB instance identifier.
    /// 
    ///    * If the source DB instance is in a different Amazon Web Services Region
    ///    from the read replica, specify a valid DB instance ARN. For more information,
    ///    see Constructing an ARN for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing)
    ///    in the Amazon RDS User Guide. This doesn't apply to SQL Server or RDS
    ///    Custom, which don't support cross-Region replicas.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sourceDBInstanceIdentifier")]
    pub source_db_instance_identifier: Option<String>,
    /// SourceRegion is the source region where the resource exists. This is not
    /// sent over the wire and is only used for presigning. This value should always
    /// have the same region as the source ARN.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "sourceRegion")]
    pub source_region: Option<String>,
    /// Specifes whether the DB instance is encrypted. By default, it isn't encrypted.
    /// 
    /// For RDS Custom DB instances, either enable this setting or leave it unset.
    /// Otherwise, Amazon RDS reports an error.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The encryption
    /// for DB instances is managed by the DB cluster.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "storageEncrypted")]
    pub storage_encrypted: Option<bool>,
    /// The storage throughput value for the DB instance.
    /// 
    /// This setting applies only to the gp3 storage type.
    /// 
    /// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "storageThroughput")]
    pub storage_throughput: Option<i64>,
    /// The storage type to associate with the DB instance.
    /// 
    /// If you specify io1, io2, or gp3, you must also include a value for the Iops
    /// parameter.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
    /// by the DB cluster.
    /// 
    /// Valid Values: gp2 | gp3 | io1 | io2 | standard
    /// 
    /// Default: io1, if the Iops parameter is specified. Otherwise, gp2.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "storageType")]
    pub storage_type: Option<String>,
    /// Tags to assign to the DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<DBInstanceTags>>,
    /// The ARN from the key store with which to associate the instance for TDE encryption.
    /// 
    /// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "tdeCredentialARN")]
    pub tde_credential_arn: Option<String>,
    /// The password for the given ARN from the key store in order to access the
    /// device.
    /// 
    /// This setting doesn't apply to RDS Custom DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "tdeCredentialPassword")]
    pub tde_credential_password: Option<String>,
    /// The time zone of the DB instance. The time zone parameter is currently supported
    /// only by RDS for Db2 (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-time-zone)
    /// and RDS for SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    /// Specifies whether the DB instance class of the DB instance uses its default
    /// processor features.
    /// 
    /// This setting doesn't apply to RDS Custom.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "useDefaultProcessorFeatures")]
    pub use_default_processor_features: Option<bool>,
    /// A list of Amazon EC2 VPC security groups to associate with this DB instance.
    /// 
    /// This setting doesn't apply to Amazon Aurora DB instances. The associated
    /// list of EC2 VPC security groups is managed by the DB cluster.
    /// 
    /// Default: The default EC2 VPC security group for the DB subnet group's VPC.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "vpcSecurityGroupIDs")]
    pub vpc_security_group_i_ds: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "vpcSecurityGroupRefs")]
    pub vpc_security_group_refs: Option<Vec<DBInstanceVpcSecurityGroupRefs>>,
}

/// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
/// type to provide more user friendly syntax for references using 'from' field
/// Ex:
/// APIIDRef:
/// 
/// 	from:
/// 	  name: my-api
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceDbParameterGroupRef {
    /// AWSResourceReference provides all the values necessary to reference another
    /// k8s resource for finding the identifier(Id/ARN/Name)
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub from: Option<DBInstanceDbParameterGroupRefFrom>,
}

/// AWSResourceReference provides all the values necessary to reference another
/// k8s resource for finding the identifier(Id/ARN/Name)
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceDbParameterGroupRefFrom {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

/// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
/// type to provide more user friendly syntax for references using 'from' field
/// Ex:
/// APIIDRef:
/// 
/// 	from:
/// 	  name: my-api
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceDbSubnetGroupRef {
    /// AWSResourceReference provides all the values necessary to reference another
    /// k8s resource for finding the identifier(Id/ARN/Name)
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub from: Option<DBInstanceDbSubnetGroupRefFrom>,
}

/// AWSResourceReference provides all the values necessary to reference another
/// k8s resource for finding the identifier(Id/ARN/Name)
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceDbSubnetGroupRefFrom {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

/// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
/// type to provide more user friendly syntax for references using 'from' field
/// Ex:
/// APIIDRef:
/// 
/// 	from:
/// 	  name: my-api
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceKmsKeyRef {
    /// AWSResourceReference provides all the values necessary to reference another
    /// k8s resource for finding the identifier(Id/ARN/Name)
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub from: Option<DBInstanceKmsKeyRefFrom>,
}

/// AWSResourceReference provides all the values necessary to reference another
/// k8s resource for finding the identifier(Id/ARN/Name)
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceKmsKeyRefFrom {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

/// The password for the master user.
/// 
/// This setting doesn't apply to Amazon Aurora DB instances. The password for
/// the master user is managed by the DB cluster.
/// 
/// Constraints:
/// 
///    * Can't be specified if ManageMasterUserPassword is turned on.
/// 
///    * Can include any printable ASCII character except "/", """, or "@". For
///    RDS for Oracle, can't include the "&" (ampersand) or the "'" (single quotes)
///    character.
/// 
/// Length Constraints:
/// 
///    * RDS for Db2 - Must contain from 8 to 255 characters.
/// 
///    * RDS for MariaDB - Must contain from 8 to 41 characters.
/// 
///    * RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.
/// 
///    * RDS for MySQL - Must contain from 8 to 41 characters.
/// 
///    * RDS for Oracle - Must contain from 8 to 30 characters.
/// 
///    * RDS for PostgreSQL - Must contain from 8 to 128 characters.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceMasterUserPassword {
    /// Key is the key within the secret
    pub key: String,
    /// name is unique within a namespace to reference a secret resource.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// namespace defines the space within which the secret name must be unique.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

/// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
/// type to provide more user friendly syntax for references using 'from' field
/// Ex:
/// APIIDRef:
/// 
/// 	from:
/// 	  name: my-api
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceMasterUserSecretKmsKeyRef {
    /// AWSResourceReference provides all the values necessary to reference another
    /// k8s resource for finding the identifier(Id/ARN/Name)
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub from: Option<DBInstanceMasterUserSecretKmsKeyRefFrom>,
}

/// AWSResourceReference provides all the values necessary to reference another
/// k8s resource for finding the identifier(Id/ARN/Name)
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceMasterUserSecretKmsKeyRefFrom {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

/// Contains the processor features of a DB instance class.
/// 
/// To specify the number of CPU cores, use the coreCount feature name for the
/// Name parameter. To specify the number of threads per core, use the threadsPerCore
/// feature name for the Name parameter.
/// 
/// You can set the processor features of the DB instance class for a DB instance
/// when you call one of the following actions:
/// 
///    * CreateDBInstance
/// 
///    * ModifyDBInstance
/// 
///    * RestoreDBInstanceFromDBSnapshot
/// 
///    * RestoreDBInstanceFromS3
/// 
///    * RestoreDBInstanceToPointInTime
/// 
/// You can view the valid processor values for a particular instance class by
/// calling the DescribeOrderableDBInstanceOptions action and specifying the
/// instance class for the DBInstanceClass parameter.
/// 
/// In addition, you can use the following actions for DB instance class processor
/// information:
/// 
///    * DescribeDBInstances
/// 
///    * DescribeDBSnapshots
/// 
///    * DescribeValidDBInstanceModifications
/// 
/// If you call DescribeDBInstances, ProcessorFeature returns non-null values
/// only if the following conditions are met:
/// 
///    * You are accessing an Oracle DB instance.
/// 
///    * Your Oracle DB instance class supports configuring the number of CPU
///    cores and threads per core.
/// 
///    * The current number CPU cores and threads is set to a non-default value.
/// 
/// For more information, see Configuring the processor for a DB instance class
/// in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
/// in the Amazon RDS User Guide.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceProcessorFeatures {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

/// Metadata assigned to an Amazon RDS resource consisting of a key-value pair.
/// 
/// For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
/// in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
/// (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
/// in the Amazon Aurora User Guide.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceTags {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

/// AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
/// type to provide more user friendly syntax for references using 'from' field
/// Ex:
/// APIIDRef:
/// 
/// 	from:
/// 	  name: my-api
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceVpcSecurityGroupRefs {
    /// AWSResourceReference provides all the values necessary to reference another
    /// k8s resource for finding the identifier(Id/ARN/Name)
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub from: Option<DBInstanceVpcSecurityGroupRefsFrom>,
}

/// AWSResourceReference provides all the values necessary to reference another
/// k8s resource for finding the identifier(Id/ARN/Name)
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceVpcSecurityGroupRefsFrom {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

/// DBInstanceStatus defines the observed state of DBInstance
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatus {
    /// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
    /// that is used to contain resource sync state, account ownership,
    /// constructed ARN for the resource
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "ackResourceMetadata")]
    pub ack_resource_metadata: Option<DBInstanceStatusAckResourceMetadata>,
    /// Indicates whether engine-native audit fields are included in the database
    /// activity stream.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "activityStreamEngineNativeAuditFieldsIncluded")]
    pub activity_stream_engine_native_audit_fields_included: Option<bool>,
    /// The Amazon Web Services KMS key identifier used for encrypting messages in
    /// the database activity stream. The Amazon Web Services KMS key identifier
    /// is the key ARN, key ID, alias ARN, or alias name for the KMS key.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "activityStreamKMSKeyID")]
    pub activity_stream_kms_key_id: Option<String>,
    /// The name of the Amazon Kinesis data stream used for the database activity
    /// stream.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "activityStreamKinesisStreamName")]
    pub activity_stream_kinesis_stream_name: Option<String>,
    /// The mode of the database activity stream. Database events such as a change
    /// or access generate an activity stream event. RDS for Oracle always handles
    /// these events asynchronously.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "activityStreamMode")]
    pub activity_stream_mode: Option<String>,
    /// The status of the policy state of the activity stream.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "activityStreamPolicyStatus")]
    pub activity_stream_policy_status: Option<String>,
    /// The status of the database activity stream.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "activityStreamStatus")]
    pub activity_stream_status: Option<String>,
    /// The Amazon Web Services Identity and Access Management (IAM) roles associated
    /// with the DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "associatedRoles")]
    pub associated_roles: Option<Vec<DBInstanceStatusAssociatedRoles>>,
    /// The time when a stopped DB instance is restarted automatically.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "automaticRestartTime")]
    pub automatic_restart_time: Option<String>,
    /// The automation mode of the RDS Custom DB instance: full or all paused. If
    /// full, the DB instance automates monitoring and instance recovery. If all
    /// paused, the instance pauses automation for the duration set by --resume-full-automation-mode-minutes.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "automationMode")]
    pub automation_mode: Option<String>,
    /// The Amazon Resource Name (ARN) of the recovery point in Amazon Web Services
    /// Backup.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "awsBackupRecoveryPointARN")]
    pub aws_backup_recovery_point_arn: Option<String>,
    /// The details of the DB instance's server certificate.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "certificateDetails")]
    pub certificate_details: Option<DBInstanceStatusCertificateDetails>,
    /// All CRs managed by ACK have a common `Status.Conditions` member that
    /// contains a collection of `ackv1alpha1.Condition` objects that describe
    /// the various terminal states of the CR and its backend AWS service API
    /// resource
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
    /// Indicates whether a customer-owned IP address (CoIP) is enabled for an RDS
    /// on Outposts DB instance.
    /// 
    /// A CoIP provides local or external connectivity to resources in your Outpost
    /// subnets through your on-premises network. For some use cases, a CoIP can
    /// provide lower latency for connections to the DB instance from outside of
    /// its virtual private cloud (VPC) on your local network.
    /// 
    /// For more information about RDS on Outposts, see Working with Amazon RDS on
    /// Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
    /// in the Amazon Web Services Outposts User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "customerOwnedIPEnabled")]
    pub customer_owned_ip_enabled: Option<bool>,
    /// The list of replicated automated backups associated with the DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbInstanceAutomatedBackupsReplications")]
    pub db_instance_automated_backups_replications: Option<Vec<DBInstanceStatusDbInstanceAutomatedBackupsReplications>>,
    /// The port that the DB instance listens on. If the DB instance is part of a
    /// DB cluster, this can be a different port than the DB cluster port.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbInstancePort")]
    pub db_instance_port: Option<i64>,
    /// The current state of this database.
    /// 
    /// For information about DB instance statuses, see Viewing DB instance status
    /// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/accessing-monitoring.html#Overview.DBInstance.Status)
    /// in the Amazon RDS User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbInstanceStatus")]
    pub db_instance_status: Option<String>,
    /// The list of DB parameter groups applied to this DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbParameterGroups")]
    pub db_parameter_groups: Option<Vec<DBInstanceStatusDbParameterGroups>>,
    /// Information about the subnet group associated with the DB instance, including
    /// the name, description, and subnets in the subnet group.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSubnetGroup")]
    pub db_subnet_group: Option<DBInstanceStatusDbSubnetGroup>,
    /// The Oracle system ID (Oracle SID) for a container database (CDB). The Oracle
    /// SID is also the name of the CDB. This setting is only valid for RDS Custom
    /// DB instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSystemID")]
    pub db_system_id: Option<String>,
    /// The Amazon Web Services Region-unique, immutable identifier for the DB instance.
    /// This identifier is found in Amazon Web Services CloudTrail log entries whenever
    /// the Amazon Web Services KMS key for the DB instance is accessed.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbiResourceID")]
    pub dbi_resource_id: Option<String>,
    /// The Active Directory Domain membership records associated with the DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "domainMemberships")]
    pub domain_memberships: Option<Vec<DBInstanceStatusDomainMemberships>>,
    /// A list of log types that this DB instance is configured to export to CloudWatch
    /// Logs.
    /// 
    /// Log types vary by DB engine. For information about the log types for each
    /// DB engine, see Monitoring Amazon RDS log files (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html)
    /// in the Amazon RDS User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "enabledCloudwatchLogsExports")]
    pub enabled_cloudwatch_logs_exports: Option<Vec<String>>,
    /// The connection endpoint for the DB instance.
    /// 
    /// The endpoint might not be shown for instances with the status of creating.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub endpoint: Option<DBInstanceStatusEndpoint>,
    /// The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that
    /// receives the Enhanced Monitoring metrics data for the DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "enhancedMonitoringResourceARN")]
    pub enhanced_monitoring_resource_arn: Option<String>,
    /// Indicates whether mapping of Amazon Web Services Identity and Access Management
    /// (IAM) accounts to database accounts is enabled for the DB instance.
    /// 
    /// For a list of engine versions that support IAM database authentication, see
    /// IAM database authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.IamDatabaseAuthentication.html)
    /// in the Amazon RDS User Guide and IAM database authentication in Aurora (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.Aurora_Fea_Regions_DB-eng.Feature.IAMdbauth.html)
    /// in the Amazon Aurora User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "iamDatabaseAuthenticationEnabled")]
    pub iam_database_authentication_enabled: Option<bool>,
    /// The date and time when the DB instance was created.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "instanceCreateTime")]
    pub instance_create_time: Option<String>,
    /// The latest time to which a database in this DB instance can be restored with
    /// point-in-time restore.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "latestRestorableTime")]
    pub latest_restorable_time: Option<String>,
    /// The listener connection endpoint for SQL Server Always On.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "listenerEndpoint")]
    pub listener_endpoint: Option<DBInstanceStatusListenerEndpoint>,
    /// The secret managed by RDS in Amazon Web Services Secrets Manager for the
    /// master user password.
    /// 
    /// For more information, see Password management with Amazon Web Services Secrets
    /// Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
    /// in the Amazon RDS User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "masterUserSecret")]
    pub master_user_secret: Option<DBInstanceStatusMasterUserSecret>,
    /// The list of option group memberships for this DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "optionGroupMemberships")]
    pub option_group_memberships: Option<Vec<DBInstanceStatusOptionGroupMemberships>>,
    /// Information about pending changes to the DB instance. This information is
    /// returned only when there are pending changes. Specific changes are identified
    /// by subelements.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "pendingModifiedValues")]
    pub pending_modified_values: Option<DBInstanceStatusPendingModifiedValues>,
    /// The identifiers of Aurora DB clusters to which the RDS DB instance is replicated
    /// as a read replica. For example, when you create an Aurora read replica of
    /// an RDS for MySQL DB instance, the Aurora MySQL DB cluster for the Aurora
    /// read replica is shown. This output doesn't contain information about cross-Region
    /// Aurora read replicas.
    /// 
    /// Currently, each RDS DB instance can have only one Aurora read replica.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "readReplicaDBClusterIdentifiers")]
    pub read_replica_db_cluster_identifiers: Option<Vec<String>>,
    /// The identifiers of the read replicas associated with this DB instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "readReplicaDBInstanceIdentifiers")]
    pub read_replica_db_instance_identifiers: Option<Vec<String>>,
    /// The identifier of the source DB cluster if this DB instance is a read replica.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "readReplicaSourceDBClusterIdentifier")]
    pub read_replica_source_db_cluster_identifier: Option<String>,
    /// The identifier of the source DB instance if this DB instance is a read replica.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "readReplicaSourceDBInstanceIdentifier")]
    pub read_replica_source_db_instance_identifier: Option<String>,
    /// The number of minutes to pause the automation. When the time period ends,
    /// RDS Custom resumes full automation. The minimum value is 60 (default). The
    /// maximum value is 1,440.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "resumeFullAutomationModeTime")]
    pub resume_full_automation_mode_time: Option<String>,
    /// If present, specifies the name of the secondary Availability Zone for a DB
    /// instance with multi-AZ support.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "secondaryAvailabilityZone")]
    pub secondary_availability_zone: Option<String>,
    /// The status of a read replica. If the DB instance isn't a read replica, the
    /// value is blank.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "statusInfos")]
    pub status_infos: Option<Vec<DBInstanceStatusStatusInfos>>,
    /// The list of Amazon EC2 VPC security groups that the DB instance belongs to.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "vpcSecurityGroups")]
    pub vpc_security_groups: Option<Vec<DBInstanceStatusVpcSecurityGroups>>,
}

/// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
/// that is used to contain resource sync state, account ownership,
/// constructed ARN for the resource
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusAckResourceMetadata {
    /// ARN is the Amazon Resource Name for the resource. This is a
    /// globally-unique identifier and is set only by the ACK service controller
    /// once the controller has orchestrated the creation of the resource OR
    /// when it has verified that an "adopted" resource (a resource where the
    /// ARN annotation was set by the Kubernetes user on the CR) exists and
    /// matches the supplied CR's Spec field values.
    /// https://github.com/aws/aws-controllers-k8s/issues/270
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub arn: Option<String>,
    /// OwnerAccountID is the AWS Account ID of the account that owns the
    /// backend AWS service API resource.
    #[serde(rename = "ownerAccountID")]
    pub owner_account_id: String,
    /// Region is the AWS region in which the resource exists or will exist.
    pub region: String,
}

/// Information about an Amazon Web Services Identity and Access Management (IAM)
/// role that is associated with a DB instance.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusAssociatedRoles {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "featureName")]
    pub feature_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "roleARN")]
    pub role_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

/// The details of the DB instance's server certificate.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusCertificateDetails {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "cAIdentifier")]
    pub c_a_identifier: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "validTill")]
    pub valid_till: Option<String>,
}

/// Automated backups of a DB instance replicated to another Amazon Web Services
/// Region. They consist of system backups, transaction logs, and database instance
/// properties.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusDbInstanceAutomatedBackupsReplications {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbInstanceAutomatedBackupsARN")]
    pub db_instance_automated_backups_arn: Option<String>,
}

/// The status of the DB parameter group.
/// 
/// This data type is used as a response element in the following actions:
/// 
///    * CreateDBInstance
/// 
///    * CreateDBInstanceReadReplica
/// 
///    * DeleteDBInstance
/// 
///    * ModifyDBInstance
/// 
///    * RebootDBInstance
/// 
///    * RestoreDBInstanceFromDBSnapshot
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusDbParameterGroups {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbParameterGroupName")]
    pub db_parameter_group_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "parameterApplyStatus")]
    pub parameter_apply_status: Option<String>,
}

/// Information about the subnet group associated with the DB instance, including
/// the name, description, and subnets in the subnet group.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusDbSubnetGroup {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSubnetGroupARN")]
    pub db_subnet_group_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSubnetGroupDescription")]
    pub db_subnet_group_description: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSubnetGroupName")]
    pub db_subnet_group_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "subnetGroupStatus")]
    pub subnet_group_status: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub subnets: Option<Vec<DBInstanceStatusDbSubnetGroupSubnets>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "supportedNetworkTypes")]
    pub supported_network_types: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "vpcID")]
    pub vpc_id: Option<String>,
}

/// This data type is used as a response element for the DescribeDBSubnetGroups
/// operation.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusDbSubnetGroupSubnets {
    /// Contains Availability Zone information.
    /// 
    /// This data type is used as an element in the OrderableDBInstanceOption data
    /// type.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "subnetAvailabilityZone")]
    pub subnet_availability_zone: Option<DBInstanceStatusDbSubnetGroupSubnetsSubnetAvailabilityZone>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "subnetIdentifier")]
    pub subnet_identifier: Option<String>,
    /// A data type that represents an Outpost.
    /// 
    /// For more information about RDS on Outposts, see Amazon RDS on Amazon Web
    /// Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
    /// in the Amazon RDS User Guide.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "subnetOutpost")]
    pub subnet_outpost: Option<DBInstanceStatusDbSubnetGroupSubnetsSubnetOutpost>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "subnetStatus")]
    pub subnet_status: Option<String>,
}

/// Contains Availability Zone information.
/// 
/// This data type is used as an element in the OrderableDBInstanceOption data
/// type.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusDbSubnetGroupSubnetsSubnetAvailabilityZone {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

/// A data type that represents an Outpost.
/// 
/// For more information about RDS on Outposts, see Amazon RDS on Amazon Web
/// Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
/// in the Amazon RDS User Guide.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusDbSubnetGroupSubnetsSubnetOutpost {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub arn: Option<String>,
}

/// An Active Directory Domain membership record associated with the DB instance
/// or cluster.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusDomainMemberships {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "fQDN")]
    pub f_qdn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "iamRoleName")]
    pub iam_role_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

/// The connection endpoint for the DB instance.
/// 
/// The endpoint might not be shown for instances with the status of creating.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusEndpoint {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "hostedZoneID")]
    pub hosted_zone_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub port: Option<i64>,
}

/// The listener connection endpoint for SQL Server Always On.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusListenerEndpoint {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "hostedZoneID")]
    pub hosted_zone_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub port: Option<i64>,
}

/// The secret managed by RDS in Amazon Web Services Secrets Manager for the
/// master user password.
/// 
/// For more information, see Password management with Amazon Web Services Secrets
/// Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
/// in the Amazon RDS User Guide.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusMasterUserSecret {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "kmsKeyID")]
    pub kms_key_id: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "secretARN")]
    pub secret_arn: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "secretStatus")]
    pub secret_status: Option<String>,
}

/// Provides information on the option groups the DB instance is a member of.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusOptionGroupMemberships {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "optionGroupName")]
    pub option_group_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

/// Information about pending changes to the DB instance. This information is
/// returned only when there are pending changes. Specific changes are identified
/// by subelements.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusPendingModifiedValues {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "allocatedStorage")]
    pub allocated_storage: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "automationMode")]
    pub automation_mode: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "backupRetentionPeriod")]
    pub backup_retention_period: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "caCertificateIdentifier")]
    pub ca_certificate_identifier: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbInstanceClass")]
    pub db_instance_class: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbInstanceIdentifier")]
    pub db_instance_identifier: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "dbSubnetGroupName")]
    pub db_subnet_group_name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "engineVersion")]
    pub engine_version: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "iamDatabaseAuthenticationEnabled")]
    pub iam_database_authentication_enabled: Option<bool>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub iops: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "licenseModel")]
    pub license_model: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "masterUserPassword")]
    pub master_user_password: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "multiAZ")]
    pub multi_az: Option<bool>,
    /// A list of the log types whose configuration is still pending. In other words,
    /// these log types are in the process of being activated or deactivated.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "pendingCloudwatchLogsExports")]
    pub pending_cloudwatch_logs_exports: Option<DBInstanceStatusPendingModifiedValuesPendingCloudwatchLogsExports>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub port: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "processorFeatures")]
    pub processor_features: Option<Vec<DBInstanceStatusPendingModifiedValuesProcessorFeatures>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "resumeFullAutomationModeTime")]
    pub resume_full_automation_mode_time: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "storageThroughput")]
    pub storage_throughput: Option<i64>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "storageType")]
    pub storage_type: Option<String>,
}

/// A list of the log types whose configuration is still pending. In other words,
/// these log types are in the process of being activated or deactivated.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusPendingModifiedValuesPendingCloudwatchLogsExports {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "logTypesToDisable")]
    pub log_types_to_disable: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "logTypesToEnable")]
    pub log_types_to_enable: Option<Vec<String>>,
}

/// Contains the processor features of a DB instance class.
/// 
/// To specify the number of CPU cores, use the coreCount feature name for the
/// Name parameter. To specify the number of threads per core, use the threadsPerCore
/// feature name for the Name parameter.
/// 
/// You can set the processor features of the DB instance class for a DB instance
/// when you call one of the following actions:
/// 
///    * CreateDBInstance
/// 
///    * ModifyDBInstance
/// 
///    * RestoreDBInstanceFromDBSnapshot
/// 
///    * RestoreDBInstanceFromS3
/// 
///    * RestoreDBInstanceToPointInTime
/// 
/// You can view the valid processor values for a particular instance class by
/// calling the DescribeOrderableDBInstanceOptions action and specifying the
/// instance class for the DBInstanceClass parameter.
/// 
/// In addition, you can use the following actions for DB instance class processor
/// information:
/// 
///    * DescribeDBInstances
/// 
///    * DescribeDBSnapshots
/// 
///    * DescribeValidDBInstanceModifications
/// 
/// If you call DescribeDBInstances, ProcessorFeature returns non-null values
/// only if the following conditions are met:
/// 
///    * You are accessing an Oracle DB instance.
/// 
///    * Your Oracle DB instance class supports configuring the number of CPU
///    cores and threads per core.
/// 
///    * The current number CPU cores and threads is set to a non-default value.
/// 
/// For more information, see Configuring the processor for a DB instance class
/// in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
/// in the Amazon RDS User Guide.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusPendingModifiedValuesProcessorFeatures {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

/// Provides a list of status information for a DB instance.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusStatusInfos {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub normal: Option<bool>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "statusType")]
    pub status_type: Option<String>,
}

/// This data type is used as a response element for queries on VPC security
/// group membership.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct DBInstanceStatusVpcSecurityGroups {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "vpcSecurityGroupID")]
    pub vpc_security_group_id: Option<String>,
}

