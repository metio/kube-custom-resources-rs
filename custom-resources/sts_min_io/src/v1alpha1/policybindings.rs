// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/minio/operator/sts.min.io/v1alpha1/policybindings.yaml
// kopium version: 0.21.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Deserialize, Serialize};
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(
    group = "sts.min.io",
    version = "v1alpha1",
    kind = "PolicyBinding",
    plural = "policybindings"
)]
#[kube(namespaced)]
#[kube(status = "PolicyBindingStatus")]
#[kube(schema = "disabled")]
#[kube(derive = "Default")]
#[kube(derive = "PartialEq")]
pub struct PolicyBindingSpec {
    pub application: PolicyBindingApplication,
    pub policies: Vec<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct PolicyBindingApplication {
    pub namespace: String,
    pub serviceaccount: String,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct PolicyBindingStatus {
    #[serde(rename = "currentState")]
    pub current_state: String,
    pub usage: PolicyBindingStatusUsage,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct PolicyBindingStatusUsage {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub authotizations: Option<i64>,
}
