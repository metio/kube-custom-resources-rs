// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/kubernetes-sigs/container-object-storage-interface/objectstorage.k8s.io/v1alpha2/bucketclaims.yaml
// kopium version: 0.22.5

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
    pub use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;
}
use self::prelude::*;

/// spec defines the desired state of BucketClaim
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[kube(group = "objectstorage.k8s.io", version = "v1alpha2", kind = "BucketClaim", plural = "bucketclaims")]
#[kube(namespaced)]
#[kube(status = "BucketClaimStatus")]
#[kube(schema = "disabled")]
#[kube(derive="Default")]
#[kube(derive="PartialEq")]
pub struct BucketClaimSpec {
    /// foo is an example field of BucketClaim. Edit bucketclaim_types.go to remove/update
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub foo: Option<String>,
}

/// status defines the observed state of BucketClaim
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct BucketClaimStatus {
    /// conditions represent the current state of the BucketClaim resource.
    /// Each condition has a unique type and reflects the status of a specific aspect of the resource.
    /// 
    /// Standard condition types include:
    /// - "Available": the resource is fully functional
    /// - "Progressing": the resource is being created or updated
    /// - "Degraded": the resource failed to reach or maintain its desired state
    /// 
    /// The status of each condition is one of True, False, or Unknown.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
}

