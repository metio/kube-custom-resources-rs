// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --docs --derive=Default --derive=PartialEq --smart-derive-elision --filename crd-catalog/kubernetes-sigs/kueue/kueue.x-k8s.io/v1beta1/multikueueclusters.yaml
// kopium version: 0.21.1

#[allow(unused_imports)]
mod prelude {
    pub use kube::CustomResource;
    pub use serde::{Serialize, Deserialize};
    pub use k8s_openapi::apimachinery::pkg::apis::meta::v1::Condition;
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, PartialEq)]
#[kube(group = "kueue.x-k8s.io", version = "v1beta1", kind = "MultiKueueCluster", plural = "multikueueclusters")]
#[kube(status = "MultiKueueClusterStatus")]
#[kube(schema = "disabled")]
#[kube(derive="PartialEq")]
pub struct MultiKueueClusterSpec {
    /// Information how to connect to the cluster.
    #[serde(rename = "kubeConfig")]
    pub kube_config: MultiKueueClusterKubeConfig,
}

/// Information how to connect to the cluster.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub struct MultiKueueClusterKubeConfig {
    /// Location of the KubeConfig.
    /// 
    /// If LocationType is Secret then Location is the name of the secret inside the namespace in
    /// which the kueue controller manager is running. The config should be stored in the "kubeconfig" key.
    pub location: String,
    /// Type of the KubeConfig location.
    #[serde(rename = "locationType")]
    pub location_type: MultiKueueClusterKubeConfigLocationType,
}

/// Information how to connect to the cluster.
#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]
pub enum MultiKueueClusterKubeConfigLocationType {
    Secret,
    Path,
}

#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
pub struct MultiKueueClusterStatus {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<Condition>>,
}

