apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.15.0"
  name: "bpfapplications.bpfman.io"
spec:
  group: "bpfman.io"
  names:
    kind: "BpfApplication"
    listKind: "BpfApplicationList"
    plural: "bpfapplications"
    singular: "bpfapplication"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".spec.nodeselector"
          name: "NodeSelector"
          type: "string"
        - jsonPath: ".status.conditions[0].reason"
          name: "Status"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "BpfApplication is the Schema for the bpfapplications API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "BpfApplicationSpec defines the desired state of BpfApplication"
              properties:
                byteCode:
                  description: "bytecode configures where the bpf program's bytecode should be loaded\nfrom."
                  properties:
                    image:
                      description: "image used to specify a bytecode container image."
                      properties:
                        imagePullPolicy:
                          default: "IfNotPresent"
                          description: "pullPolicy describes a policy for if/when to pull a bytecode image. Defaults to IfNotPresent."
                          enum:
                            - "Always"
                            - "Never"
                            - "IfNotPresent"
                          type: "string"
                        imagePullSecret:
                          description: "imagePullSecret is the name of the secret bpfman should use to get remote image\nrepository secrets."
                          properties:
                            name:
                              description: "name of the secret which contains the credentials to access the image repository."
                              type: "string"
                            namespace:
                              description: "namespace of the secret which contains the credentials to access the image repository."
                              type: "string"
                          required:
                            - "name"
                            - "namespace"
                          type: "object"
                        url:
                          description: "url is a valid container image URL used to reference a remote bytecode image."
                          maxLength: 525
                          pattern: "[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127}"
                          type: "string"
                      required:
                        - "url"
                      type: "object"
                    path:
                      description: "path is used to specify a bytecode object via filepath."
                      pattern: "^(/[^/\\0]+)+/?$"
                      type: "string"
                  type: "object"
                globalData:
                  additionalProperties:
                    format: "byte"
                    type: "string"
                  description: "globalData allows the user to set global variables when the program is loaded\nwith an array of raw bytes. This is a very low level primitive. The caller\nis responsible for formatting the byte string appropriately considering\nsuch things as size, endianness, alignment and packing of data structures."
                  type: "object"
                mapOwnerSelector:
                  description: "TODO: need to work out how MapOwnerSelector will work after load-attach-split\nmapOwnerSelector is used to select the loaded eBPF program this eBPF program\nwill share a map with."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                nodeSelector:
                  description: "nodeSelector allows the user to specify which nodes to deploy the\nbpf program to. This field must be specified, to select all nodes\nuse standard metav1.LabelSelector semantics and make it empty."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                programs:
                  description: "programs is the list of bpf programs in the BpfApplication that should be\nloaded. The application can selectively choose which program(s) to run\nfrom this list based on the optional attach points provided."
                  items:
                    description: "BpfApplicationProgram defines the desired state of BpfApplication"
                    properties:
                      name:
                        description: "name is the name of the function that is the entry point for the BPF\nprogram"
                        maxLength: 64
                        minLength: 1
                        pattern: "^[a-zA-Z][a-zA-Z0-9_]+."
                        type: "string"
                      tc:
                        description: "tc defines the desired state of the application's TcPrograms."
                        properties:
                          links:
                            description: "links is the list of points to which the program should be attached.  The list items\nare optional and may be updated after the bpf program has been loaded"
                            items:
                              properties:
                                direction:
                                  description: "direction specifies the direction of traffic the tc program should\nattach to for a given network device."
                                  enum:
                                    - "Ingress"
                                    - "Egress"
                                  type: "string"
                                interfaceSelector:
                                  description: "interfaceSelector to determine the network interface (or interfaces)"
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    interfaces:
                                      description: "interfaces refers to a list of network interfaces to attach the BPF\nprogram to."
                                      items:
                                        type: "string"
                                      type: "array"
                                    interfacesDiscoveryConfig:
                                      description: "discoveryConfig allow configuring interface discovery functionality,"
                                      properties:
                                        allowedInterfaces:
                                          description: "allowedInterfaces contains the interface names. If empty, the agent\nfetches all the interfaces in the system, excepting the ones listed in `excludeInterfaces`.\nAn entry enclosed by slashes, such as `/br-/`, is matched as a regular expression.\nOtherwise, it is matched as a case-sensitive string."
                                          items:
                                            type: "string"
                                          type: "array"
                                        excludeInterfaces:
                                          default:
                                            - "lo"
                                          description: "excludeInterfaces contains the interface names that are excluded from interface discovery\nit is matched as a case-sensitive string."
                                          items:
                                            type: "string"
                                          type: "array"
                                        interfaceAutoDiscovery:
                                          default: false
                                          description: "interfaceAutoDiscovery when enabled, the agent process monitors the creation and deletion of interfaces,\nautomatically attaching eBPF hooks to newly discovered interfaces in both directions."
                                          type: "boolean"
                                      type: "object"
                                    primaryNodeInterface:
                                      description: "primaryNodeInterface to attach BPF program to the primary interface on the node. Only 'true' accepted."
                                      type: "boolean"
                                  type: "object"
                                networkNamespaces:
                                  description: "networkNamespaces identifies the set of network namespaces in which to\nattach the eBPF program. If networkNamespaces is not specified, the BPF\nprogram will be attached in the root network namespace."
                                  properties:
                                    pods:
                                      description: "Target pods. This field must be specified, to select all pods use\nstandard metav1.LabelSelector semantics and make it empty."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "pods"
                                  type: "object"
                                priority:
                                  description: "priority specifies the priority of the tc program in relation to\nother programs of the same type with the same attach point. It is a value\nfrom 0 to 1000 where lower values have higher precedence."
                                  format: "int32"
                                  maximum: 1000.0
                                  minimum: 0.0
                                  type: "integer"
                                proceedOn:
                                  default:
                                    - "Pipe"
                                    - "DispatcherReturn"
                                  description: "proceedOn allows the user to call other tc programs in chain on this exit code.\nMultiple values are supported by repeating the parameter."
                                  items:
                                    enum:
                                      - "UnSpec"
                                      - "OK"
                                      - "ReClassify"
                                      - "Shot"
                                      - "Pipe"
                                      - "Stolen"
                                      - "Queued"
                                      - "Repeat"
                                      - "ReDirect"
                                      - "Trap"
                                      - "DispatcherReturn"
                                    type: "string"
                                  type: "array"
                              required:
                                - "direction"
                                - "interfaceSelector"
                                - "networkNamespaces"
                              type: "object"
                            type: "array"
                        type: "object"
                      tcx:
                        description: "tcx defines the desired state of the application's TcxPrograms."
                        properties:
                          links:
                            description: "links is The list of points to which the program should be attached.  The list items\nare optional and may be updated after the bpf program has been loaded"
                            items:
                              properties:
                                direction:
                                  description: "direction specifies the direction of traffic the tcx program should\nattach to for a given network device."
                                  enum:
                                    - "Ingress"
                                    - "Egress"
                                  type: "string"
                                interfaceSelector:
                                  description: "interfaceSelector to determine the network interface (or interfaces)"
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    interfaces:
                                      description: "interfaces refers to a list of network interfaces to attach the BPF\nprogram to."
                                      items:
                                        type: "string"
                                      type: "array"
                                    interfacesDiscoveryConfig:
                                      description: "discoveryConfig allow configuring interface discovery functionality,"
                                      properties:
                                        allowedInterfaces:
                                          description: "allowedInterfaces contains the interface names. If empty, the agent\nfetches all the interfaces in the system, excepting the ones listed in `excludeInterfaces`.\nAn entry enclosed by slashes, such as `/br-/`, is matched as a regular expression.\nOtherwise, it is matched as a case-sensitive string."
                                          items:
                                            type: "string"
                                          type: "array"
                                        excludeInterfaces:
                                          default:
                                            - "lo"
                                          description: "excludeInterfaces contains the interface names that are excluded from interface discovery\nit is matched as a case-sensitive string."
                                          items:
                                            type: "string"
                                          type: "array"
                                        interfaceAutoDiscovery:
                                          default: false
                                          description: "interfaceAutoDiscovery when enabled, the agent process monitors the creation and deletion of interfaces,\nautomatically attaching eBPF hooks to newly discovered interfaces in both directions."
                                          type: "boolean"
                                      type: "object"
                                    primaryNodeInterface:
                                      description: "primaryNodeInterface to attach BPF program to the primary interface on the node. Only 'true' accepted."
                                      type: "boolean"
                                  type: "object"
                                networkNamespaces:
                                  description: "networkNamespaces identifies the set of network namespaces in which to\nattach the eBPF program."
                                  properties:
                                    pods:
                                      description: "Target pods. This field must be specified, to select all pods use\nstandard metav1.LabelSelector semantics and make it empty."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "pods"
                                  type: "object"
                                priority:
                                  description: "priority specifies the priority of the tcx program in relation to\nother programs of the same type with the same attach point. It is a value\nfrom 0 to 1000 where lower values have higher precedence."
                                  format: "int32"
                                  maximum: 1000.0
                                  minimum: 0.0
                                  type: "integer"
                              required:
                                - "direction"
                                - "interfaceSelector"
                                - "networkNamespaces"
                                - "priority"
                              type: "object"
                            type: "array"
                        type: "object"
                      type:
                        description: "type specifies the bpf program type"
                        enum:
                          - "XDP"
                          - "TC"
                          - "TCX"
                          - "UProbe"
                          - "URetProbe"
                        type: "string"
                      uprobe:
                        description: "uprobe defines the desired state of the application's UprobePrograms."
                        properties:
                          links:
                            description: "links is The list of points to which the program should be attached.  The list items\nare optional and may be updated after the bpf program has been loaded"
                            items:
                              properties:
                                containers:
                                  description: "containers identify the set of containers in which to attach the\nuprobe."
                                  properties:
                                    containerNames:
                                      description: "containerNames indicate the name(s) of container(s).  If none are specified, all containers in the\npod are selected."
                                      items:
                                        type: "string"
                                      type: "array"
                                    pods:
                                      description: "pods indicate the target pods. This field must be specified, to select all pods use\nstandard metav1.LabelSelector semantics and make it empty."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "pods"
                                  type: "object"
                                function:
                                  description: "function to attach the uprobe to."
                                  maxLength: 64
                                  minLength: 1
                                  pattern: "^[a-zA-Z][a-zA-Z0-9_]+."
                                  type: "string"
                                offset:
                                  default: 0
                                  description: "offset added to the address of the function for uprobe."
                                  format: "int64"
                                  type: "integer"
                                pid:
                                  description: "pid is only execute uprobe for given process identification number (PID). If PID\nis not provided, uprobe executes for all PIDs."
                                  format: "int32"
                                  type: "integer"
                                target:
                                  description: "target is the Library name or the absolute path to a binary or library."
                                  type: "string"
                              required:
                                - "containers"
                                - "target"
                              type: "object"
                            type: "array"
                        type: "object"
                      uretprobe:
                        description: "uretprobe defines the desired state of the application's UretprobePrograms."
                        properties:
                          links:
                            description: "links is The list of points to which the program should be attached.  The list items\nare optional and may be updated after the bpf program has been loaded"
                            items:
                              properties:
                                containers:
                                  description: "containers identify the set of containers in which to attach the\nuprobe."
                                  properties:
                                    containerNames:
                                      description: "containerNames indicate the name(s) of container(s).  If none are specified, all containers in the\npod are selected."
                                      items:
                                        type: "string"
                                      type: "array"
                                    pods:
                                      description: "pods indicate the target pods. This field must be specified, to select all pods use\nstandard metav1.LabelSelector semantics and make it empty."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "pods"
                                  type: "object"
                                function:
                                  description: "function to attach the uprobe to."
                                  maxLength: 64
                                  minLength: 1
                                  pattern: "^[a-zA-Z][a-zA-Z0-9_]+."
                                  type: "string"
                                offset:
                                  default: 0
                                  description: "offset added to the address of the function for uprobe."
                                  format: "int64"
                                  type: "integer"
                                pid:
                                  description: "pid is only execute uprobe for given process identification number (PID). If PID\nis not provided, uprobe executes for all PIDs."
                                  format: "int32"
                                  type: "integer"
                                target:
                                  description: "target is the Library name or the absolute path to a binary or library."
                                  type: "string"
                              required:
                                - "containers"
                                - "target"
                              type: "object"
                            type: "array"
                        type: "object"
                      xdp:
                        description: "xdp defines the desired state of the application's XdpPrograms."
                        properties:
                          links:
                            description: "links is the list of points to which the program should be attached.  The list items\nare optional and may be udated after the bpf program has been loaded"
                            items:
                              properties:
                                interfaceSelector:
                                  description: "interfaceSelector to determine the network interface (or interfaces)"
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    interfaces:
                                      description: "interfaces refers to a list of network interfaces to attach the BPF\nprogram to."
                                      items:
                                        type: "string"
                                      type: "array"
                                    interfacesDiscoveryConfig:
                                      description: "discoveryConfig allow configuring interface discovery functionality,"
                                      properties:
                                        allowedInterfaces:
                                          description: "allowedInterfaces contains the interface names. If empty, the agent\nfetches all the interfaces in the system, excepting the ones listed in `excludeInterfaces`.\nAn entry enclosed by slashes, such as `/br-/`, is matched as a regular expression.\nOtherwise, it is matched as a case-sensitive string."
                                          items:
                                            type: "string"
                                          type: "array"
                                        excludeInterfaces:
                                          default:
                                            - "lo"
                                          description: "excludeInterfaces contains the interface names that are excluded from interface discovery\nit is matched as a case-sensitive string."
                                          items:
                                            type: "string"
                                          type: "array"
                                        interfaceAutoDiscovery:
                                          default: false
                                          description: "interfaceAutoDiscovery when enabled, the agent process monitors the creation and deletion of interfaces,\nautomatically attaching eBPF hooks to newly discovered interfaces in both directions."
                                          type: "boolean"
                                      type: "object"
                                    primaryNodeInterface:
                                      description: "primaryNodeInterface to attach BPF program to the primary interface on the node. Only 'true' accepted."
                                      type: "boolean"
                                  type: "object"
                                networkNamespaces:
                                  description: "networkNamespaces identifies the set of network namespaces in which to\nattach the eBPF program."
                                  properties:
                                    pods:
                                      description: "Target pods. This field must be specified, to select all pods use\nstandard metav1.LabelSelector semantics and make it empty."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "pods"
                                  type: "object"
                                priority:
                                  description: "priority specifies the priority of the bpf program in relation to\nother programs of the same type with the same attach point. It is a value\nfrom 0 to 1000 where lower values have higher precedence."
                                  format: "int32"
                                  maximum: 1000.0
                                  minimum: 0.0
                                  type: "integer"
                                proceedOn:
                                  default:
                                    - "Pass"
                                    - "DispatcherReturn"
                                  description: "proceedOn allows the user to call other xdp programs in chain on this exit code.\nMultiple values are supported by repeating the parameter."
                                  items:
                                    enum:
                                      - "Aborted"
                                      - "Drop"
                                      - "Pass"
                                      - "TX"
                                      - "ReDirect"
                                      - "DispatcherReturn"
                                    type: "string"
                                  type: "array"
                              required:
                                - "interfaceSelector"
                                - "networkNamespaces"
                              type: "object"
                            type: "array"
                        type: "object"
                    required:
                      - "name"
                      - "type"
                    type: "object"
                    x-kubernetes-validations:
                      - message: "xdp configuration is required when type is xdp, and forbidden otherwise"
                        rule: "has(self.type) && self.type == 'XDP' ?  has(self.xdp) : !has(self.xdp)"
                      - message: "tc configuration is required when type is tc, and forbidden otherwise"
                        rule: "has(self.type) && self.type == 'TC' ?  has(self.tc) : !has(self.tc)"
                      - message: "tcx configuration is required when type is TCX, and forbidden otherwise"
                        rule: "has(self.type) && self.type == 'TCX' ?  has(self.tcx) : !has(self.tcx)"
                      - message: "uprobe configuration is required when type is uprobe, and forbidden otherwise"
                        rule: "has(self.type) && self.type == 'UProbe' ?  has(self.uprobe) : !has(self.uprobe)"
                      - message: "uretprobe configuration is required when type is uretprobe, and forbidden otherwise"
                        rule: "has(self.type) && self.type == 'URetProbe' ?  has(self.uretprobe) : !has(self.uretprobe)"
                  minItems: 1
                  type: "array"
              required:
                - "byteCode"
                - "nodeSelector"
              type: "object"
            status:
              description: "BpfAppStatus reflects the status of a BpfApplication or BpfApplicationState object"
              properties:
                conditions:
                  description: "For a BpfApplication object, Conditions contains the global cluster state\nfor the object. For a BpfApplicationState object, Conditions contains the\nstate of the BpfApplication object on the given node."
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "type"
                  x-kubernetes-list-type: "map"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
