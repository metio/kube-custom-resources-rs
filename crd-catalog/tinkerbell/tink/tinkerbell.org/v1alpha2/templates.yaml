apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.11.4"
  name: "templates.tinkerbell.org"
spec:
  group: "tinkerbell.org"
  names:
    categories:
      - "tinkerbell"
    kind: "Template"
    listKind: "TemplateList"
    plural: "templates"
    shortNames:
      - "tpl"
    singular: "template"
  scope: "Namespaced"
  versions:
    - name: "v1alpha2"
      schema:
        openAPIV3Schema:
          description: "Template defines a set of actions to be run on a target machine. The template is rendered prior to execution where it is exposed to Hardware and user defined data. Most fields within the TemplateSpec may contain templates values excluding .TemplateSpec.Actions[].Name. See https://pkg.go.dev/text/template for more details."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              properties:
                actions:
                  description: "Actions defines the set of actions to be run on a target machine. Actions are run sequentially in the order they are specified. At least 1 action must be specified. Names of actions must be unique within a Template."
                  items:
                    description: "Action defines an individual action to be run on a target machine."
                    properties:
                      args:
                        description: "Args are a set of arguments to be passed to the command executed by the container on launch."
                        items:
                          type: "string"
                        type: "array"
                      cmd:
                        description: "Cmd defines the command to use when launching the image. It overrides the default command of the action. It must be a unix path to an executable program."
                        pattern: "^(/[^/ ]*)+/?$"
                        type: "string"
                      env:
                        additionalProperties:
                          type: "string"
                        description: "Env defines environment variables used when launching the container."
                        type: "object"
                      image:
                        description: "Image is an OCI image."
                        type: "string"
                      name:
                        description: "Name is a name for the action."
                        type: "string"
                      namespaces:
                        description: "Namespace defines the Linux namespaces this container should execute in."
                        properties:
                          network:
                            description: "Network defines the network namespace."
                            type: "string"
                          pid:
                            description: "PID defines the PID namespace"
                            type: "integer"
                        type: "object"
                      volumes:
                        description: "Volumes defines the volumes to mount into the container."
                        items:
                          description: "Volume is a specification for mounting a volume in an action. Volumes take the form {SRC-VOLUME-NAME | SRC-HOST-DIR}:TGT-CONTAINER-DIR:OPTIONS. When specifying a VOLUME-NAME that does not exist it will be created for you. Examples: \n Read-only bind mount bound to /data \n /etc/data:/data:ro \n Writable volume name bound to /data \n shared_volume:/data \n See https://docs.docker.com/storage/volumes/ for additional details."
                          type: "string"
                        type: "array"
                    required:
                      - "image"
                      - "name"
                    type: "object"
                  minItems: 1
                  type: "array"
                env:
                  additionalProperties:
                    type: "string"
                  description: "Env defines environment variables to be available in all actions. If an action specifies the same environment variable it will take precedence."
                  type: "object"
                volumes:
                  description: "Volumes to be mounted on all actions. If an action specifies the same volume it will take precedence."
                  items:
                    description: "Volume is a specification for mounting a volume in an action. Volumes take the form {SRC-VOLUME-NAME | SRC-HOST-DIR}:TGT-CONTAINER-DIR:OPTIONS. When specifying a VOLUME-NAME that does not exist it will be created for you. Examples: \n Read-only bind mount bound to /data \n /etc/data:/data:ro \n Writable volume name bound to /data \n shared_volume:/data \n See https://docs.docker.com/storage/volumes/ for additional details."
                    type: "string"
                  type: "array"
              type: "object"
          type: "object"
      served: false
      storage: false
