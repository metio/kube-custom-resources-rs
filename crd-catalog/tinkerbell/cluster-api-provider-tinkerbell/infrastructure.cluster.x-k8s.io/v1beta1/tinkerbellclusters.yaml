apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.16.2"
  name: "tinkerbellclusters.infrastructure.cluster.x-k8s.io"
spec:
  group: "infrastructure.cluster.x-k8s.io"
  names:
    categories:
      - "cluster-api"
    kind: "TinkerbellCluster"
    listKind: "TinkerbellClusterList"
    plural: "tinkerbellclusters"
    singular: "tinkerbellcluster"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - description: "Cluster to which this TinkerbellCluster belongs"
          jsonPath: ".metadata.labels.cluster\\.x-k8s\\.io/cluster-name"
          name: "Cluster"
          type: "string"
        - description: "TinkerbellCluster ready status"
          jsonPath: ".status.ready"
          name: "Ready"
          type: "string"
      name: "v1beta1"
      schema:
        openAPIV3Schema:
          description: "TinkerbellCluster is the Schema for the tinkerbellclusters API."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "TinkerbellClusterSpec defines the desired state of TinkerbellCluster."
              properties:
                controlPlaneEndpoint:
                  description: "ControlPlaneEndpoint is a required field by ClusterAPI v1beta1.\n\nSee https://cluster-api.sigs.k8s.io/developer/architecture/controllers/cluster.html\nfor more details."
                  properties:
                    host:
                      description: "The hostname on which the API server is serving."
                      type: "string"
                    port:
                      description: "The port on which the API server is serving."
                      format: "int32"
                      type: "integer"
                  required:
                    - "host"
                    - "port"
                  type: "object"
                imageLookupBaseRegistry:
                  default: "ghcr.io/tinkerbell/cluster-api-provider-tinkerbell"
                  description: "ImageLookupBaseRegistry is the base Registry URL that is used for pulling images,\nif not set, the default will be to use ghcr.io/tinkerbell/cluster-api-provider-tinkerbell."
                  type: "string"
                imageLookupFormat:
                  description: "ImageLookupFormat is the URL naming format to use for machine images when\na machine does not specify. When set, this will be used for all cluster machines\nunless a machine specifies a different ImageLookupFormat. Supports substitutions\nfor {{.BaseRegistry}}, {{.OSDistro}}, {{.OSVersion}} and {{.KubernetesVersion}} with\nthe basse URL, OS distribution, OS version, and kubernetes version, respectively.\nBaseRegistry will be the value in ImageLookupBaseRegistry or ghcr.io/tinkerbell/cluster-api-provider-tinkerbell\n(the default), OSDistro will be the value in ImageLookupOSDistro or ubuntu (the default),\nOSVersion will be the value in ImageLookupOSVersion or default based on the OSDistro\n(if known), and the kubernetes version as defined by the packages produced by\nkubernetes/release: v1.13.0, v1.12.5-mybuild.1, or v1.17.3. For example, the default\nimage format of {{.BaseRegistry}}/{{.OSDistro}}-{{.OSVersion}}:{{.KubernetesVersion}}.gz will\nattempt to pull the image from that location. See also: https://golang.org/pkg/text/template/"
                  type: "string"
                imageLookupOSDistro:
                  default: "ubuntu"
                  description: "ImageLookupOSDistro is the name of the OS distro to use when fetching machine images,\nif not set it will default to ubuntu."
                  type: "string"
                imageLookupOSVersion:
                  description: "ImageLookupOSVersion is the version of the OS distribution to use when fetching machine\nimages. If not set it will default based on ImageLookupOSDistro."
                  type: "string"
              type: "object"
            status:
              description: "TinkerbellClusterStatus defines the observed state of TinkerbellCluster."
              properties:
                ready:
                  description: "Ready denotes that the cluster (infrastructure) is ready."
                  type: "boolean"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
