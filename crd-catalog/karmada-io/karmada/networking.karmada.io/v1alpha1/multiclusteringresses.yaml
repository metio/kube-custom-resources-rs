apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "multiclusteringresses.networking.karmada.io"
spec:
  group: "networking.karmada.io"
  names:
    categories:
      - "karmada-io"
    kind: "MultiClusterIngress"
    listKind: "MultiClusterIngressList"
    plural: "multiclusteringresses"
    shortNames:
      - "mci"
    singular: "multiclusteringress"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "MultiClusterIngress is a collection of rules that allow inbound connections to reach the\nendpoints defined by a backend. The structure of MultiClusterIngress is same as Ingress,\nindicates the Ingress in multi-clusters."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Spec is the desired state of the MultiClusterIngress."
              properties:
                defaultBackend:
                  description: "defaultBackend is the backend that should handle requests that don't\nmatch any rule. If Rules are not specified, DefaultBackend must be specified.\nIf DefaultBackend is not set, the handling of requests that do not match any\nof the rules will be up to the Ingress controller."
                  properties:
                    resource:
                      description: "resource is an ObjectRef to another Kubernetes resource in the namespace\nof the Ingress object. If resource is specified, a service.Name and\nservice.Port must not be specified.\nThis is a mutually exclusive setting with \"Service\"."
                      properties:
                        apiGroup:
                          description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                          type: "string"
                        kind:
                          description: "Kind is the type of resource being referenced"
                          type: "string"
                        name:
                          description: "Name is the name of resource being referenced"
                          type: "string"
                      required:
                        - "kind"
                        - "name"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    service:
                      description: "service references a service as a backend.\nThis is a mutually exclusive setting with \"Resource\"."
                      properties:
                        name:
                          description: "name is the referenced service. The service must exist in\nthe same namespace as the Ingress object."
                          type: "string"
                        port:
                          description: "port of the referenced service. A port name or port number\nis required for a IngressServiceBackend."
                          properties:
                            name:
                              description: "name is the name of the port on the Service.\nThis is a mutually exclusive setting with \"Number\"."
                              type: "string"
                            number:
                              description: "number is the numerical port number (e.g. 80) on the Service.\nThis is a mutually exclusive setting with \"Name\"."
                              format: "int32"
                              type: "integer"
                          type: "object"
                      required:
                        - "name"
                      type: "object"
                  type: "object"
                ingressClassName:
                  description: "ingressClassName is the name of an IngressClass cluster resource. Ingress\ncontroller implementations use this field to know whether they should be\nserving this Ingress resource, by a transitive connection\n(controller -> IngressClass -> Ingress resource). Although the\n`kubernetes.io/ingress.class` annotation (simple constant name) was never\nformally defined, it was widely supported by Ingress controllers to create\na direct binding between Ingress controller and Ingress resources. Newly\ncreated Ingress resources should prefer using the field. However, even\nthough the annotation is officially deprecated, for backwards compatibility\nreasons, ingress controllers should still honor that annotation if present."
                  type: "string"
                rules:
                  description: "rules is a list of host rules used to configure the Ingress. If unspecified,\nor no rule matches, all traffic is sent to the default backend."
                  items:
                    description: "IngressRule represents the rules mapping the paths under a specified host to\nthe related backend services. Incoming requests are first evaluated for a host\nmatch, then routed to the backend associated with the matching IngressRuleValue."
                    properties:
                      host:
                        description: "host is the fully qualified domain name of a network host, as defined by RFC 3986.\nNote the following deviations from the \"host\" part of the\nURI as defined in RFC 3986:\n1. IPs are not allowed. Currently an IngressRuleValue can only apply to\n   the IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future.\nIncoming requests are matched against the host before the\nIngressRuleValue. If the host is unspecified, the Ingress routes all\ntraffic based on the specified IngressRuleValue.\n\n\nhost can be \"precise\" which is a domain name without the terminating dot of\na network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name\nprefixed with a single wildcard label (e.g. \"*.foo.com\").\nThe wildcard character '*' must appear by itself as the first DNS label and\nmatches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\").\nRequests will be matched against the Host field in the following way:\n1. If host is precise, the request matches this rule if the http host header is equal to Host.\n2. If host is a wildcard, then the request matches this rule if the http host header\nis to equal to the suffix (removing the first label) of the wildcard rule."
                        type: "string"
                      http:
                        description: "HTTPIngressRuleValue is a list of http selectors pointing to backends.\nIn the example: http://<host>/<path>?<searchpart> -> backend where\nwhere parts of the url correspond to RFC 3986, this resource will be used\nto match against everything after the last '/' and before the first '?'\nor '#'."
                        properties:
                          paths:
                            description: "paths is a collection of paths that map requests to backends."
                            items:
                              description: "HTTPIngressPath associates a path with a backend. Incoming urls matching the\npath are forwarded to the backend."
                              properties:
                                backend:
                                  description: "backend defines the referenced service endpoint to which the traffic\nwill be forwarded to."
                                  properties:
                                    resource:
                                      description: "resource is an ObjectRef to another Kubernetes resource in the namespace\nof the Ingress object. If resource is specified, a service.Name and\nservice.Port must not be specified.\nThis is a mutually exclusive setting with \"Service\"."
                                      properties:
                                        apiGroup:
                                          description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                          type: "string"
                                        kind:
                                          description: "Kind is the type of resource being referenced"
                                          type: "string"
                                        name:
                                          description: "Name is the name of resource being referenced"
                                          type: "string"
                                      required:
                                        - "kind"
                                        - "name"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    service:
                                      description: "service references a service as a backend.\nThis is a mutually exclusive setting with \"Resource\"."
                                      properties:
                                        name:
                                          description: "name is the referenced service. The service must exist in\nthe same namespace as the Ingress object."
                                          type: "string"
                                        port:
                                          description: "port of the referenced service. A port name or port number\nis required for a IngressServiceBackend."
                                          properties:
                                            name:
                                              description: "name is the name of the port on the Service.\nThis is a mutually exclusive setting with \"Number\"."
                                              type: "string"
                                            number:
                                              description: "number is the numerical port number (e.g. 80) on the Service.\nThis is a mutually exclusive setting with \"Name\"."
                                              format: "int32"
                                              type: "integer"
                                          type: "object"
                                      required:
                                        - "name"
                                      type: "object"
                                  type: "object"
                                path:
                                  description: "path is matched against the path of an incoming request. Currently it can\ncontain characters disallowed from the conventional \"path\" part of a URL\nas defined by RFC 3986. Paths must begin with a '/' and must be present\nwhen using PathType with value \"Exact\" or \"Prefix\"."
                                  type: "string"
                                pathType:
                                  description: "pathType determines the interpretation of the path matching. PathType can\nbe one of the following values:\n* Exact: Matches the URL path exactly.\n* Prefix: Matches based on a URL path prefix split by '/'. Matching is\n  done on a path element by element basis. A path element refers is the\n  list of labels in the path split by the '/' separator. A request is a\n  match for path p if every p is an element-wise prefix of p of the\n  request path. Note that if the last element of the path is a substring\n  of the last element in request path, it is not a match (e.g. /foo/bar\n  matches /foo/bar/baz, but does not match /foo/barbaz).\n* ImplementationSpecific: Interpretation of the Path matching is up to\n  the IngressClass. Implementations can treat this as a separate PathType\n  or treat it identically to Prefix or Exact path types.\nImplementations are required to support all path types."
                                  type: "string"
                              required:
                                - "backend"
                                - "pathType"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                        required:
                          - "paths"
                        type: "object"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-type: "atomic"
                tls:
                  description: "tls represents the TLS configuration. Currently the Ingress only supports a\nsingle TLS port, 443. If multiple members of this list specify different hosts,\nthey will be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI."
                  items:
                    description: "IngressTLS describes the transport layer security associated with an ingress."
                    properties:
                      hosts:
                        description: "hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
                        items:
                          type: "string"
                        type: "array"
                        x-kubernetes-list-type: "atomic"
                      secretName:
                        description: "secretName is the name of the secret used to terminate TLS traffic on\nport 443. Field is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the \"Host\" header is used for routing."
                        type: "string"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-type: "atomic"
              type: "object"
            status:
              description: "Status is the current state of the MultiClusterIngress."
              properties:
                loadBalancer:
                  description: "loadBalancer contains the current status of the load-balancer."
                  properties:
                    ingress:
                      description: "ingress is a list containing ingress points for the load-balancer."
                      items:
                        description: "IngressLoadBalancerIngress represents the status of a load-balancer ingress point."
                        properties:
                          hostname:
                            description: "hostname is set for load-balancer ingress points that are DNS based."
                            type: "string"
                          ip:
                            description: "ip is set for load-balancer ingress points that are IP based."
                            type: "string"
                          ports:
                            description: "ports provides information about the ports exposed by this LoadBalancer."
                            items:
                              description: "IngressPortStatus represents the error condition of a service port"
                              properties:
                                error:
                                  description: "error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n- built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.\n---\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                                  maxLength: 316
                                  pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                                  type: "string"
                                port:
                                  description: "port is the port number of the ingress port."
                                  format: "int32"
                                  type: "integer"
                                protocol:
                                  default: "TCP"
                                  description: "protocol is the protocol of the ingress port.\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\""
                                  type: "string"
                              required:
                                - "port"
                                - "protocol"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                        type: "object"
                      type: "array"
                  type: "object"
                serviceLocations:
                  description: "ServiceLocations records the locations of MulticlusterIngress's backend\nService resources. It will be set by the system controller."
                  items:
                    description: "ServiceLocation records the locations of MulticlusterIngress's backend Service resources."
                    properties:
                      clusters:
                        description: "Clusters records the cluster list where the Service is located."
                        items:
                          type: "string"
                        type: "array"
                      name:
                        description: "name is the referenced service. The service must exist in\nthe same namespace as the MultiClusterService object."
                        type: "string"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
                trafficBlockClusters:
                  description: "TrafficBlockClusters records the cluster name list that needs to perform traffic block.\nWhen the cloud provider implements its multicluster-cloud-provider and refreshes\nthe service backend address to the LoadBalancer Service, it needs to filter out\nthe backend addresses in these clusters."
                  items:
                    type: "string"
                  type: "array"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
