apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "works.work.karmada.io"
spec:
  group: "work.karmada.io"
  names:
    categories:
      - "karmada-io"
    kind: "Work"
    listKind: "WorkList"
    plural: "works"
    shortNames:
      - "wk"
    singular: "work"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".spec.workload.manifests[*].kind"
          name: "Workload-Kind"
          type: "string"
        - jsonPath: ".status.conditions[?(@.type==\"Applied\")].status"
          name: "Applied"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Work defines a list of resources to be deployed on the member cluster."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Spec represents the desired behavior of Work."
              properties:
                workload:
                  description: "Workload represents the manifest workload to be deployed on managed cluster."
                  properties:
                    manifests:
                      description: "Manifests represents a list of Kubernetes resources to be deployed on the managed cluster."
                      items:
                        description: "Manifest represents a resource to be deployed on managed cluster."
                        type: "object"
                        x-kubernetes-preserve-unknown-fields: true
                      type: "array"
                  type: "object"
              type: "object"
            status:
              description: "Status represents the status of PropagationStatus."
              properties:
                conditions:
                  description: "Conditions contain the different condition statuses for this work.\nValid condition types are:\n1. Applied represents workload in Work is applied successfully on a managed cluster.\n2. Progressing represents workload in Work is being applied on a managed cluster.\n3. Available represents workload in Work exists on the managed cluster.\n4. Degraded represents the current state of workload does not match the desired\nstate for a certain period."
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                manifestStatuses:
                  description: "ManifestStatuses contains running status of manifests in spec."
                  items:
                    description: "ManifestStatus contains running status of a specific manifest in spec."
                    properties:
                      health:
                        description: "Health represents the healthy state of the current resource.\nThere maybe different rules for different resources to achieve health status."
                        enum:
                          - "Healthy"
                          - "Unhealthy"
                          - "Unknown"
                        type: "string"
                      identifier:
                        description: "Identifier represents the identity of a resource linking to manifests in spec."
                        properties:
                          group:
                            description: "Group is the group of the resource."
                            type: "string"
                          kind:
                            description: "Kind is the kind of the resource."
                            type: "string"
                          name:
                            description: "Name is the name of the resource"
                            type: "string"
                          namespace:
                            description: "Namespace is the namespace of the resource, the resource is cluster scoped if the value\nis empty"
                            type: "string"
                          ordinal:
                            description: "Ordinal represents an index in manifests list, so the condition can still be linked\nto a manifest even though manifest cannot be parsed successfully."
                            type: "integer"
                          resource:
                            description: "Resource is the resource type of the resource"
                            type: "string"
                          version:
                            description: "Version is the version of the resource."
                            type: "string"
                        required:
                          - "kind"
                          - "name"
                          - "ordinal"
                          - "resource"
                          - "version"
                        type: "object"
                      status:
                        description: "Status reflects running status of current manifest."
                        type: "object"
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                      - "identifier"
                    type: "object"
                  type: "array"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
