apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "clusterpropagationpolicies.policy.karmada.io"
spec:
  group: "policy.karmada.io"
  names:
    categories:
      - "karmada-io"
    kind: "ClusterPropagationPolicy"
    listKind: "ClusterPropagationPolicyList"
    plural: "clusterpropagationpolicies"
    shortNames:
      - "cpp"
    singular: "clusterpropagationpolicy"
  scope: "Cluster"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "ClusterPropagationPolicy represents the cluster-wide policy that propagates a group of resources to one or more clusters.\nDifferent with PropagationPolicy that could only propagate resources in its own namespace, ClusterPropagationPolicy\nis able to propagate cluster level resources and resources in any namespace other than system reserved ones.\nSystem reserved namespaces are: karmada-system, karmada-cluster, karmada-es-*."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Spec represents the desired behavior of ClusterPropagationPolicy."
              properties:
                activationPreference:
                  description: "ActivationPreference indicates how the referencing resource template will\nbe propagated, in case of policy changes.\n\n\nIf empty, the resource template will respond to policy changes\nimmediately, in other words, any policy changes will drive the resource\ntemplate to be propagated immediately as per the current propagation rules.\n\n\nIf the value is 'Lazy' means the policy changes will not take effect for now\nbut defer to the resource template changes, in other words, the resource\ntemplate will not be propagated as per the current propagation rules until\nthere is an update on it.\nThis is an experimental feature that might help in a scenario where a policy\nmanages huge amount of resource templates, changes to a policy typically\naffect numerous applications simultaneously. A minor misconfiguration\ncould lead to widespread failures. With this feature, the change can be\ngradually rolled out through iterative modifications of resource templates."
                  enum:
                    - "Lazy"
                  type: "string"
                association:
                  description: "Association tells if relevant resources should be selected automatically.\ne.g. a ConfigMap referred by a Deployment.\ndefault false.\nDeprecated: in favor of PropagateDeps."
                  type: "boolean"
                conflictResolution:
                  default: "Abort"
                  description: "ConflictResolution declares how potential conflict should be handled when\na resource that is being propagated already exists in the target cluster.\n\n\nIt defaults to \"Abort\" which means stop propagating to avoid unexpected\noverwrites. The \"Overwrite\" might be useful when migrating legacy cluster\nresources to Karmada, in which case conflict is predictable and can be\ninstructed to Karmada take over the resource by overwriting."
                  enum:
                    - "Abort"
                    - "Overwrite"
                  type: "string"
                dependentOverrides:
                  description: "DependentOverrides represents the list of overrides(OverridePolicy)\nwhich must present before the current PropagationPolicy takes effect.\n\n\nIt used to explicitly specify overrides which current PropagationPolicy rely on.\nA typical scenario is the users create OverridePolicy(ies) and resources at the same time,\nthey want to ensure the new-created policies would be adopted.\n\n\nNote: For the overrides, OverridePolicy(ies) in current namespace and ClusterOverridePolicy(ies),\nwhich not present in this list will still be applied if they matches the resources."
                  items:
                    type: "string"
                  type: "array"
                failover:
                  description: "Failover indicates how Karmada migrates applications in case of failures.\nIf this value is nil, failover is disabled."
                  properties:
                    application:
                      description: "Application indicates failover behaviors in case of application failure.\nIf this value is nil, failover is disabled.\nIf set, the PropagateDeps should be true so that the dependencies could\nbe migrated along with the application."
                      properties:
                        decisionConditions:
                          description: "DecisionConditions indicates the decision conditions of performing the failover process.\nOnly when all conditions are met can the failover process be performed.\nCurrently, DecisionConditions includes several conditions:\n- TolerationSeconds (optional)"
                          properties:
                            tolerationSeconds:
                              default: 300
                              description: "TolerationSeconds represents the period of time Karmada should wait\nafter reaching the desired state before performing failover process.\nIf not specified, Karmada will immediately perform failover process.\nDefaults to 300s."
                              format: "int32"
                              type: "integer"
                          type: "object"
                        gracePeriodSeconds:
                          description: "GracePeriodSeconds is the maximum waiting duration in seconds before\napplication on the migrated cluster should be deleted.\nRequired only when PurgeMode is \"Graciously\" and defaults to 600s.\nIf the application on the new cluster cannot reach a Healthy state,\nKarmada will delete the application after GracePeriodSeconds is reached.\nValue must be positive integer."
                          format: "int32"
                          type: "integer"
                        purgeMode:
                          default: "Graciously"
                          description: "PurgeMode represents how to deal with the legacy applications on the\ncluster from which the application is migrated.\nValid options are \"Immediately\", \"Graciously\" and \"Never\".\nDefaults to \"Graciously\"."
                          type: "string"
                      required:
                        - "decisionConditions"
                      type: "object"
                  type: "object"
                placement:
                  description: "Placement represents the rule for select clusters to propagate resources."
                  properties:
                    clusterAffinities:
                      description: "ClusterAffinities represents scheduling restrictions to multiple cluster\ngroups that indicated by ClusterAffinityTerm.\n\n\nThe scheduler will evaluate these groups one by one in the order they\nappear in the spec, the group that does not satisfy scheduling restrictions\nwill be ignored which means all clusters in this group will not be selected\nunless it also belongs to the next group(a cluster could belong to multiple\ngroups).\n\n\nIf none of the groups satisfy the scheduling restrictions, then scheduling\nfails, which means no cluster will be selected.\n\n\nNote:\n  1. ClusterAffinities can not co-exist with ClusterAffinity.\n  2. If both ClusterAffinity and ClusterAffinities are not set, any cluster\n     can be scheduling candidates.\n\n\nPotential use case 1:\nThe private clusters in the local data center could be the main group, and\nthe managed clusters provided by cluster providers could be the secondary\ngroup. So that the Karmada scheduler would prefer to schedule workloads\nto the main group and the second group will only be considered in case of\nthe main group does not satisfy restrictions(like, lack of resources).\n\n\nPotential use case 2:\nFor the disaster recovery scenario, the clusters could be organized to\nprimary and backup groups, the workloads would be scheduled to primary\nclusters firstly, and when primary cluster fails(like data center power off),\nKarmada scheduler could migrate workloads to the backup clusters."
                      items:
                        description: "ClusterAffinityTerm selects a set of cluster."
                        properties:
                          affinityName:
                            description: "AffinityName is the name of the cluster group."
                            maxLength: 32
                            minLength: 1
                            type: "string"
                          clusterNames:
                            description: "ClusterNames is the list of clusters to be selected."
                            items:
                              type: "string"
                            type: "array"
                          exclude:
                            description: "ExcludedClusters is the list of clusters to be ignored."
                            items:
                              type: "string"
                            type: "array"
                          fieldSelector:
                            description: "FieldSelector is a filter to select member clusters by fields.\nThe key(field) of the match expression should be 'provider', 'region', or 'zone',\nand the operator of the match expression should be 'In' or 'NotIn'.\nIf non-nil and non-empty, only the clusters match this filter will be selected."
                            properties:
                              matchExpressions:
                                description: "A list of field selector requirements."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                            type: "object"
                          labelSelector:
                            description: "LabelSelector is a filter to select member clusters by labels.\nIf non-nil and non-empty, only the clusters match this filter will be selected."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        required:
                          - "affinityName"
                        type: "object"
                      type: "array"
                    clusterAffinity:
                      description: "ClusterAffinity represents scheduling restrictions to a certain set of clusters.\nNote:\n  1. ClusterAffinity can not co-exist with ClusterAffinities.\n  2. If both ClusterAffinity and ClusterAffinities are not set, any cluster\n     can be scheduling candidates."
                      properties:
                        clusterNames:
                          description: "ClusterNames is the list of clusters to be selected."
                          items:
                            type: "string"
                          type: "array"
                        exclude:
                          description: "ExcludedClusters is the list of clusters to be ignored."
                          items:
                            type: "string"
                          type: "array"
                        fieldSelector:
                          description: "FieldSelector is a filter to select member clusters by fields.\nThe key(field) of the match expression should be 'provider', 'region', or 'zone',\nand the operator of the match expression should be 'In' or 'NotIn'.\nIf non-nil and non-empty, only the clusters match this filter will be selected."
                          properties:
                            matchExpressions:
                              description: "A list of field selector requirements."
                              items:
                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                properties:
                                  key:
                                    description: "The label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                    type: "string"
                                  values:
                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                          type: "object"
                        labelSelector:
                          description: "LabelSelector is a filter to select member clusters by labels.\nIf non-nil and non-empty, only the clusters match this filter will be selected."
                          properties:
                            matchExpressions:
                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              items:
                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                properties:
                                  key:
                                    description: "key is the label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                    type: "string"
                                  values:
                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                            matchLabels:
                              additionalProperties:
                                type: "string"
                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              type: "object"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    clusterTolerations:
                      description: "ClusterTolerations represents the tolerations."
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                    replicaScheduling:
                      description: "ReplicaScheduling represents the scheduling policy on dealing with the number of replicas\nwhen propagating resources that have replicas in spec (e.g. deployments, statefulsets) to member clusters."
                      properties:
                        replicaDivisionPreference:
                          description: "ReplicaDivisionPreference determines how the replicas is divided\nwhen ReplicaSchedulingType is \"Divided\". Valid options are Aggregated and Weighted.\n\"Aggregated\" divides replicas into clusters as few as possible,\nwhile respecting clusters' resource availabilities during the division.\n\"Weighted\" divides replicas by weight according to WeightPreference."
                          enum:
                            - "Aggregated"
                            - "Weighted"
                          type: "string"
                        replicaSchedulingType:
                          default: "Divided"
                          description: "ReplicaSchedulingType determines how the replicas is scheduled when karmada propagating\na resource. Valid options are Duplicated and Divided.\n\"Duplicated\" duplicates the same replicas to each candidate member cluster from resource.\n\"Divided\" divides replicas into parts according to number of valid candidate member\nclusters, and exact replicas for each cluster are determined by ReplicaDivisionPreference."
                          enum:
                            - "Duplicated"
                            - "Divided"
                          type: "string"
                        weightPreference:
                          description: "WeightPreference describes weight for each cluster or for each group of cluster\nIf ReplicaDivisionPreference is set to \"Weighted\", and WeightPreference is not set, scheduler will weight all clusters the same."
                          properties:
                            dynamicWeight:
                              description: "DynamicWeight specifies the factor to generates dynamic weight list.\nIf specified, StaticWeightList will be ignored."
                              enum:
                                - "AvailableReplicas"
                              type: "string"
                            staticWeightList:
                              description: "StaticWeightList defines the static cluster weight."
                              items:
                                description: "StaticClusterWeight defines the static cluster weight."
                                properties:
                                  targetCluster:
                                    description: "TargetCluster describes the filter to select clusters."
                                    properties:
                                      clusterNames:
                                        description: "ClusterNames is the list of clusters to be selected."
                                        items:
                                          type: "string"
                                        type: "array"
                                      exclude:
                                        description: "ExcludedClusters is the list of clusters to be ignored."
                                        items:
                                          type: "string"
                                        type: "array"
                                      fieldSelector:
                                        description: "FieldSelector is a filter to select member clusters by fields.\nThe key(field) of the match expression should be 'provider', 'region', or 'zone',\nand the operator of the match expression should be 'In' or 'NotIn'.\nIf non-nil and non-empty, only the clusters match this filter will be selected."
                                        properties:
                                          matchExpressions:
                                            description: "A list of field selector requirements."
                                            items:
                                              description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                              properties:
                                                key:
                                                  description: "The label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                  type: "string"
                                                values:
                                                  description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                        type: "object"
                                      labelSelector:
                                        description: "LabelSelector is a filter to select member clusters by labels.\nIf non-nil and non-empty, only the clusters match this filter will be selected."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                    type: "object"
                                  weight:
                                    description: "Weight expressing the preference to the cluster(s) specified by 'TargetCluster'."
                                    format: "int64"
                                    minimum: 1.0
                                    type: "integer"
                                required:
                                  - "targetCluster"
                                  - "weight"
                                type: "object"
                              type: "array"
                          type: "object"
                      type: "object"
                    spreadConstraints:
                      description: "SpreadConstraints represents a list of the scheduling constraints."
                      items:
                        description: "SpreadConstraint represents the spread constraints on resources."
                        properties:
                          maxGroups:
                            description: "MaxGroups restricts the maximum number of cluster groups to be selected."
                            type: "integer"
                          minGroups:
                            description: "MinGroups restricts the minimum number of cluster groups to be selected.\nDefaults to 1."
                            type: "integer"
                          spreadByField:
                            description: "SpreadByField represents the fields on Karmada cluster API used for\ndynamically grouping member clusters into different groups.\nResources will be spread among different cluster groups.\nAvailable fields for spreading are: cluster, region, zone, and provider.\nSpreadByField should not co-exist with SpreadByLabel.\nIf both SpreadByField and SpreadByLabel are empty, SpreadByField will be set to \"cluster\" by system."
                            enum:
                              - "cluster"
                              - "region"
                              - "zone"
                              - "provider"
                            type: "string"
                          spreadByLabel:
                            description: "SpreadByLabel represents the label key used for\ngrouping member clusters into different groups.\nResources will be spread among different cluster groups.\nSpreadByLabel should not co-exist with SpreadByField."
                            type: "string"
                        type: "object"
                      type: "array"
                  type: "object"
                preemption:
                  default: "Never"
                  description: "Preemption declares the behaviors for preempting.\nValid options are \"Always\" and \"Never\"."
                  enum:
                    - "Always"
                    - "Never"
                  type: "string"
                priority:
                  default: 0
                  description: "Priority indicates the importance of a policy(PropagationPolicy or ClusterPropagationPolicy).\nA policy will be applied for the matched resource templates if there is\nno other policies with higher priority at the point of the resource\ntemplate be processed.\nOnce a resource template has been claimed by a policy, by default it will\nnot be preempted by following policies even with a higher priority.\nSee Preemption for more details.\n\n\nIn case of two policies have the same priority, the one with a more precise\nmatching rules in ResourceSelectors wins:\n- matching by name(resourceSelector.name) has higher priority than\n  by selector(resourceSelector.labelSelector)\n- matching by selector(resourceSelector.labelSelector) has higher priority\n  than by APIVersion(resourceSelector.apiVersion) and Kind(resourceSelector.kind).\nIf there is still no winner at this point, the one with the lower alphabetic\norder wins, e.g. policy 'bar' has higher priority than 'foo'.\n\n\nThe higher the value, the higher the priority. Defaults to zero."
                  format: "int32"
                  type: "integer"
                propagateDeps:
                  description: "PropagateDeps tells if relevant resources should be propagated automatically.\nTake 'Deployment' which referencing 'ConfigMap' and 'Secret' as an example, when 'propagateDeps' is 'true',\nthe referencing resources could be omitted(for saving config effort) from 'resourceSelectors' as they will be\npropagated along with the Deployment. In addition to the propagating process, the referencing resources will be\nmigrated along with the Deployment in the fail-over scenario.\n\n\nDefaults to false."
                  type: "boolean"
                resourceSelectors:
                  description: "ResourceSelectors used to select resources.\nNil or empty selector is not allowed and doesn't mean match all kinds\nof resources for security concerns that sensitive resources(like Secret)\nmight be accidentally propagated."
                  items:
                    description: "ResourceSelector the resources will be selected."
                    properties:
                      apiVersion:
                        description: "APIVersion represents the API version of the target resources."
                        type: "string"
                      kind:
                        description: "Kind represents the Kind of the target resources."
                        type: "string"
                      labelSelector:
                        description: "A label query over a set of resources.\nIf name is not empty, labelSelector will be ignored."
                        properties:
                          matchExpressions:
                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                            items:
                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                              properties:
                                key:
                                  description: "key is the label key that the selector applies to."
                                  type: "string"
                                operator:
                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                  type: "string"
                                values:
                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                  items:
                                    type: "string"
                                  type: "array"
                              required:
                                - "key"
                                - "operator"
                              type: "object"
                            type: "array"
                          matchLabels:
                            additionalProperties:
                              type: "string"
                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            type: "object"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      name:
                        description: "Name of the target resource.\nDefault is empty, which means selecting all resources."
                        type: "string"
                      namespace:
                        description: "Namespace of the target resource.\nDefault is empty, which means inherit from the parent object scope."
                        type: "string"
                    required:
                      - "apiVersion"
                      - "kind"
                    type: "object"
                  minItems: 1
                  type: "array"
                schedulerName:
                  default: "default-scheduler"
                  description: "SchedulerName represents which scheduler to proceed the scheduling.\nIf specified, the policy will be dispatched by specified scheduler.\nIf not specified, the policy will be dispatched by default scheduler."
                  type: "string"
              required:
                - "resourceSelectors"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
