apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "vmagents.operator.victoriametrics.com"
spec:
  group: "operator.victoriametrics.com"
  names:
    kind: "VMAgent"
    listKind: "VMAgentList"
    plural: "vmagents"
    singular: "vmagent"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - description: "current number of shards"
          jsonPath: ".status.shards"
          name: "Shards Count"
          type: "integer"
        - description: "current number of replicas"
          jsonPath: ".status.replicas"
          name: "Replica Count"
          type: "integer"
        - description: "Current status of update rollout"
          jsonPath: ".status.updateStatus"
          name: "Status"
          type: "string"
      name: "v1beta1"
      schema:
        openAPIV3Schema:
          description: "VMAgent - is a tiny but brave agent, which helps you collect metrics from various sources and stores them in VictoriaMetrics\nor any other Prometheus-compatible storage system that supports the remote_write protocol."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "VMAgentSpec defines the desired state of VMAgent"
              properties:
                aPIServerConfig:
                  description: "APIServerConfig allows specifying a host and auth methods to access apiserver.\nIf left empty, VMAgent is assumed to run inside of the cluster\nand will discover API servers automatically and use the pod's CA certificate\nand bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/."
                  properties:
                    authorization:
                      description: "Authorization configures generic authorization params"
                      properties:
                        credentials:
                          description: "Reference to the secret with value for authorization"
                          properties:
                            key:
                              description: "The key of the secret to select from.  Must be a valid secret key."
                              type: "string"
                            name:
                              description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                              type: "string"
                            optional:
                              description: "Specify whether the Secret or its key must be defined"
                              type: "boolean"
                          required:
                            - "key"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        credentialsFile:
                          description: "File with value for authorization"
                          type: "string"
                        type:
                          description: "Type of authorization, default to bearer"
                          type: "string"
                      type: "object"
                    basicAuth:
                      description: "BasicAuth allow an endpoint to authenticate over basic authentication"
                      properties:
                        password:
                          description: "The secret in the service scrape namespace that contains the password\nfor authentication.\nIt must be at them same namespace as CRD"
                          properties:
                            key:
                              description: "The key of the secret to select from.  Must be a valid secret key."
                              type: "string"
                            name:
                              description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                              type: "string"
                            optional:
                              description: "Specify whether the Secret or its key must be defined"
                              type: "boolean"
                          required:
                            - "key"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        password_file:
                          description: "PasswordFile defines path to password file at disk"
                          type: "string"
                        username:
                          description: "The secret in the service scrape namespace that contains the username\nfor authentication.\nIt must be at them same namespace as CRD"
                          properties:
                            key:
                              description: "The key of the secret to select from.  Must be a valid secret key."
                              type: "string"
                            name:
                              description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                              type: "string"
                            optional:
                              description: "Specify whether the Secret or its key must be defined"
                              type: "boolean"
                          required:
                            - "key"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    bearerToken:
                      description: "Bearer token for accessing apiserver."
                      type: "string"
                    bearerTokenFile:
                      description: "File to read bearer token for accessing apiserver."
                      type: "string"
                    host:
                      description: "Host of apiserver.\nA valid string consisting of a hostname or IP followed by an optional port number"
                      type: "string"
                    tlsConfig:
                      description: "TLSConfig Config to use for accessing apiserver."
                      properties:
                        ca:
                          description: "Stuct containing the CA cert to use for the targets."
                          properties:
                            configMap:
                              description: "ConfigMap containing data to use for the targets."
                              properties:
                                key:
                                  description: "The key to select."
                                  type: "string"
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the ConfigMap or its key must be defined"
                                  type: "boolean"
                              required:
                                - "key"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            secret:
                              description: "Secret containing data to use for the targets."
                              properties:
                                key:
                                  description: "The key of the secret to select from.  Must be a valid secret key."
                                  type: "string"
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the Secret or its key must be defined"
                                  type: "boolean"
                              required:
                                - "key"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        caFile:
                          description: "Path to the CA cert in the container to use for the targets."
                          type: "string"
                        cert:
                          description: "Struct containing the client cert file for the targets."
                          properties:
                            configMap:
                              description: "ConfigMap containing data to use for the targets."
                              properties:
                                key:
                                  description: "The key to select."
                                  type: "string"
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the ConfigMap or its key must be defined"
                                  type: "boolean"
                              required:
                                - "key"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            secret:
                              description: "Secret containing data to use for the targets."
                              properties:
                                key:
                                  description: "The key of the secret to select from.  Must be a valid secret key."
                                  type: "string"
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the Secret or its key must be defined"
                                  type: "boolean"
                              required:
                                - "key"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        certFile:
                          description: "Path to the client cert file in the container for the targets."
                          type: "string"
                        insecureSkipVerify:
                          description: "Disable target certificate validation."
                          type: "boolean"
                        keyFile:
                          description: "Path to the client key file in the container for the targets."
                          type: "string"
                        keySecret:
                          description: "Secret containing the client key file for the targets."
                          properties:
                            key:
                              description: "The key of the secret to select from.  Must be a valid secret key."
                              type: "string"
                            name:
                              description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                              type: "string"
                            optional:
                              description: "Specify whether the Secret or its key must be defined"
                              type: "boolean"
                          required:
                            - "key"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        serverName:
                          description: "Used to verify the hostname for the targets."
                          type: "string"
                      type: "object"
                  required:
                    - "host"
                  type: "object"
                additionalScrapeConfigs:
                  description: "AdditionalScrapeConfigs As scrape configs are appended, the user is responsible to make sure it\nis valid. Note that using this feature may expose the possibility to\nbreak upgrades of VMAgent. It is advised to review VMAgent release\nnotes to ensure that no incompatible scrape configs are going to break\nVMAgent after the upgrade."
                  properties:
                    key:
                      description: "The key of the secret to select from.  Must be a valid secret key."
                      type: "string"
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                    optional:
                      description: "Specify whether the Secret or its key must be defined"
                      type: "boolean"
                  required:
                    - "key"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                affinity:
                  description: "Affinity If specified, the pod's scheduling constraints."
                  type: "object"
                  x-kubernetes-preserve-unknown-fields: true
                arbitraryFSAccessThroughSMs:
                  description: "ArbitraryFSAccessThroughSMs configures whether configuration\nbased on a service scrape can access arbitrary files on the file system\nof the VMAgent container e.g. bearer token files."
                  properties:
                    deny:
                      type: "boolean"
                  type: "object"
                claimTemplates:
                  description: "ClaimTemplates allows adding additional VolumeClaimTemplates for VMAgent in StatefulMode"
                  items:
                    description: "PersistentVolumeClaim is a user's request for and claim to a persistent volume"
                    properties:
                      apiVersion:
                        description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
                        type: "string"
                      kind:
                        description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                        type: "string"
                      metadata:
                        description: "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                        type: "object"
                        x-kubernetes-preserve-unknown-fields: true
                      spec:
                        description: "spec defines the desired characteristics of a volume requested by a pod author.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                        properties:
                          accessModes:
                            description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                            items:
                              type: "string"
                            type: "array"
                          dataSource:
                            description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                            properties:
                              apiGroup:
                                description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                type: "string"
                              kind:
                                description: "Kind is the type of resource being referenced"
                                type: "string"
                              name:
                                description: "Name is the name of resource being referenced"
                                type: "string"
                            required:
                              - "kind"
                              - "name"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          dataSourceRef:
                            description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                            properties:
                              apiGroup:
                                description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                type: "string"
                              kind:
                                description: "Kind is the type of resource being referenced"
                                type: "string"
                              name:
                                description: "Name is the name of resource being referenced"
                                type: "string"
                              namespace:
                                description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                type: "string"
                            required:
                              - "kind"
                              - "name"
                            type: "object"
                          resources:
                            description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          selector:
                            description: "selector is a label query over volumes to consider for binding."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          storageClassName:
                            description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            type: "string"
                          volumeMode:
                            description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                            type: "string"
                          volumeName:
                            description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                            type: "string"
                        type: "object"
                      status:
                        description: "status represents the current information/status of a persistent volume claim.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                        properties:
                          accessModes:
                            description: "accessModes contains the actual access modes the volume backing the PVC has.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                            items:
                              type: "string"
                            type: "array"
                          allocatedResources:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may\nbe larger than the actual capacity when a volume expansion operation is requested.\nFor storage quota, the larger value from allocatedResources and PVC.spec.resources is used.\nIf allocatedResources is not set, PVC.spec.resources alone is used for quota calculation.\nIf a volume expansion capacity request is lowered, allocatedResources is only\nlowered if there are no expansion operations in progress and if the actual volume capacity\nis equal or lower than the requested capacity.\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature."
                            type: "object"
                          capacity:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "capacity represents the actual resources of the underlying volume."
                            type: "object"
                          conditions:
                            description: "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being\nresized then the Condition will be set to 'ResizeStarted'."
                            items:
                              description: "PersistentVolumeClaimCondition contains details about state of pvc"
                              properties:
                                lastProbeTime:
                                  description: "lastProbeTime is the time we probed the condition."
                                  format: "date-time"
                                  type: "string"
                                lastTransitionTime:
                                  description: "lastTransitionTime is the time the condition transitioned from one status to another."
                                  format: "date-time"
                                  type: "string"
                                message:
                                  description: "message is the human-readable message indicating details about last transition."
                                  type: "string"
                                reason:
                                  description: "reason is a unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. If it reports \"ResizeStarted\" that means the underlying\npersistent volume is being resized."
                                  type: "string"
                                status:
                                  type: "string"
                                type:
                                  description: "PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type"
                                  type: "string"
                              required:
                                - "status"
                                - "type"
                              type: "object"
                            type: "array"
                          phase:
                            description: "phase represents the current phase of PersistentVolumeClaim."
                            type: "string"
                          resizeStatus:
                            description: "resizeStatus stores status of resize operation.\nResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty\nstring by resize controller or kubelet.\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature."
                            type: "string"
                        type: "object"
                    type: "object"
                  type: "array"
                configMaps:
                  description: "ConfigMaps is a list of ConfigMaps in the same namespace as the vmagent\nobject, which shall be mounted into the vmagent Pods.\nwill be mounted at path  /etc/vm/configs"
                  items:
                    type: "string"
                  type: "array"
                configReloaderExtraArgs:
                  additionalProperties:
                    type: "string"
                  description: "ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container\nfor example resyncInterval: \"30s\""
                  type: "object"
                containers:
                  description: "Containers property allows to inject additions sidecars or to patch existing containers.\nIt can be useful for proxies, backup, etc."
                  items:
                    description: "A single application container that you want to run within a pod."
                    required:
                      - "name"
                    type: "object"
                    x-kubernetes-preserve-unknown-fields: true
                  type: "array"
                dnsConfig:
                  description: "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy."
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  properties:
                    nameservers:
                      description: "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed."
                      items:
                        type: "string"
                      type: "array"
                    options:
                      description: "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy."
                      items:
                        description: "PodDNSConfigOption defines DNS resolver options of a pod."
                        properties:
                          name:
                            description: "Required."
                            type: "string"
                          value:
                            type: "string"
                        type: "object"
                      type: "array"
                    searches:
                      description: "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed."
                      items:
                        type: "string"
                      type: "array"
                  type: "object"
                dnsPolicy:
                  description: "DNSPolicy set DNS policy for the pod"
                  type: "string"
                enforcedNamespaceLabel:
                  description: "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert\nand metric that is user created. The label value will always be the namespace of the object that is\nbeing created."
                  type: "string"
                externalLabels:
                  additionalProperties:
                    type: "string"
                  description: "ExternalLabels The labels to add to any time series scraped by vmagent.\nit doesn't affect metrics ingested directly by push API's"
                  type: "object"
                extraArgs:
                  additionalProperties:
                    type: "string"
                  description: "ExtraArgs that will be passed to  VMAgent pod\nfor example remoteWrite.tmpDataPath: /tmp\nit would be converted to flag --remoteWrite.tmpDataPath=/tmp"
                  type: "object"
                extraEnvs:
                  description: "ExtraEnvs that will be added to VMAgent pod"
                  items:
                    description: "EnvVar represents an environment variable present in a Container."
                    properties:
                      name:
                        description: "Name of the environment variable. Must be a C_IDENTIFIER."
                        type: "string"
                      value:
                        description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                        type: "string"
                    required:
                      - "name"
                    type: "object"
                    x-kubernetes-preserve-unknown-fields: true
                  type: "array"
                hostNetwork:
                  description: "HostNetwork controls whether the pod may use the node network namespace"
                  type: "boolean"
                host_aliases:
                  description: "HostAliases provides mapping between ip and hostnames,\nthat would be propagated to pod,\ncannot be used with HostNetwork."
                  items:
                    description: "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file."
                    properties:
                      hostnames:
                        description: "Hostnames for the above IP address."
                        items:
                          type: "string"
                        type: "array"
                      ip:
                        description: "IP address of the host file entry."
                        type: "string"
                    type: "object"
                  type: "array"
                ignoreNamespaceSelectors:
                  description: "IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from\nthe podscrape and vmservicescrape configs, and they will only discover endpoints\nwithin their current namespace.  Defaults to false."
                  type: "boolean"
                image:
                  description: "Image - docker image settings for VMAgent\nif no specified operator uses default config version"
                  properties:
                    pullPolicy:
                      description: "PullPolicy describes how to pull docker image"
                      type: "string"
                    repository:
                      description: "Repository contains name of docker image + it's repository if needed"
                      type: "string"
                    tag:
                      description: "Tag contains desired docker image version"
                      type: "string"
                  type: "object"
                imagePullSecrets:
                  description: "ImagePullSecrets An optional list of references to secrets in the same namespace\nto use for pulling images from registries\nsee https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod"
                  items:
                    description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                    properties:
                      name:
                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                        type: "string"
                    type: "object"
                    x-kubernetes-map-type: "atomic"
                  type: "array"
                ingestOnlyMode:
                  description: "IngestOnlyMode switches vmagent into unmanaged mode\nit disables any config generation for scraping\nCurrently it prevents vmagent from managing tls and auth options for remote write"
                  type: "boolean"
                initContainers:
                  description: "InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.\nfetch secrets for injection into the vmagent configuration from external sources. Any\nerrors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\nUsing initContainers for any use case other then secret fetching is entirely outside the scope\nof what the maintainers will support and by doing so, you accept that this behaviour may break\nat any time without notice."
                  items:
                    description: "A single application container that you want to run within a pod."
                    required:
                      - "name"
                    type: "object"
                    x-kubernetes-preserve-unknown-fields: true
                  type: "array"
                inlineRelabelConfig:
                  description: "InlineRelabelConfig - defines GlobalRelabelConfig for vmagent, can be defined directly at CRD."
                  items:
                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                    properties:
                      action:
                        description: "Action to perform based on regex matching. Default is 'replace'"
                        type: "string"
                      if:
                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                        x-kubernetes-preserve-unknown-fields: true
                      labels:
                        additionalProperties:
                          type: "string"
                        description: "Labels is used together with Match for `action: graphite`"
                        type: "object"
                      match:
                        description: "Match is used together with Labels for `action: graphite`"
                        type: "string"
                      modulus:
                        description: "Modulus to take of the hash of the source label values."
                        format: "int64"
                        type: "integer"
                      regex:
                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                        x-kubernetes-preserve-unknown-fields: true
                      replacement:
                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                        type: "string"
                      separator:
                        description: "Separator placed between concatenated source label values. default is ';'."
                        type: "string"
                      sourceLabels:
                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                        items:
                          type: "string"
                        type: "array"
                      source_labels:
                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        items:
                          type: "string"
                        type: "array"
                      targetLabel:
                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                        type: "string"
                      target_label:
                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        type: "string"
                    type: "object"
                  type: "array"
                inlineScrapeConfig:
                  description: "InlineScrapeConfig As scrape configs are appended, the user is responsible to make sure it\nis valid. Note that using this feature may expose the possibility to\nbreak upgrades of VMAgent. It is advised to review VMAgent release\nnotes to ensure that no incompatible scrape configs are going to break\nVMAgent after the upgrade.\nit should be defined as single yaml file.\ninlineScrapeConfig: |\n    - job_name: \"prometheus\"\n      static_configs:\n      - targets: [\"localhost:9090\"]"
                  type: "string"
                insertPorts:
                  description: "InsertPorts - additional listen ports for data ingestion."
                  properties:
                    graphitePort:
                      description: "GraphitePort listen port"
                      type: "string"
                    influxPort:
                      description: "InfluxPort listen port"
                      type: "string"
                    openTSDBHTTPPort:
                      description: "OpenTSDBHTTPPort for http connections."
                      type: "string"
                    openTSDBPort:
                      description: "OpenTSDBPort for tcp and udp listen"
                      type: "string"
                  type: "object"
                license:
                  description: "License allows to configure license key to be used for enterprise features.\nUsing license key is supported starting from VictoriaMetrics v1.94.0.\nSee: https://docs.victoriametrics.com/enterprise.html"
                  properties:
                    key:
                      description: "Enterprise license key. This flag is available only in VictoriaMetrics enterprise.\nDocumentation - https://docs.victoriametrics.com/enterprise.html\nfor more information, visit https://victoriametrics.com/products/enterprise/ .\nTo request a trial license, go to https://victoriametrics.com/products/enterprise/trial/"
                      type: "string"
                    keyRef:
                      description: "KeyRef is reference to secret with license key for enterprise features."
                      properties:
                        key:
                          description: "The key of the secret to select from.  Must be a valid secret key."
                          type: "string"
                        name:
                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                          type: "string"
                        optional:
                          description: "Specify whether the Secret or its key must be defined"
                          type: "boolean"
                      required:
                        - "key"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                  type: "object"
                livenessProbe:
                  description: "LivenessProbe that will be added CRD pod"
                  type: "object"
                  x-kubernetes-preserve-unknown-fields: true
                logFormat:
                  description: "LogFormat for VMAgent to be configured with."
                  enum:
                    - "default"
                    - "json"
                  type: "string"
                logLevel:
                  description: "LogLevel for VMAgent to be configured with.\nINFO, WARN, ERROR, FATAL, PANIC"
                  enum:
                    - "INFO"
                    - "WARN"
                    - "ERROR"
                    - "FATAL"
                    - "PANIC"
                  type: "string"
                maxScrapeInterval:
                  description: "MaxScrapeInterval allows limiting maximum scrape interval for VMServiceScrape, VMPodScrape and other scrapes\nIf interval is higher than defined limit, `maxScrapeInterval` will be used."
                  type: "string"
                minReadySeconds:
                  description: "MinReadySeconds defines a minim number os seconds to wait before starting update next pod\nif previous in healthy state"
                  format: "int32"
                  type: "integer"
                minScrapeInterval:
                  description: "MinScrapeInterval allows limiting minimal scrape interval for VMServiceScrape, VMPodScrape and other scrapes\nIf interval is lower than defined limit, `minScrapeInterval` will be used."
                  type: "string"
                nodeScrapeNamespaceSelector:
                  description: "NodeScrapeNamespaceSelector defines Namespaces to be selected for VMNodeScrape discovery.\nWorks in combination with Selector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                nodeScrapeRelabelTemplate:
                  description: "NodeScrapeRelabelTemplate defines relabel config, that will be added to each VMNodeScrape.\nit's useful for adding specific labels to all targets"
                  items:
                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                    properties:
                      action:
                        description: "Action to perform based on regex matching. Default is 'replace'"
                        type: "string"
                      if:
                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                        x-kubernetes-preserve-unknown-fields: true
                      labels:
                        additionalProperties:
                          type: "string"
                        description: "Labels is used together with Match for `action: graphite`"
                        type: "object"
                      match:
                        description: "Match is used together with Labels for `action: graphite`"
                        type: "string"
                      modulus:
                        description: "Modulus to take of the hash of the source label values."
                        format: "int64"
                        type: "integer"
                      regex:
                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                        x-kubernetes-preserve-unknown-fields: true
                      replacement:
                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                        type: "string"
                      separator:
                        description: "Separator placed between concatenated source label values. default is ';'."
                        type: "string"
                      sourceLabels:
                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                        items:
                          type: "string"
                        type: "array"
                      source_labels:
                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        items:
                          type: "string"
                        type: "array"
                      targetLabel:
                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                        type: "string"
                      target_label:
                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        type: "string"
                    type: "object"
                  type: "array"
                nodeScrapeSelector:
                  description: "NodeScrapeSelector defines VMNodeScrape to be selected for scraping.\nWorks in combination with NamespaceSelector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                nodeSelector:
                  additionalProperties:
                    type: "string"
                  description: "NodeSelector Define which Nodes the Pods are scheduled on."
                  type: "object"
                overrideHonorLabels:
                  description: "OverrideHonorLabels if set to true overrides all user configured honor_labels.\nIf HonorLabels is set in ServiceScrape or PodScrape to true, this overrides honor_labels to false."
                  type: "boolean"
                overrideHonorTimestamps:
                  description: "OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs."
                  type: "boolean"
                podDisruptionBudget:
                  description: "PodDisruptionBudget created by operator"
                  properties:
                    maxUnavailable:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      description: "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
                      x-kubernetes-int-or-string: true
                    minAvailable:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      description: "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\"."
                      x-kubernetes-int-or-string: true
                    selectorLabels:
                      additionalProperties:
                        type: "string"
                      description: "replaces default labels selector generated by operator\nit's useful when you need to create custom budget"
                      type: "object"
                  type: "object"
                podMetadata:
                  description: "PodMetadata configures Labels and Annotations which are propagated to the vmagent pods."
                  properties:
                    annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations"
                      type: "object"
                    labels:
                      additionalProperties:
                        type: "string"
                      description: "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
                      type: "object"
                    name:
                      description: "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
                      type: "string"
                  type: "object"
                podScrapeNamespaceSelector:
                  description: "PodScrapeNamespaceSelector defines Namespaces to be selected for VMPodScrape discovery.\nWorks in combination with Selector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                podScrapeRelabelTemplate:
                  description: "PodScrapeRelabelTemplate defines relabel config, that will be added to each VMPodScrape.\nit's useful for adding specific labels to all targets"
                  items:
                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                    properties:
                      action:
                        description: "Action to perform based on regex matching. Default is 'replace'"
                        type: "string"
                      if:
                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                        x-kubernetes-preserve-unknown-fields: true
                      labels:
                        additionalProperties:
                          type: "string"
                        description: "Labels is used together with Match for `action: graphite`"
                        type: "object"
                      match:
                        description: "Match is used together with Labels for `action: graphite`"
                        type: "string"
                      modulus:
                        description: "Modulus to take of the hash of the source label values."
                        format: "int64"
                        type: "integer"
                      regex:
                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                        x-kubernetes-preserve-unknown-fields: true
                      replacement:
                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                        type: "string"
                      separator:
                        description: "Separator placed between concatenated source label values. default is ';'."
                        type: "string"
                      sourceLabels:
                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                        items:
                          type: "string"
                        type: "array"
                      source_labels:
                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        items:
                          type: "string"
                        type: "array"
                      targetLabel:
                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                        type: "string"
                      target_label:
                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        type: "string"
                    type: "object"
                  type: "array"
                podScrapeSelector:
                  description: "PodScrapeSelector defines PodScrapes to be selected for target discovery.\nWorks in combination with NamespaceSelector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                port:
                  description: "Port listen address"
                  type: "string"
                priorityClassName:
                  description: "PriorityClassName assigned to the Pods"
                  type: "string"
                probeNamespaceSelector:
                  description: "ProbeNamespaceSelector defines Namespaces to be selected for VMProbe discovery.\nWorks in combination with Selector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                probeScrapeRelabelTemplate:
                  description: "ProbeScrapeRelabelTemplate defines relabel config, that will be added to each VMProbeScrape.\nit's useful for adding specific labels to all targets"
                  items:
                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                    properties:
                      action:
                        description: "Action to perform based on regex matching. Default is 'replace'"
                        type: "string"
                      if:
                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                        x-kubernetes-preserve-unknown-fields: true
                      labels:
                        additionalProperties:
                          type: "string"
                        description: "Labels is used together with Match for `action: graphite`"
                        type: "object"
                      match:
                        description: "Match is used together with Labels for `action: graphite`"
                        type: "string"
                      modulus:
                        description: "Modulus to take of the hash of the source label values."
                        format: "int64"
                        type: "integer"
                      regex:
                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                        x-kubernetes-preserve-unknown-fields: true
                      replacement:
                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                        type: "string"
                      separator:
                        description: "Separator placed between concatenated source label values. default is ';'."
                        type: "string"
                      sourceLabels:
                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                        items:
                          type: "string"
                        type: "array"
                      source_labels:
                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        items:
                          type: "string"
                        type: "array"
                      targetLabel:
                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                        type: "string"
                      target_label:
                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        type: "string"
                    type: "object"
                  type: "array"
                probeSelector:
                  description: "ProbeSelector defines VMProbe to be selected for target probing.\nWorks in combination with NamespaceSelector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                readinessGates:
                  description: "ReadinessGates defines pod readiness gates"
                  items:
                    description: "PodReadinessGate contains the reference to a pod condition"
                    properties:
                      conditionType:
                        description: "ConditionType refers to a condition in the pod's condition list with matching type."
                        type: "string"
                    required:
                      - "conditionType"
                    type: "object"
                  type: "array"
                readinessProbe:
                  description: "ReadinessProbe that will be added CRD pod"
                  type: "object"
                  x-kubernetes-preserve-unknown-fields: true
                relabelConfig:
                  description: "RelabelConfig ConfigMap with global relabel config -remoteWrite.relabelConfig\nThis relabeling is applied to all the collected metrics before sending them to remote storage."
                  properties:
                    key:
                      description: "The key to select."
                      type: "string"
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                    optional:
                      description: "Specify whether the ConfigMap or its key must be defined"
                      type: "boolean"
                  required:
                    - "key"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                remoteWrite:
                  description: "RemoteWrite list of victoria metrics /some other remote write system\nfor vm it must looks like: http://victoria-metrics-single:8429/api/v1/write\nor for cluster different url\nhttps://github.com/VictoriaMetrics/VictoriaMetrics/tree/master/app/vmagent#splitting-data-streams-among-multiple-systems"
                  items:
                    description: "VMAgentRemoteWriteSpec defines the remote storage configuration for VmAgent"
                    properties:
                      basicAuth:
                        description: "BasicAuth allow an endpoint to authenticate over basic authentication"
                        properties:
                          password:
                            description: "The secret in the service scrape namespace that contains the password\nfor authentication.\nIt must be at them same namespace as CRD"
                            properties:
                              key:
                                description: "The key of the secret to select from.  Must be a valid secret key."
                                type: "string"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "Specify whether the Secret or its key must be defined"
                                type: "boolean"
                            required:
                              - "key"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          password_file:
                            description: "PasswordFile defines path to password file at disk"
                            type: "string"
                          username:
                            description: "The secret in the service scrape namespace that contains the username\nfor authentication.\nIt must be at them same namespace as CRD"
                            properties:
                              key:
                                description: "The key of the secret to select from.  Must be a valid secret key."
                                type: "string"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "Specify whether the Secret or its key must be defined"
                                type: "boolean"
                            required:
                              - "key"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        type: "object"
                      bearerTokenSecret:
                        description: "Optional bearer auth token to use for -remoteWrite.url"
                        properties:
                          key:
                            description: "The key of the secret to select from.  Must be a valid secret key."
                            type: "string"
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                          optional:
                            description: "Specify whether the Secret or its key must be defined"
                            type: "boolean"
                        required:
                          - "key"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      headers:
                        description: "Headers allow configuring custom http headers\nMust be in form of semicolon separated header with value\ne.g.\nheaderName: headerValue\nvmagent supports since 1.79.0 version"
                        items:
                          type: "string"
                        type: "array"
                      inlineUrlRelabelConfig:
                        description: "InlineUrlRelabelConfig defines relabeling config for remoteWriteURL, it can be defined at crd spec."
                        items:
                          description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                          properties:
                            action:
                              description: "Action to perform based on regex matching. Default is 'replace'"
                              type: "string"
                            if:
                              description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              additionalProperties:
                                type: "string"
                              description: "Labels is used together with Match for `action: graphite`"
                              type: "object"
                            match:
                              description: "Match is used together with Labels for `action: graphite`"
                              type: "string"
                            modulus:
                              description: "Modulus to take of the hash of the source label values."
                              format: "int64"
                              type: "integer"
                            regex:
                              description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                              x-kubernetes-preserve-unknown-fields: true
                            replacement:
                              description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                              type: "string"
                            separator:
                              description: "Separator placed between concatenated source label values. default is ';'."
                              type: "string"
                            sourceLabels:
                              description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                              items:
                                type: "string"
                              type: "array"
                            source_labels:
                              description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                              items:
                                type: "string"
                              type: "array"
                            targetLabel:
                              description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                              type: "string"
                            target_label:
                              description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                              type: "string"
                          type: "object"
                        type: "array"
                      oauth2:
                        description: "OAuth2 defines auth configuration"
                        properties:
                          client_id:
                            description: "The secret or configmap containing the OAuth2 client id"
                            properties:
                              configMap:
                                description: "ConfigMap containing data to use for the targets."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secret:
                                description: "Secret containing data to use for the targets."
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                          client_secret:
                            description: "The secret containing the OAuth2 client secret"
                            properties:
                              key:
                                description: "The key of the secret to select from.  Must be a valid secret key."
                                type: "string"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "Specify whether the Secret or its key must be defined"
                                type: "boolean"
                            required:
                              - "key"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          client_secret_file:
                            description: "ClientSecretFile defines path for client secret file."
                            type: "string"
                          endpoint_params:
                            additionalProperties:
                              type: "string"
                            description: "Parameters to append to the token URL"
                            type: "object"
                          scopes:
                            description: "OAuth2 scopes used for the token request"
                            items:
                              type: "string"
                            type: "array"
                          token_url:
                            description: "The URL to fetch the token from"
                            minLength: 1
                            type: "string"
                        required:
                          - "client_id"
                          - "token_url"
                        type: "object"
                      sendTimeout:
                        description: "Timeout for sending a single block of data to -remoteWrite.url (default 1m0s)"
                        pattern: "[0-9]+(ms|s|m|h)"
                        type: "string"
                      streamAggrConfig:
                        description: "StreamAggrConfig defines stream aggregation configuration for VMAgent for -remoteWrite.url"
                        properties:
                          dedupInterval:
                            description: "Allows setting different de-duplication intervals per each configured remote storage"
                            type: "string"
                          dropInput:
                            description: "Allow drop all the input samples after the aggregation"
                            type: "boolean"
                          keepInput:
                            description: "Allows writing both raw and aggregate data"
                            type: "boolean"
                          rules:
                            description: "Stream aggregation rules"
                            items:
                              description: "StreamAggrRule defines the rule in stream aggregation config"
                              properties:
                                by:
                                  description: "By is an optional list of labels for grouping input series.\n\n\nSee also Without.\n\n\nIf neither By nor Without are set, then the Outputs are calculated\nindividually per each input time series."
                                  items:
                                    type: "string"
                                  type: "array"
                                flush_on_shutdown:
                                  description: "FlushOnShutdown defines whether to flush the aggregation state on process termination\nor config reload. Is `false` by default.\nIt is not recommended changing this setting, unless unfinished aggregations states\nare preferred to missing data points."
                                  type: "boolean"
                                input_relabel_configs:
                                  description: "InputRelabelConfigs is an optional relabeling rules, which are applied on the input\nbefore aggregation."
                                  items:
                                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                                    properties:
                                      action:
                                        description: "Action to perform based on regex matching. Default is 'replace'"
                                        type: "string"
                                      if:
                                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                                        x-kubernetes-preserve-unknown-fields: true
                                      labels:
                                        additionalProperties:
                                          type: "string"
                                        description: "Labels is used together with Match for `action: graphite`"
                                        type: "object"
                                      match:
                                        description: "Match is used together with Labels for `action: graphite`"
                                        type: "string"
                                      modulus:
                                        description: "Modulus to take of the hash of the source label values."
                                        format: "int64"
                                        type: "integer"
                                      regex:
                                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                                        x-kubernetes-preserve-unknown-fields: true
                                      replacement:
                                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                                        type: "string"
                                      separator:
                                        description: "Separator placed between concatenated source label values. default is ';'."
                                        type: "string"
                                      sourceLabels:
                                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                                        items:
                                          type: "string"
                                        type: "array"
                                      source_labels:
                                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                                        items:
                                          type: "string"
                                        type: "array"
                                      targetLabel:
                                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                                        type: "string"
                                      target_label:
                                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                                        type: "string"
                                    type: "object"
                                  type: "array"
                                interval:
                                  description: "Interval is the interval between aggregations."
                                  type: "string"
                                match:
                                  description: "Match is a label selector (or list of label selectors) for filtering time series for the given selector.\n\n\nIf the match isn't set, then all the input time series are processed."
                                  x-kubernetes-preserve-unknown-fields: true
                                output_relabel_configs:
                                  description: "OutputRelabelConfigs is an optional relabeling rules, which are applied\non the aggregated output before being sent to remote storage."
                                  items:
                                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                                    properties:
                                      action:
                                        description: "Action to perform based on regex matching. Default is 'replace'"
                                        type: "string"
                                      if:
                                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                                        x-kubernetes-preserve-unknown-fields: true
                                      labels:
                                        additionalProperties:
                                          type: "string"
                                        description: "Labels is used together with Match for `action: graphite`"
                                        type: "object"
                                      match:
                                        description: "Match is used together with Labels for `action: graphite`"
                                        type: "string"
                                      modulus:
                                        description: "Modulus to take of the hash of the source label values."
                                        format: "int64"
                                        type: "integer"
                                      regex:
                                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                                        x-kubernetes-preserve-unknown-fields: true
                                      replacement:
                                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                                        type: "string"
                                      separator:
                                        description: "Separator placed between concatenated source label values. default is ';'."
                                        type: "string"
                                      sourceLabels:
                                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                                        items:
                                          type: "string"
                                        type: "array"
                                      source_labels:
                                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                                        items:
                                          type: "string"
                                        type: "array"
                                      targetLabel:
                                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                                        type: "string"
                                      target_label:
                                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                                        type: "string"
                                    type: "object"
                                  type: "array"
                                outputs:
                                  description: "Outputs is a list of output aggregate functions to produce.\n\n\nThe following names are allowed:\n\n\n- total - aggregates input counters\n- increase - counts the increase over input counters\n- count_series - counts the input series\n- count_samples - counts the input samples\n- sum_samples - sums the input samples\n- last - the last biggest sample value\n- min - the minimum sample value\n- max - the maximum sample value\n- avg - the average value across all the samples\n- stddev - standard deviation across all the samples\n- stdvar - standard variance across all the samples\n- histogram_bucket - creates VictoriaMetrics histogram for input samples\n- quantiles(phi1, ..., phiN) - quantiles' estimation for phi in the range [0..1]\n\n\nThe output time series will have the following names:\n\n\n  input_name:aggr_<interval>_<output>"
                                  items:
                                    type: "string"
                                  type: "array"
                                staleness_interval:
                                  description: "StalenessInterval defines an interval after which the series state will be reset if no samples have been sent during it."
                                  type: "string"
                                without:
                                  description: "Without is an optional list of labels, which must be excluded when grouping input series.\n\n\nSee also By.\n\n\nIf neither By nor Without are set, then the Outputs are calculated\nindividually per each input time series."
                                  items:
                                    type: "string"
                                  type: "array"
                              required:
                                - "interval"
                                - "outputs"
                              type: "object"
                            type: "array"
                        required:
                          - "rules"
                        type: "object"
                      tlsConfig:
                        description: "TLSConfig describes tls configuration for remote write target"
                        properties:
                          ca:
                            description: "Stuct containing the CA cert to use for the targets."
                            properties:
                              configMap:
                                description: "ConfigMap containing data to use for the targets."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secret:
                                description: "Secret containing data to use for the targets."
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                          caFile:
                            description: "Path to the CA cert in the container to use for the targets."
                            type: "string"
                          cert:
                            description: "Struct containing the client cert file for the targets."
                            properties:
                              configMap:
                                description: "ConfigMap containing data to use for the targets."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secret:
                                description: "Secret containing data to use for the targets."
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                          certFile:
                            description: "Path to the client cert file in the container for the targets."
                            type: "string"
                          insecureSkipVerify:
                            description: "Disable target certificate validation."
                            type: "boolean"
                          keyFile:
                            description: "Path to the client key file in the container for the targets."
                            type: "string"
                          keySecret:
                            description: "Secret containing the client key file for the targets."
                            properties:
                              key:
                                description: "The key of the secret to select from.  Must be a valid secret key."
                                type: "string"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "Specify whether the Secret or its key must be defined"
                                type: "boolean"
                            required:
                              - "key"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          serverName:
                            description: "Used to verify the hostname for the targets."
                            type: "string"
                        type: "object"
                      url:
                        description: "URL of the endpoint to send samples to."
                        type: "string"
                      urlRelabelConfig:
                        description: "ConfigMap with relabeling config which is applied to metrics before sending them to the corresponding -remoteWrite.url"
                        properties:
                          key:
                            description: "The key to select."
                            type: "string"
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                          optional:
                            description: "Specify whether the ConfigMap or its key must be defined"
                            type: "boolean"
                        required:
                          - "key"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                    required:
                      - "url"
                    type: "object"
                  type: "array"
                remoteWriteSettings:
                  description: "RemoteWriteSettings defines global settings for all remoteWrite urls."
                  properties:
                    flushInterval:
                      description: "Interval for flushing the data to remote storage. (default 1s)"
                      pattern: "[0-9]+(ms|s|m|h)"
                      type: "string"
                    label:
                      additionalProperties:
                        type: "string"
                      description: "Labels in the form 'name=value' to add to all the metrics before sending them. This overrides the label if it already exists."
                      type: "object"
                    maxBlockSize:
                      description: "The maximum size in bytes of unpacked request to send to remote storage"
                      format: "int32"
                      type: "integer"
                    maxDiskUsagePerURL:
                      description: "The maximum file-based buffer size in bytes at -remoteWrite.tmpDataPath"
                      format: "int64"
                      type: "integer"
                    queues:
                      description: "The number of concurrent queues"
                      format: "int32"
                      type: "integer"
                    showURL:
                      description: "Whether to show -remoteWrite.url in the exported metrics. It is hidden by default, since it can contain sensitive auth info"
                      type: "boolean"
                    tmpDataPath:
                      description: "Path to directory where temporary data for remote write component is stored (default vmagent-remotewrite-data)"
                      type: "string"
                    useMultiTenantMode:
                      description: "Configures vmagent in multi-tenant mode with direct cluster support\ndocs https://docs.victoriametrics.com/vmagent.html#multitenancy\nit's global setting and affects all remote storage configurations"
                      type: "boolean"
                  type: "object"
                replicaCount:
                  description: "ReplicaCount is the expected size of the VMAgent cluster. The controller will\neventually make the size of the running cluster equal to the expected\nsize.\nNOTE enable VMSingle deduplication for replica usage"
                  format: "int32"
                  type: "integer"
                resources:
                  description: "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\nif not specified - default setting will be used"
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                      items:
                        description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                        properties:
                          name:
                            description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "name"
                      x-kubernetes-list-type: "map"
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                  type: "object"
                revisionHistoryLimitCount:
                  description: "The number of old ReplicaSets to retain to allow rollback in deployment or\nmaximum number of revisions that will be maintained in the StatefulSet's revision history.\nDefaults to 10."
                  format: "int32"
                  type: "integer"
                rollingUpdate:
                  description: "RollingUpdate - overrides deployment update params."
                  properties:
                    maxSurge:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                      x-kubernetes-int-or-string: true
                    maxUnavailable:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                      x-kubernetes-int-or-string: true
                  type: "object"
                runtimeClassName:
                  description: "RuntimeClassName - defines runtime class for kubernetes pod.\nhttps://kubernetes.io/docs/concepts/containers/runtime-class/"
                  type: "string"
                schedulerName:
                  description: "SchedulerName - defines kubernetes scheduler name"
                  type: "string"
                scrapeConfigNamespaceSelector:
                  description: "ScrapeConfigNamespaceSelector defines Namespaces to be selected for VMScrapeConfig discovery.\nWorks in combination with Selector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                scrapeConfigRelabelTemplate:
                  description: "ScrapeConfigRelabelTemplate defines relabel config, that will be added to each VMScrapeConfig.\nit's useful for adding specific labels to all targets"
                  items:
                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                    properties:
                      action:
                        description: "Action to perform based on regex matching. Default is 'replace'"
                        type: "string"
                      if:
                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                        x-kubernetes-preserve-unknown-fields: true
                      labels:
                        additionalProperties:
                          type: "string"
                        description: "Labels is used together with Match for `action: graphite`"
                        type: "object"
                      match:
                        description: "Match is used together with Labels for `action: graphite`"
                        type: "string"
                      modulus:
                        description: "Modulus to take of the hash of the source label values."
                        format: "int64"
                        type: "integer"
                      regex:
                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                        x-kubernetes-preserve-unknown-fields: true
                      replacement:
                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                        type: "string"
                      separator:
                        description: "Separator placed between concatenated source label values. default is ';'."
                        type: "string"
                      sourceLabels:
                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                        items:
                          type: "string"
                        type: "array"
                      source_labels:
                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        items:
                          type: "string"
                        type: "array"
                      targetLabel:
                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                        type: "string"
                      target_label:
                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        type: "string"
                    type: "object"
                  type: "array"
                scrapeConfigSelector:
                  description: "ScrapeConfigSelector defines VMScrapeConfig to be selected for target discovery.\nWorks in combination with NamespaceSelector."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                scrapeInterval:
                  description: "ScrapeInterval defines how often scrape targets by default"
                  pattern: "[0-9]+(ms|s|m|h)"
                  type: "string"
                scrapeTimeout:
                  description: "ScrapeTimeout defines global timeout for targets scrape"
                  pattern: "[0-9]+(ms|s|m|h)"
                  type: "string"
                secrets:
                  description: "Secrets is a list of Secrets in the same namespace as the vmagent\nobject, which shall be mounted into the vmagent Pods.\nwill be mounted at path /etc/vm/secrets"
                  items:
                    type: "string"
                  type: "array"
                securityContext:
                  description: "SecurityContext holds pod-level security attributes and common container settings.\nThis defaults to the default PodSecurityContext."
                  type: "object"
                  x-kubernetes-preserve-unknown-fields: true
                selectAllByDefault:
                  description: "SelectAllByDefault changes default behavior for empty CRD selectors, such ServiceScrapeSelector.\nwith selectAllByDefault: true and empty serviceScrapeSelector and ServiceScrapeNamespaceSelector\nOperator selects all exist serviceScrapes\nwith selectAllByDefault: false - selects nothing"
                  type: "boolean"
                serviceAccountName:
                  description: "ServiceAccountName is the name of the ServiceAccount to use to run the\nVMAgent Pods."
                  type: "string"
                serviceScrapeNamespaceSelector:
                  description: "ServiceScrapeNamespaceSelector Namespaces to be selected for VMServiceScrape discovery.\nWorks in combination with Selector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                serviceScrapeRelabelTemplate:
                  description: "ServiceScrapeRelabelTemplate defines relabel config, that will be added to each VMServiceScrape.\nit's useful for adding specific labels to all targets"
                  items:
                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                    properties:
                      action:
                        description: "Action to perform based on regex matching. Default is 'replace'"
                        type: "string"
                      if:
                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                        x-kubernetes-preserve-unknown-fields: true
                      labels:
                        additionalProperties:
                          type: "string"
                        description: "Labels is used together with Match for `action: graphite`"
                        type: "object"
                      match:
                        description: "Match is used together with Labels for `action: graphite`"
                        type: "string"
                      modulus:
                        description: "Modulus to take of the hash of the source label values."
                        format: "int64"
                        type: "integer"
                      regex:
                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                        x-kubernetes-preserve-unknown-fields: true
                      replacement:
                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                        type: "string"
                      separator:
                        description: "Separator placed between concatenated source label values. default is ';'."
                        type: "string"
                      sourceLabels:
                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                        items:
                          type: "string"
                        type: "array"
                      source_labels:
                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        items:
                          type: "string"
                        type: "array"
                      targetLabel:
                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                        type: "string"
                      target_label:
                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        type: "string"
                    type: "object"
                  type: "array"
                serviceScrapeSelector:
                  description: "ServiceScrapeSelector defines ServiceScrapes to be selected for target discovery.\nWorks in combination with NamespaceSelector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                serviceScrapeSpec:
                  description: "ServiceScrapeSpec that will be added to vmagent VMServiceScrape spec"
                  required:
                    - "endpoints"
                  type: "object"
                  x-kubernetes-preserve-unknown-fields: true
                serviceSpec:
                  description: "ServiceSpec that will be added to vmagent service spec"
                  properties:
                    metadata:
                      description: "EmbeddedObjectMetadata defines objectMeta for additional service."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations"
                          type: "object"
                        labels:
                          additionalProperties:
                            type: "string"
                          description: "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
                          type: "object"
                        name:
                          description: "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
                          type: "string"
                      type: "object"
                    spec:
                      description: "ServiceSpec describes the attributes that a user creates on a service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/"
                      type: "object"
                      x-kubernetes-preserve-unknown-fields: true
                    useAsDefault:
                      description: "UseAsDefault applies changes from given service definition to the main object Service\nChaning from headless service to clusterIP or loadbalancer may break cross-component communication"
                      type: "boolean"
                  required:
                    - "spec"
                  type: "object"
                shardCount:
                  description: "ShardCount - numbers of shards of VMAgent\nin this case operator will use 1 deployment/sts per shard with\nreplicas count according to spec.replicas,\nsee https://docs.victoriametrics.com/vmagent.html#scraping-big-number-of-targets"
                  type: "integer"
                startupProbe:
                  description: "StartupProbe that will be added to CRD pod"
                  type: "object"
                  x-kubernetes-preserve-unknown-fields: true
                statefulMode:
                  description: "StatefulMode enables StatefulSet for `VMAgent` instead of Deployment\nit allows using persistent storage for vmagent's persistentQueue"
                  type: "boolean"
                statefulRollingUpdateStrategy:
                  description: "StatefulRollingUpdateStrategy allows configuration for strategyType\nset it to RollingUpdate for disabling operator statefulSet rollingUpdate"
                  type: "string"
                statefulStorage:
                  description: "StatefulStorage configures storage for StatefulSet"
                  properties:
                    disableMountSubPath:
                      description: "Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.\nDisableMountSubPath allows to remove any subPath usage in volume mounts."
                      type: "boolean"
                    emptyDir:
                      description: "EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More\ninfo: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir"
                      properties:
                        medium:
                          description: "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                          type: "string"
                        sizeLimit:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                      type: "object"
                    volumeClaimTemplate:
                      description: "A PVC spec to be used by the VMAlertManager StatefulSets."
                      properties:
                        apiVersion:
                          description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
                          type: "string"
                        kind:
                          description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: "string"
                        metadata:
                          description: "EmbeddedMetadata contains metadata relevant to an EmbeddedResource."
                          properties:
                            annotations:
                              additionalProperties:
                                type: "string"
                              description: "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations"
                              type: "object"
                            labels:
                              additionalProperties:
                                type: "string"
                              description: "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
                              type: "object"
                            name:
                              description: "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
                              type: "string"
                          type: "object"
                        spec:
                          description: "Spec defines the desired characteristics of a volume requested by a pod author.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                          properties:
                            accessModes:
                              description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                              items:
                                type: "string"
                              type: "array"
                            dataSource:
                              description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                              properties:
                                apiGroup:
                                  description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                  type: "string"
                                kind:
                                  description: "Kind is the type of resource being referenced"
                                  type: "string"
                                name:
                                  description: "Name is the name of resource being referenced"
                                  type: "string"
                              required:
                                - "kind"
                                - "name"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            dataSourceRef:
                              description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                              properties:
                                apiGroup:
                                  description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                  type: "string"
                                kind:
                                  description: "Kind is the type of resource being referenced"
                                  type: "string"
                                name:
                                  description: "Name is the name of resource being referenced"
                                  type: "string"
                                namespace:
                                  description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                  type: "string"
                              required:
                                - "kind"
                                - "name"
                              type: "object"
                            resources:
                              description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                              properties:
                                claims:
                                  description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                  items:
                                    description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                    properties:
                                      name:
                                        description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                        type: "string"
                                    required:
                                      - "name"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-map-keys:
                                    - "name"
                                  x-kubernetes-list-type: "map"
                                limits:
                                  additionalProperties:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                  type: "object"
                                requests:
                                  additionalProperties:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                  type: "object"
                              type: "object"
                            selector:
                              description: "selector is a label query over volumes to consider for binding."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector applies to."
                                        type: "string"
                                      operator:
                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                        type: "string"
                                      values:
                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                        items:
                                          type: "string"
                                        type: "array"
                                    required:
                                      - "key"
                                      - "operator"
                                    type: "object"
                                  type: "array"
                                matchLabels:
                                  additionalProperties:
                                    type: "string"
                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                  type: "object"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            storageClassName:
                              description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                              type: "string"
                            volumeMode:
                              description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                              type: "string"
                            volumeName:
                              description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                              type: "string"
                          type: "object"
                        status:
                          description: "Status represents the current information/status of a persistent volume claim.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                          properties:
                            accessModes:
                              description: "accessModes contains the actual access modes the volume backing the PVC has.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                              items:
                                type: "string"
                              type: "array"
                            allocatedResources:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may\nbe larger than the actual capacity when a volume expansion operation is requested.\nFor storage quota, the larger value from allocatedResources and PVC.spec.resources is used.\nIf allocatedResources is not set, PVC.spec.resources alone is used for quota calculation.\nIf a volume expansion capacity request is lowered, allocatedResources is only\nlowered if there are no expansion operations in progress and if the actual volume capacity\nis equal or lower than the requested capacity.\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature."
                              type: "object"
                            capacity:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "capacity represents the actual resources of the underlying volume."
                              type: "object"
                            conditions:
                              description: "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being\nresized then the Condition will be set to 'ResizeStarted'."
                              items:
                                description: "PersistentVolumeClaimCondition contains details about state of pvc"
                                properties:
                                  lastProbeTime:
                                    description: "lastProbeTime is the time we probed the condition."
                                    format: "date-time"
                                    type: "string"
                                  lastTransitionTime:
                                    description: "lastTransitionTime is the time the condition transitioned from one status to another."
                                    format: "date-time"
                                    type: "string"
                                  message:
                                    description: "message is the human-readable message indicating details about last transition."
                                    type: "string"
                                  reason:
                                    description: "reason is a unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. If it reports \"ResizeStarted\" that means the underlying\npersistent volume is being resized."
                                    type: "string"
                                  status:
                                    type: "string"
                                  type:
                                    description: "PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type"
                                    type: "string"
                                required:
                                  - "status"
                                  - "type"
                                type: "object"
                              type: "array"
                            phase:
                              description: "phase represents the current phase of PersistentVolumeClaim."
                              type: "string"
                            resizeStatus:
                              description: "resizeStatus stores status of resize operation.\nResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty\nstring by resize controller or kubelet.\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature."
                              type: "string"
                          type: "object"
                      type: "object"
                  type: "object"
                staticScrapeNamespaceSelector:
                  description: "StaticScrapeNamespaceSelector defines Namespaces to be selected for VMStaticScrape discovery.\nWorks in combination with NamespaceSelector.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces.\nIf both nil - behaviour controlled by selectAllByDefault"
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                staticScrapeRelabelTemplate:
                  description: "StaticScrapeRelabelTemplate defines relabel config, that will be added to each VMStaticScrape.\nit's useful for adding specific labels to all targets"
                  items:
                    description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                    properties:
                      action:
                        description: "Action to perform based on regex matching. Default is 'replace'"
                        type: "string"
                      if:
                        description: "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'"
                        x-kubernetes-preserve-unknown-fields: true
                      labels:
                        additionalProperties:
                          type: "string"
                        description: "Labels is used together with Match for `action: graphite`"
                        type: "object"
                      match:
                        description: "Match is used together with Labels for `action: graphite`"
                        type: "string"
                      modulus:
                        description: "Modulus to take of the hash of the source label values."
                        format: "int64"
                        type: "integer"
                      regex:
                        description: "Regular expression against which the extracted value is matched. Default is '(.*)'\nvictoriaMetrics supports multiline regex joined with |\nhttps://docs.victoriametrics.com/vmagent/#relabeling-enhancements"
                        x-kubernetes-preserve-unknown-fields: true
                      replacement:
                        description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                        type: "string"
                      separator:
                        description: "Separator placed between concatenated source label values. default is ';'."
                        type: "string"
                      sourceLabels:
                        description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                        items:
                          type: "string"
                        type: "array"
                      source_labels:
                        description: "UnderScoreSourceLabels - additional form of source labels source_labels\nfor compatibility with original relabel config.\nif set  both sourceLabels and source_labels, sourceLabels has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        items:
                          type: "string"
                        type: "array"
                      targetLabel:
                        description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                        type: "string"
                      target_label:
                        description: "UnderScoreTargetLabel - additional form of target label - target_label\nfor compatibility with original relabel config.\nif set  both targetLabel and target_label, targetLabel has priority.\nfor details https://github.com/VictoriaMetrics/operator/issues/131"
                        type: "string"
                    type: "object"
                  type: "array"
                staticScrapeSelector:
                  description: "StaticScrapeSelector defines PodScrapes to be selected for target discovery.\nWorks in combination with NamespaceSelector.\nIf both nil - match everything.\nNamespaceSelector nil - only objects at VMAgent namespace.\nSelector nil - only objects at NamespaceSelector namespaces."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                terminationGracePeriodSeconds:
                  description: "TerminationGracePeriodSeconds period for container graceful termination"
                  format: "int64"
                  type: "integer"
                tolerations:
                  description: "Tolerations If specified, the pod's tolerations."
                  items:
                    description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                    properties:
                      effect:
                        description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                        type: "string"
                      key:
                        description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                        type: "string"
                      operator:
                        description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                        type: "string"
                      tolerationSeconds:
                        description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                        format: "int64"
                        type: "integer"
                      value:
                        description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                        type: "string"
                    type: "object"
                  type: "array"
                topologySpreadConstraints:
                  description: "TopologySpreadConstraints embedded kubernetes pod configuration option,\ncontrols how pods are spread across your cluster among failure-domains\nsuch as regions, zones, nodes, and other user-defined topology domains\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/"
                  items:
                    description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                    required:
                      - "maxSkew"
                      - "topologyKey"
                      - "whenUnsatisfiable"
                    type: "object"
                    x-kubernetes-preserve-unknown-fields: true
                  type: "array"
                updateStrategy:
                  description: "UpdateStrategy - overrides default update strategy.\nworks only for deployments, statefulset always use OnDelete."
                  enum:
                    - "Recreate"
                    - "RollingUpdate"
                  type: "string"
                useStrictSecurity:
                  description: "UseStrictSecurity enables strict security mode for component\nit restricts disk writes access\nuses non-root user out of the box\ndrops not needed security permissions"
                  type: "boolean"
                vmAgentExternalLabelName:
                  description: "VMAgentExternalLabelName Name of vmAgent external label used to denote vmAgent instance\nname. Defaults to the value of `prometheus`. External label will\n_not_ be added when value is set to empty string (`\"\"`)."
                  type: "string"
                volumeMounts:
                  description: "VolumeMounts allows configuration of additional VolumeMounts on the output deploy definition.\nVolumeMounts specified will be appended to other VolumeMounts in the vmagent container,\nthat are generated as a result of StorageSpec objects."
                  items:
                    description: "VolumeMount describes a mounting of a Volume within a container."
                    properties:
                      mountPath:
                        description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                        type: "string"
                      mountPropagation:
                        description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                        type: "string"
                      name:
                        description: "This must match the Name of a Volume."
                        type: "string"
                      readOnly:
                        description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                        type: "boolean"
                      subPath:
                        description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                        type: "string"
                      subPathExpr:
                        description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                        type: "string"
                    required:
                      - "mountPath"
                      - "name"
                    type: "object"
                  type: "array"
                volumes:
                  description: "Volumes allows configuration of additional volumes on the output deploy definition.\nVolumes specified will be appended to other volumes that are generated as a result of\nStorageSpec objects."
                  items:
                    description: "Volume represents a named volume in a pod that may be accessed by any container in the pod."
                    required:
                      - "name"
                    type: "object"
                    x-kubernetes-preserve-unknown-fields: true
                  type: "array"
              type: "object"
            status:
              description: "VMAgentStatus defines the observed state of VMAgent"
              properties:
                availableReplicas:
                  description: "AvailableReplicas Total number of available pods (ready for at least minReadySeconds)\ntargeted by this VMAlert cluster."
                  format: "int32"
                  type: "integer"
                reason:
                  description: "Reason defines fail reason for update process, effective only for statefuleMode"
                  type: "string"
                replicas:
                  description: "ReplicaCount Total number of pods targeted by this VMAgent"
                  format: "int32"
                  type: "integer"
                selector:
                  description: "Selector string form of label value set for autoscaling"
                  type: "string"
                shards:
                  description: "Shards represents total number of vmagent deployments with uniq scrape targets"
                  format: "int32"
                  type: "integer"
                unavailableReplicas:
                  description: "UnavailableReplicas Total number of unavailable pods targeted by this VMAgent cluster."
                  format: "int32"
                  type: "integer"
                updateStatus:
                  description: "UpdateStatus defines a status for update rollout, effective only for statefuleMode"
                  type: "string"
                updatedReplicas:
                  description: "UpdatedReplicas Total number of non-terminated pods targeted by this VMAgent\ncluster that have the desired version spec."
                  format: "int32"
                  type: "integer"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: ".status.selector"
          specReplicasPath: ".spec.shardCount"
          statusReplicasPath: ".status.shards"
        status: {}
