apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.18.0"
  name: "clusterdeployments.hive.openshift.io"
spec:
  group: "hive.openshift.io"
  names:
    kind: "ClusterDeployment"
    listKind: "ClusterDeploymentList"
    plural: "clusterdeployments"
    shortNames:
      - "cd"
    singular: "clusterdeployment"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".spec.clusterMetadata.infraID"
          name: "InfraID"
          type: "string"
        - jsonPath: ".metadata.labels.hive\\.openshift\\.io/cluster-platform"
          name: "Platform"
          type: "string"
        - jsonPath: ".metadata.labels.hive\\.openshift\\.io/cluster-region"
          name: "Region"
          type: "string"
        - jsonPath: ".metadata.labels.hive\\.openshift\\.io/version"
          name: "Version"
          type: "string"
        - jsonPath: ".metadata.labels.hive\\.openshift\\.io/cluster-type"
          name: "ClusterType"
          type: "string"
        - jsonPath: ".status.conditions[?(@.type=='Provisioned')].reason"
          name: "ProvisionStatus"
          type: "string"
        - jsonPath: ".status.powerState"
          name: "PowerState"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1"
      schema:
        openAPIV3Schema:
          description: "ClusterDeployment is the Schema for the clusterdeployments API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "ClusterDeploymentSpec defines the desired state of ClusterDeployment"
              properties:
                baseDomain:
                  description: "BaseDomain is the base domain to which the cluster should belong."
                  type: "string"
                boundServiceAccountSigningKeySecretRef:
                  description: "BoundServiceAccountSigningKeySecretRef refers to a Secret that contains a\n'bound-service-account-signing-key.key' data key pointing to the private\nkey that will be used to sign ServiceAccount objects. Primarily used to\nprovision AWS clusters to use Amazon's Security Token Service."
                  properties:
                    name:
                      default: ""
                      description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                certificateBundles:
                  description: "CertificateBundles is a list of certificate bundles associated with this cluster"
                  items:
                    description: "CertificateBundleSpec specifies a certificate bundle associated with a cluster deployment"
                    properties:
                      certificateSecretRef:
                        description: "CertificateSecretRef is the reference to the secret that contains the certificate bundle. If\nthe certificate bundle is to be generated, it will be generated with the name in this\nreference. Otherwise, it is expected that the secret should exist in the same namespace\nas the ClusterDeployment"
                        properties:
                          name:
                            default: ""
                            description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: "string"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      generate:
                        description: "Generate indicates whether this bundle should have real certificates generated for it."
                        type: "boolean"
                      name:
                        description: "Name is an identifier that must be unique within the bundle and must be referenced by\nan ingress or by the control plane serving certs"
                        type: "string"
                    required:
                      - "certificateSecretRef"
                      - "name"
                    type: "object"
                  type: "array"
                clusterInstallRef:
                  description: "ClusterInstallLocalReference provides reference to an object that implements\nthe hivecontract ClusterInstall. The namespace of the object is same as the\nClusterDeployment.\nThis cannot be set when Provisioning is also set."
                  properties:
                    group:
                      type: "string"
                    kind:
                      type: "string"
                    name:
                      type: "string"
                    version:
                      type: "string"
                  required:
                    - "group"
                    - "kind"
                    - "name"
                    - "version"
                  type: "object"
                clusterMetadata:
                  description: "ClusterMetadata contains metadata information about the installed cluster."
                  properties:
                    adminKubeconfigSecretRef:
                      description: "AdminKubeconfigSecretRef references the secret containing the admin kubeconfig for this cluster."
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    adminPasswordSecretRef:
                      description: "AdminPasswordSecretRef references the secret containing the admin username/password which can be used to login to this cluster."
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    clusterID:
                      description: "ClusterID is a globally unique identifier for this cluster generated during installation. Used for reporting metrics among other places."
                      type: "string"
                    infraID:
                      description: "InfraID is an identifier for this cluster generated during installation and used for tagging/naming resources in cloud providers."
                      type: "string"
                    platform:
                      description: "Platform holds platform-specific cluster metadata"
                      properties:
                        aws:
                          description: "AWS holds AWS-specific cluster metadata"
                          properties:
                            hostedZoneRole:
                              description: "HostedZoneRole is the role to assume when performing operations\non a hosted zone owned by another account."
                              type: "string"
                          type: "object"
                        azure:
                          description: "Azure holds azure-specific cluster metadata"
                          properties:
                            resourceGroupName:
                              description: "ResourceGroupName is the name of the resource group in which the cluster resources were created."
                              type: "string"
                          required:
                            - "resourceGroupName"
                          type: "object"
                        gcp:
                          description: "GCP holds GCP-specific cluster metadata"
                          properties:
                            networkProjectID:
                              description: "NetworkProjectID is used for shared VPC setups"
                              type: "string"
                          type: "object"
                      type: "object"
                  required:
                    - "adminKubeconfigSecretRef"
                    - "clusterID"
                    - "infraID"
                  type: "object"
                clusterName:
                  description: "ClusterName is the friendly name of the cluster. It is used for subdomains,\nsome resource tagging, and other instances where a friendly name for the\ncluster is useful."
                  type: "string"
                clusterPoolRef:
                  description: "ClusterPoolRef is a reference to the ClusterPool that this ClusterDeployment originated from."
                  properties:
                    claimName:
                      description: "ClaimName is the name of the ClusterClaim that claimed the cluster from the pool."
                      type: "string"
                    claimedTimestamp:
                      description: "ClaimedTimestamp is the time this cluster was assigned to a ClusterClaim. This is only used for\nClusterDeployments belonging to ClusterPools."
                      format: "date-time"
                      type: "string"
                    clusterDeploymentCustomization:
                      description: "CustomizationRef is the ClusterPool Inventory claimed customization for this ClusterDeployment.\nThe Customization exists in the ClusterPool namespace."
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    namespace:
                      description: "Namespace is the namespace where the ClusterPool resides."
                      type: "string"
                    poolName:
                      description: "PoolName is the name of the ClusterPool for which the cluster was created."
                      type: "string"
                  required:
                    - "namespace"
                    - "poolName"
                  type: "object"
                controlPlaneConfig:
                  description: "ControlPlaneConfig contains additional configuration for the target cluster's control plane"
                  properties:
                    apiServerIPOverride:
                      description: "APIServerIPOverride is the optional override of the API server IP address.\nHive will use this IP address for creating TCP connections.\nPort from the original API server URL will be used.\nThis field can be used when repointing the APIServer's DNS is not viable option."
                      type: "string"
                    apiURLOverride:
                      description: "APIURLOverride is the optional URL override to which Hive will transition for communication with the API\nserver of the remote cluster. When a remote cluster is created, Hive will initially communicate using the\nAPI URL established during installation. If an API URL Override is specified, Hive will periodically attempt\nto connect to the remote cluster using the override URL. Once Hive has determined that the override URL is\nactive, Hive will use the override URL for further communications with the API server of the remote cluster."
                      type: "string"
                    servingCertificates:
                      description: "ServingCertificates specifies serving certificates for the control plane"
                      properties:
                        additional:
                          description: "Additional is a list of additional domains and certificates that are also associated with\nthe control plane's api endpoint."
                          items:
                            description: "ControlPlaneAdditionalCertificate defines an additional serving certificate for a control plane"
                            properties:
                              domain:
                                description: "Domain is the domain of the additional control plane certificate"
                                type: "string"
                              name:
                                description: "Name references a CertificateBundle in the ClusterDeployment.Spec that should be\nused for this additional certificate."
                                type: "string"
                            required:
                              - "domain"
                              - "name"
                            type: "object"
                          type: "array"
                        default:
                          description: "Default references the name of a CertificateBundle in the ClusterDeployment that should be\nused for the control plane's default endpoint."
                          type: "string"
                      type: "object"
                  type: "object"
                hibernateAfter:
                  description: "HibernateAfter will transition a cluster to hibernating power state after it has been running for the\ngiven duration. The time that a cluster has been running is the time since the cluster was installed or the\ntime since the cluster last came out of hibernation.\nThis is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats.\nNote: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See\nhttps://bugzilla.redhat.com/show_bug.cgi?id=2050332\nhttps://github.com/kubernetes/apimachinery/issues/131\nhttps://github.com/kubernetes/apiextensions-apiserver/issues/56"
                  pattern: "^([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$"
                  type: "string"
                ingress:
                  description: "Ingress allows defining desired clusteringress/shards to be configured on the cluster."
                  items:
                    description: "ClusterIngress contains the configurable pieces for any ClusterIngress objects\nthat should exist on the cluster."
                    properties:
                      domain:
                        description: "Domain (sometimes referred to as shard) is the full DNS suffix that the resulting\nIngressController object will service (eg abcd.mycluster.mydomain.com)."
                        type: "string"
                      httpErrorCodePages:
                        description: "HttpErrorCodePages allows configuring custom HTTP error pages using the IngressController object"
                        properties:
                          name:
                            description: "name is the metadata.name of the referenced config map"
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      name:
                        description: "Name of the ClusterIngress object to create."
                        type: "string"
                      namespaceSelector:
                        description: "NamespaceSelector allows filtering the list of namespaces serviced by the\ningress controller."
                        properties:
                          matchExpressions:
                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                            items:
                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                              properties:
                                key:
                                  description: "key is the label key that the selector applies to."
                                  type: "string"
                                operator:
                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                  type: "string"
                                values:
                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                  items:
                                    type: "string"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                              required:
                                - "key"
                                - "operator"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          matchLabels:
                            additionalProperties:
                              type: "string"
                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            type: "object"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      routeSelector:
                        description: "RouteSelector allows filtering the set of Routes serviced by the ingress controller"
                        properties:
                          matchExpressions:
                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                            items:
                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                              properties:
                                key:
                                  description: "key is the label key that the selector applies to."
                                  type: "string"
                                operator:
                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                  type: "string"
                                values:
                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                  items:
                                    type: "string"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                              required:
                                - "key"
                                - "operator"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          matchLabels:
                            additionalProperties:
                              type: "string"
                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            type: "object"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      servingCertificate:
                        description: "ServingCertificate references a CertificateBundle in the ClusterDeployment.Spec that\nshould be used for this Ingress"
                        type: "string"
                      tuningOptions:
                        description: "TuningOptions allows configuring the tuning options of the ingress controller"
                        properties:
                          clientFinTimeout:
                            description: "clientFinTimeout defines how long a connection will be held open while\nwaiting for the client response to the server/backend closing the\nconnection.\n\nIf unset, the default timeout is 1s"
                            format: "duration"
                            type: "string"
                          clientTimeout:
                            description: "clientTimeout defines how long a connection will be held open while\nwaiting for a client response.\n\nIf unset, the default timeout is 30s"
                            format: "duration"
                            type: "string"
                          connectTimeout:
                            description: "connectTimeout defines the maximum time to wait for\na connection attempt to a server/backend to succeed.\n\nThis field expects an unsigned duration string of decimal numbers, each with optional\nfraction and a unit suffix, e.g. \"300ms\", \"1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\" U+00B5 or \"μs\" U+03BC), \"ms\", \"s\", \"m\", \"h\".\n\nWhen omitted, this means the user has no opinion and the platform is left\nto choose a reasonable default. This default is subject to change over time.\nThe current default is 5s."
                            pattern: "^(0|([0-9]+(\\.[0-9]+)?(ns|us|µs|μs|ms|s|m|h))+)$"
                            type: "string"
                          headerBufferBytes:
                            description: "headerBufferBytes describes how much memory should be reserved\n(in bytes) for IngressController connection sessions.\nNote that this value must be at least 16384 if HTTP/2 is\nenabled for the IngressController (https://tools.ietf.org/html/rfc7540).\nIf this field is empty, the IngressController will use a default value\nof 32768 bytes.\n\nSetting this field is generally not recommended as headerBufferBytes\nvalues that are too small may break the IngressController and\nheaderBufferBytes values that are too large could cause the\nIngressController to use significantly more memory than necessary."
                            format: "int32"
                            minimum: 16384.0
                            type: "integer"
                          headerBufferMaxRewriteBytes:
                            description: "headerBufferMaxRewriteBytes describes how much memory should be reserved\n(in bytes) from headerBufferBytes for HTTP header rewriting\nand appending for IngressController connection sessions.\nNote that incoming HTTP requests will be limited to\n(headerBufferBytes - headerBufferMaxRewriteBytes) bytes, meaning\nheaderBufferBytes must be greater than headerBufferMaxRewriteBytes.\nIf this field is empty, the IngressController will use a default value\nof 8192 bytes.\n\nSetting this field is generally not recommended as\nheaderBufferMaxRewriteBytes values that are too small may break the\nIngressController and headerBufferMaxRewriteBytes values that are too\nlarge could cause the IngressController to use significantly more memory\nthan necessary."
                            format: "int32"
                            minimum: 4096.0
                            type: "integer"
                          healthCheckInterval:
                            description: "healthCheckInterval defines how long the router waits between two consecutive\nhealth checks on its configured backends.  This value is applied globally as\na default for all routes, but may be overridden per-route by the route annotation\n\"router.openshift.io/haproxy.health.check.interval\".\n\nExpects an unsigned duration string of decimal numbers, each with optional\nfraction and a unit suffix, eg \"300ms\", \"1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\" U+00B5 or \"μs\" U+03BC), \"ms\", \"s\", \"m\", \"h\".\n\nSetting this to less than 5s can cause excess traffic due to too frequent\nTCP health checks and accompanying SYN packet storms.  Alternatively, setting\nthis too high can result in increased latency, due to backend servers that are no\nlonger available, but haven't yet been detected as such.\n\nAn empty or zero healthCheckInterval means no opinion and IngressController chooses\na default, which is subject to change over time.\nCurrently the default healthCheckInterval value is 5s.\n\nCurrently the minimum allowed value is 1s and the maximum allowed value is\n2147483647ms (24.85 days).  Both are subject to change over time."
                            pattern: "^(0|([0-9]+(\\.[0-9]+)?(ns|us|µs|μs|ms|s|m|h))+)$"
                            type: "string"
                          maxConnections:
                            description: "maxConnections defines the maximum number of simultaneous\nconnections that can be established per HAProxy process.\nIncreasing this value allows each ingress controller pod to\nhandle more connections but at the cost of additional\nsystem resources being consumed.\n\nPermitted values are: empty, 0, -1, and the range\n2000-2000000.\n\nIf this field is empty or 0, the IngressController will use\nthe default value of 50000, but the default is subject to\nchange in future releases.\n\nIf the value is -1 then HAProxy will dynamically compute a\nmaximum value based on the available ulimits in the running\ncontainer. Selecting -1 (i.e., auto) will result in a large\nvalue being computed (~520000 on OpenShift >=4.10 clusters)\nand therefore each HAProxy process will incur significant\nmemory usage compared to the current default of 50000.\n\nSetting a value that is greater than the current operating\nsystem limit will prevent the HAProxy process from\nstarting.\n\nIf you choose a discrete value (e.g., 750000) and the\nrouter pod is migrated to a new node, there's no guarantee\nthat that new node has identical ulimits configured. In\nsuch a scenario the pod would fail to start. If you have\nnodes with different ulimits configured (e.g., different\ntuned profiles) and you choose a discrete value then the\nguidance is to use -1 and let the value be computed\ndynamically at runtime.\n\nYou can monitor memory usage for router containers with the\nfollowing metric:\n'container_memory_working_set_bytes{container=\"router\",namespace=\"openshift-ingress\"}'.\n\nYou can monitor memory usage of individual HAProxy\nprocesses in router containers with the following metric:\n'container_memory_working_set_bytes{container=\"router\",namespace=\"openshift-ingress\"}/container_processes{container=\"router\",namespace=\"openshift-ingress\"}'."
                            format: "int32"
                            type: "integer"
                          reloadInterval:
                            description: "reloadInterval defines the minimum interval at which the router is allowed to reload\nto accept new changes. Increasing this value can prevent the accumulation of\nHAProxy processes, depending on the scenario. Increasing this interval can\nalso lessen load imbalance on a backend's servers when using the roundrobin\nbalancing algorithm. Alternatively, decreasing this value may decrease latency\nsince updates to HAProxy's configuration can take effect more quickly.\n\nThe value must be a time duration value; see <https://pkg.go.dev/time#ParseDuration>.\nCurrently, the minimum value allowed is 1s, and the maximum allowed value is\n120s. Minimum and maximum allowed values may change in future versions of OpenShift.\nNote that if a duration outside of these bounds is provided, the value of reloadInterval\nwill be capped/floored and not rejected (e.g. a duration of over 120s will be capped to\n120s; the IngressController will not reject and replace this disallowed value with\nthe default).\n\nA zero value for reloadInterval tells the IngressController to choose the default,\nwhich is currently 5s and subject to change without notice.\n\nThis field expects an unsigned duration string of decimal numbers, each with optional\nfraction and a unit suffix, e.g. \"300ms\", \"1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\" U+00B5 or \"μs\" U+03BC), \"ms\", \"s\", \"m\", \"h\".\n\nNote: Setting a value significantly larger than the default of 5s can cause latency\nin observing updates to routes and their endpoints. HAProxy's configuration will\nbe reloaded less frequently, and newly created routes will not be served until the\nsubsequent reload."
                            pattern: "^(0|([0-9]+(\\.[0-9]+)?(ns|us|µs|μs|ms|s|m|h))+)$"
                            type: "string"
                          serverFinTimeout:
                            description: "serverFinTimeout defines how long a connection will be held open while\nwaiting for the server/backend response to the client closing the\nconnection.\n\nIf unset, the default timeout is 1s"
                            format: "duration"
                            type: "string"
                          serverTimeout:
                            description: "serverTimeout defines how long a connection will be held open while\nwaiting for a server/backend response.\n\nIf unset, the default timeout is 30s"
                            format: "duration"
                            type: "string"
                          threadCount:
                            description: "threadCount defines the number of threads created per HAProxy process.\nCreating more threads allows each ingress controller pod to handle more\nconnections, at the cost of more system resources being used. HAProxy\ncurrently supports up to 64 threads. If this field is empty, the\nIngressController will use the default value.  The current default is 4\nthreads, but this may change in future releases.\n\nSetting this field is generally not recommended. Increasing the number\nof HAProxy threads allows ingress controller pods to utilize more CPU\ntime under load, potentially starving other pods if set too high.\nReducing the number of threads may cause the ingress controller to\nperform poorly."
                            format: "int32"
                            maximum: 64.0
                            minimum: 1.0
                            type: "integer"
                          tlsInspectDelay:
                            description: "tlsInspectDelay defines how long the router can hold data to find a\nmatching route.\n\nSetting this too short can cause the router to fall back to the default\ncertificate for edge-terminated or reencrypt routes even when a better\nmatching certificate could be used.\n\nIf unset, the default inspect delay is 5s"
                            format: "duration"
                            type: "string"
                          tunnelTimeout:
                            description: "tunnelTimeout defines how long a tunnel connection (including\nwebsockets) will be held open while the tunnel is idle.\n\nIf unset, the default timeout is 1h"
                            format: "duration"
                            type: "string"
                        type: "object"
                    required:
                      - "domain"
                      - "name"
                    type: "object"
                  type: "array"
                installAttemptsLimit:
                  description: "InstallAttemptsLimit is the maximum number of times Hive will attempt to install the cluster."
                  format: "int32"
                  type: "integer"
                installed:
                  description: "Installed is true if the cluster has been installed"
                  type: "boolean"
                manageDNS:
                  description: "ManageDNS specifies whether a DNSZone should be created and managed automatically\nfor this ClusterDeployment"
                  type: "boolean"
                platform:
                  description: "Platform is the configuration for the specific platform upon which to\nperform the installation."
                  properties:
                    agentBareMetal:
                      description: "AgentBareMetal is the configuration used when performing an Assisted Agent based installation\nto bare metal."
                      properties:
                        agentSelector:
                          description: "AgentSelector is a label selector used for associating relevant custom resources with this cluster.\n(Agent, BareMetalHost, etc)"
                          properties:
                            matchExpressions:
                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              items:
                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                properties:
                                  key:
                                    description: "key is the label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                    type: "string"
                                  values:
                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-type: "atomic"
                            matchLabels:
                              additionalProperties:
                                type: "string"
                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              type: "object"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      required:
                        - "agentSelector"
                      type: "object"
                    aws:
                      description: "AWS is the configuration used when installing on AWS."
                      properties:
                        credentialsAssumeRole:
                          description: "CredentialsAssumeRole refers to the IAM role that must be assumed to obtain\nAWS account access for the cluster operations."
                          properties:
                            externalID:
                              description: "ExternalID is random string generated by platform so that assume role\nis protected from confused deputy problem.\nmore info: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"
                              type: "string"
                            roleARN:
                              type: "string"
                          required:
                            - "roleARN"
                          type: "object"
                        credentialsSecretRef:
                          description: "CredentialsSecretRef refers to a secret that contains the AWS account access\ncredentials."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        privateLink:
                          description: "PrivateLink allows uses to enable access to the cluster's API server using AWS\nPrivateLink. AWS PrivateLink includes a pair of VPC Endpoint Service and VPC\nEndpoint accross AWS accounts and allows clients to connect to services using AWS's\ninternal networking instead of the Internet."
                          properties:
                            additionalAllowedPrincipals:
                              description: "AdditionalAllowedPrincipals is a list of additional allowed principal ARNs to be configured\nfor the Private Link cluster's VPC Endpoint Service.\nARNs provided as AdditionalAllowedPrincipals will be configured for the cluster's VPC Endpoint\nService in addition to the IAM entity used by Hive."
                              items:
                                type: "string"
                              type: "array"
                            enabled:
                              type: "boolean"
                          required:
                            - "enabled"
                          type: "object"
                        region:
                          description: "Region specifies the AWS region where the cluster will be created."
                          type: "string"
                        userTags:
                          additionalProperties:
                            type: "string"
                          description: "UserTags specifies additional tags for AWS resources created for the cluster."
                          type: "object"
                      required:
                        - "region"
                      type: "object"
                    azure:
                      description: "Azure is the configuration used when installing on Azure."
                      properties:
                        baseDomainResourceGroupName:
                          description: "BaseDomainResourceGroupName specifies the resource group where the azure DNS zone for the base domain is found"
                          type: "string"
                        cloudName:
                          description: "cloudName is the name of the Azure cloud environment which can be used to configure the Azure SDK\nwith the appropriate Azure API endpoints.\nIf empty, the value is equal to \"AzurePublicCloud\"."
                          enum:
                            - ""
                            - "AzurePublicCloud"
                            - "AzureUSGovernmentCloud"
                            - "AzureChinaCloud"
                            - "AzureGermanCloud"
                          type: "string"
                        credentialsSecretRef:
                          description: "CredentialsSecretRef refers to a secret that contains the Azure account access\ncredentials."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        region:
                          description: "Region specifies the Azure region where the cluster will be created."
                          type: "string"
                      required:
                        - "credentialsSecretRef"
                        - "region"
                      type: "object"
                    baremetal:
                      description: "BareMetal is the configuration used when installing on bare metal."
                      properties:
                        libvirtSSHPrivateKeySecretRef:
                          description: "LibvirtSSHPrivateKeySecretRef is the reference to the secret that contains the private SSH key to use\nfor access to the libvirt provisioning host.\nThe SSH private key is expected to be in the secret data under the \"ssh-privatekey\" key."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      required:
                        - "libvirtSSHPrivateKeySecretRef"
                      type: "object"
                    gcp:
                      description: "GCP is the configuration used when installing on Google Cloud Platform."
                      properties:
                        credentialsSecretRef:
                          description: "CredentialsSecretRef refers to a secret that contains the GCP account access credentials."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        discardLocalSsdOnHibernate:
                          description: "DiscardLocalSsdOnHibernate passes the specified value through to the GCP API to indicate\nwhether the content of any local SSDs should be preserved or discarded. See\nhttps://cloud.google.com/compute/docs/disks/local-ssd#stop_instance\nThis field is required when attempting to hibernate clusters with instances possessing\nSSDs -- e.g. those with GPUs."
                          type: "boolean"
                        privateServiceConnect:
                          description: "PrivateSericeConnect allows users to enable access to the cluster's API server using GCP\nPrivate Service Connect. It includes a forwarding rule paired with a Service Attachment\nacross GCP accounts and allows clients to connect to services using GCP internal networking\nof using public load balancers."
                          properties:
                            enabled:
                              description: "Enabled specifies if Private Service Connect is to be enabled on the cluster."
                              type: "boolean"
                            serviceAttachment:
                              description: "ServiceAttachment configures the service attachment to be used by the cluster."
                              properties:
                                subnet:
                                  description: "Subnet configures the subnetwork that contains the service attachment."
                                  properties:
                                    cidr:
                                      description: "Cidr specifies the cidr to use when creating a service attachment subnet."
                                      type: "string"
                                    existing:
                                      description: "Existing specifies a pre-existing subnet to use instead of creating a new service attachment subnet.\nThis is required when using BYO VPCs. It must be in the same region as the api-int load balancer, be\nconfigured with a purpose of \"Private Service Connect\", and have sufficient routing and firewall rules\nto access the api-int load balancer."
                                      properties:
                                        name:
                                          description: "Name specifies the name of the existing subnet."
                                          type: "string"
                                        project:
                                          description: "Project specifies the project the subnet exists in.\nThis is required for Shared VPC."
                                          type: "string"
                                      required:
                                        - "name"
                                      type: "object"
                                  type: "object"
                              type: "object"
                          required:
                            - "enabled"
                          type: "object"
                        region:
                          description: "Region specifies the GCP region where the cluster will be created."
                          type: "string"
                      required:
                        - "region"
                      type: "object"
                    ibmcloud:
                      description: "IBMCloud is the configuration used when installing on IBM Cloud"
                      properties:
                        accountID:
                          description: "AccountID is the IBM Cloud Account ID.\nAccountID is DEPRECATED and is gathered via the IBM Cloud API for the provided\ncredentials. This field will be ignored."
                          type: "string"
                        cisInstanceCRN:
                          description: "CISInstanceCRN is the IBM Cloud Internet Services Instance CRN\nCISInstanceCRN is DEPRECATED and gathered via the IBM Cloud API for the provided\ncredentials and cluster deployment base domain. This field will be ignored."
                          type: "string"
                        credentialsSecretRef:
                          description: "CredentialsSecretRef refers to a secret that contains IBM Cloud account access\ncredentials."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        region:
                          description: "Region specifies the IBM Cloud region where the cluster will be\ncreated."
                          type: "string"
                      required:
                        - "credentialsSecretRef"
                        - "region"
                      type: "object"
                    none:
                      description: "None indicates platform-agnostic install.\nhttps://docs.openshift.com/container-platform/4.7/installing/installing_platform_agnostic/installing-platform-agnostic.html"
                      type: "object"
                    nutanix:
                      description: "Nutanix is the configuration used when installing on Nutanix Prism Central."
                      properties:
                        certificatesSecretRef:
                          description: "CertificatesSecretRef refers to a secret that contains the Prism Central CA certificates\nnecessary for communicating with the Prism Central."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        credentialsSecretRef:
                          description: "CredentialsSecretRef refers to a secret that contains the Nutanix account access\ncredentials."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        failureDomains:
                          description: "FailureDomains configures failure domains for the Nutanix platform.\nRequired for using MachinePools"
                          items:
                            description: "FailureDomain configures failure domain information for the Nutanix platform."
                            properties:
                              dataSourceImages:
                                description: "DataSourceImages identifies the datasource images in the Prism Element."
                                items:
                                  description: "StorageResourceReference holds reference information of a storage resource (storage container, data source image, etc.)"
                                  properties:
                                    name:
                                      description: "Name is the name of the storage container resource in the Prism Element."
                                      type: "string"
                                    referenceName:
                                      description: "ReferenceName is the identifier of the storage resource configured in the FailureDomain."
                                      type: "string"
                                    uuid:
                                      description: "UUID is the UUID of the storage container resource in the Prism Element."
                                      type: "string"
                                  required:
                                    - "uuid"
                                  type: "object"
                                type: "array"
                              name:
                                description: "Name defines the unique name of a failure domain."
                                maxLength: 64
                                minLength: 1
                                pattern: "^[0-9A-Za-z_.-@/]+$"
                                type: "string"
                              prismElement:
                                description: "PrismElement holds the identification (name, UUID) and the optional endpoint address and\nport of the Nutanix Prism Element. When a cluster-wide proxy is installed, this endpoint will,\nby default, be accessed through the cluster-wide proxy configured for the platform.\nIf communication with this endpoint should bypass the proxy, add the endpoint to the install-config\n`spec.noProxy` list in the proxy configuration."
                                properties:
                                  endpoint:
                                    description: "Endpoint holds the address and port of the Prism Element"
                                    properties:
                                      address:
                                        description: "address is the endpoint address (DNS name or IP address) of the Nutanix Prism Central or Element (cluster)"
                                        type: "string"
                                      port:
                                        description: "port is the port number to access the Nutanix Prism Central or Element (cluster)"
                                        format: "int32"
                                        type: "integer"
                                    required:
                                      - "address"
                                      - "port"
                                    type: "object"
                                  name:
                                    description: "Name is the Prism Element (cluster) name."
                                    type: "string"
                                  uuid:
                                    description: "UUID is the UUID of the Prism Element (cluster)"
                                    type: "string"
                                required:
                                  - "uuid"
                                type: "object"
                              storageContainers:
                                description: "StorageContainers identifies the storage containers in the Prism Element."
                                items:
                                  description: "StorageResourceReference holds reference information of a storage resource (storage container, data source image, etc.)"
                                  properties:
                                    name:
                                      description: "Name is the name of the storage container resource in the Prism Element."
                                      type: "string"
                                    referenceName:
                                      description: "ReferenceName is the identifier of the storage resource configured in the FailureDomain."
                                      type: "string"
                                    uuid:
                                      description: "UUID is the UUID of the storage container resource in the Prism Element."
                                      type: "string"
                                  required:
                                    - "uuid"
                                  type: "object"
                                type: "array"
                              subnetUUIDs:
                                description: "SubnetUUIDs identifies the network subnets of the Prism Element.\nCurrently we only support one subnet for a failure domain."
                                items:
                                  type: "string"
                                minItems: 1
                                type: "array"
                                x-kubernetes-list-type: "set"
                            required:
                              - "name"
                              - "prismElement"
                              - "subnetUUIDs"
                            type: "object"
                          type: "array"
                        prismCentral:
                          description: "PrismCentral is the endpoint (address and port) to connect to the Prism Central.\nThis serves as the default Prism-Central."
                          properties:
                            address:
                              description: "address is the endpoint address (DNS name or IP address) of the Nutanix Prism Central or Element (cluster)"
                              type: "string"
                            port:
                              description: "port is the port number to access the Nutanix Prism Central or Element (cluster)"
                              format: "int32"
                              type: "integer"
                          required:
                            - "address"
                            - "port"
                          type: "object"
                      required:
                        - "credentialsSecretRef"
                        - "prismCentral"
                      type: "object"
                    openstack:
                      description: "OpenStack is the configuration used when installing on OpenStack"
                      properties:
                        certificatesSecretRef:
                          description: "CertificatesSecretRef refers to a secret that contains CA certificates\nnecessary for communicating with the OpenStack.\nThere is additional configuration required for the OpenShift cluster to trust\nthe certificates provided in this secret.\nThe \"clouds.yaml\" file included in the credentialsSecretRef Secret must also include\na reference to the certificate bundle file for the OpenShift cluster being created to\ntrust the OpenStack endpoints.\nThe \"clouds.yaml\" file must set the \"cacert\" field to\neither \"/etc/openstack-ca/<key name containing the trust bundle in credentialsSecretRef Secret>\" or\n\"/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\".\n\nFor example,\n\"\"\"clouds.yaml\nclouds:\n  shiftstack:\n    auth: ...\n    cacert: \"/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\"\n\"\"\""
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        cloud:
                          description: "Cloud will be used to indicate the OS_CLOUD value to use the right section\nfrom the clouds.yaml in the CredentialsSecretRef."
                          type: "string"
                        credentialsSecretRef:
                          description: "CredentialsSecretRef refers to a secret that contains the OpenStack account access\ncredentials."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        trunkSupport:
                          description: "TrunkSupport indicates whether or not to use trunk ports in your OpenShift cluster."
                          type: "boolean"
                      required:
                        - "cloud"
                        - "credentialsSecretRef"
                      type: "object"
                    vsphere:
                      description: "VSphere is the configuration used when installing on vSphere"
                      properties:
                        certificatesSecretRef:
                          description: "CertificatesSecretRef refers to a secret that contains the vSphere CA certificates\nnecessary for communicating with the VCenter."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        cluster:
                          description: "Cluster is the name of the cluster virtual machines will be cloned into."
                          type: "string"
                        credentialsSecretRef:
                          description: "CredentialsSecretRef refers to a secret that contains the vSphere account access\ncredentials: GOVC_USERNAME, GOVC_PASSWORD fields."
                          properties:
                            name:
                              default: ""
                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: "string"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        datacenter:
                          description: "Datacenter is the name of the datacenter to use in the vCenter."
                          type: "string"
                        defaultDatastore:
                          description: "DefaultDatastore is the default datastore to use for provisioning volumes."
                          type: "string"
                        folder:
                          description: "Folder is the name of the folder that will be used and/or created for\nvirtual machines."
                          type: "string"
                        network:
                          description: "Network specifies the name of the network to be used by the cluster."
                          type: "string"
                        vCenter:
                          description: "VCenter is the domain name or IP address of the vCenter."
                          type: "string"
                      required:
                        - "certificatesSecretRef"
                        - "credentialsSecretRef"
                        - "datacenter"
                        - "defaultDatastore"
                        - "vCenter"
                      type: "object"
                  type: "object"
                powerState:
                  description: "PowerState indicates whether a cluster should be running or hibernating. When omitted,\nPowerState defaults to the Running state."
                  enum:
                    - ""
                    - "Running"
                    - "Hibernating"
                  type: "string"
                preserveOnDelete:
                  description: "PreserveOnDelete allows the user to disconnect a cluster from Hive without deprovisioning it. This can also be\nused to abandon ongoing cluster deprovision."
                  type: "boolean"
                provisioning:
                  description: "Provisioning contains settings used only for initial cluster provisioning.\nMay be unset in the case of adopted clusters."
                  properties:
                    customizationRef:
                      description: "CustomizationRef is a reference to a ClusterDeploymentCustomization containing\nInstallerManifestPatches to be applied to the manifests generated by openshift-install prior\nto starting the installation. (InstallConfigPatches will be ignored -- those changes should\nbe made directly to the install-config.yaml referenced by InstallConfigSecretRef.)"
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    imageSetRef:
                      description: "ImageSetRef is a reference to a ClusterImageSet. If a value is specified for ReleaseImage,\nthat will take precedence over the one from the ClusterImageSet."
                      properties:
                        name:
                          description: "Name is the name of the ClusterImageSet that this refers to"
                          type: "string"
                      required:
                        - "name"
                      type: "object"
                    installConfigSecretRef:
                      description: "InstallConfigSecretRef is the reference to a secret that contains an openshift-install\nInstallConfig. This file will be passed through directly to the installer.\nAny version of InstallConfig can be used, provided it can be parsed by the openshift-install\nversion for the release you are provisioning."
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    installerEnv:
                      description: "InstallerEnv are extra environment variables to pass through to the installer. This may be used to enable\nadditional features of the installer."
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    default: ""
                                    description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    default: ""
                                    description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    installerImageOverride:
                      description: "InstallerImageOverride allows specifying a URI for the installer image, normally gleaned from\nthe metadata within the ReleaseImage."
                      type: "string"
                    manifestsConfigMapRef:
                      description: "ManifestsConfigMapRef is a reference to user-provided manifests to add to or replace manifests\nthat are generated by the installer. It serves the same purpose as, and is mutually exclusive\nwith, ManifestsSecretRef."
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    manifestsSecretRef:
                      description: "ManifestsSecretRef is a reference to user-provided manifests to add to or replace manifests\nthat are generated by the installer. It serves the same purpose as, and is mutually exclusive\nwith, ManifestsConfigMapRef."
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    releaseImage:
                      description: "ReleaseImage is the image containing metadata for all components that run in the cluster, and\nis the primary and best way to specify what specific version of OpenShift you wish to install."
                      type: "string"
                    sshKnownHosts:
                      description: "SSHKnownHosts are known hosts to be configured in the hive install manager pod to avoid ssh prompts.\nUse of ssh in the install pod is somewhat limited today (failure log gathering from cluster, some bare metal\nprovisioning scenarios), so this setting is often not needed."
                      items:
                        type: "string"
                      type: "array"
                    sshPrivateKeySecretRef:
                      description: "SSHPrivateKeySecretRef is the reference to the secret that contains the private SSH key to use\nfor access to compute instances. This private key should correspond to the public key included\nin the InstallConfig. The private key is used by Hive to gather logs on the target cluster if\nthere are install failures.\nThe SSH private key is expected to be in the secret data under the \"ssh-privatekey\" key."
                      properties:
                        name:
                          default: ""
                          description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                  type: "object"
                pullSecretRef:
                  description: "PullSecretRef is the reference to the secret to use when pulling images."
                  properties:
                    name:
                      default: ""
                      description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
              required:
                - "baseDomain"
                - "clusterName"
                - "platform"
              type: "object"
            status:
              description: "ClusterDeploymentStatus defines the observed state of ClusterDeployment"
              properties:
                apiURL:
                  description: "APIURL is the URL where the cluster's API can be accessed."
                  type: "string"
                certificateBundles:
                  description: "CertificateBundles contains of the status of the certificate bundles associated with this cluster deployment."
                  items:
                    description: "CertificateBundleStatus specifies whether a certificate bundle was generated for this\ncluster deployment."
                    properties:
                      generated:
                        description: "Generated indicates whether the certificate bundle was generated"
                        type: "boolean"
                      name:
                        description: "Name of the certificate bundle"
                        type: "string"
                    required:
                      - "generated"
                      - "name"
                    type: "object"
                  type: "array"
                cliImage:
                  description: "CLIImage is the name of the oc cli image to use when installing the target cluster"
                  type: "string"
                clusterVersionStatus:
                  description: "ClusterVersionStatus is a wholesale copy of the Status section of the spoke cluster's\n`clusterversion version` object. This is not officially supported, and is only populated\non request."
                  properties:
                    availableUpdates:
                      description: "availableUpdates contains updates recommended for this\ncluster. Updates which appear in conditionalUpdates but not in\navailableUpdates may expose this cluster to known issues. This list\nmay be empty if no updates are recommended, if the update service\nis unavailable, or if an invalid channel has been specified."
                      items:
                        description: "Release represents an OpenShift release image and associated metadata."
                        properties:
                          architecture:
                            description: "architecture is an optional field that indicates the\nvalue of the cluster architecture. In this context cluster\narchitecture means either a single architecture or a multi\narchitecture.\nValid values are 'Multi' and empty."
                            enum:
                              - "Multi"
                              - ""
                            type: "string"
                          channels:
                            description: "channels is the set of Cincinnati channels to which the release\ncurrently belongs."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "set"
                          image:
                            description: "image is a container image location that contains the update. When this\nfield is part of spec, image is optional if version is specified and the\navailableUpdates field contains a matching version."
                            type: "string"
                          url:
                            description: "url contains information about this release. This URL is set by\nthe 'url' metadata property on a release or the metadata returned by\nthe update API and should be displayed as a link in user\ninterfaces. The URL field may not be set for test or nightly\nreleases."
                            type: "string"
                          version:
                            description: "version is a semantic version identifying the update version. When this\nfield is part of spec, version is optional if image is specified."
                            type: "string"
                        required:
                          - "image"
                          - "version"
                        type: "object"
                      nullable: true
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    capabilities:
                      description: "capabilities describes the state of optional, core cluster components."
                      properties:
                        enabledCapabilities:
                          description: "enabledCapabilities lists all the capabilities that are currently managed."
                          items:
                            description: "ClusterVersionCapability enumerates optional, core cluster components."
                            enum:
                              - "openshift-samples"
                              - "baremetal"
                              - "marketplace"
                              - "Console"
                              - "Insights"
                              - "Storage"
                              - "CSISnapshot"
                              - "NodeTuning"
                              - "MachineAPI"
                              - "Build"
                              - "DeploymentConfig"
                              - "ImageRegistry"
                              - "OperatorLifecycleManager"
                              - "CloudCredential"
                              - "Ingress"
                              - "CloudControllerManager"
                              - "OperatorLifecycleManagerV1"
                            type: "string"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                        knownCapabilities:
                          description: "knownCapabilities lists all the capabilities known to the current cluster."
                          items:
                            description: "ClusterVersionCapability enumerates optional, core cluster components."
                            enum:
                              - "openshift-samples"
                              - "baremetal"
                              - "marketplace"
                              - "Console"
                              - "Insights"
                              - "Storage"
                              - "CSISnapshot"
                              - "NodeTuning"
                              - "MachineAPI"
                              - "Build"
                              - "DeploymentConfig"
                              - "ImageRegistry"
                              - "OperatorLifecycleManager"
                              - "CloudCredential"
                              - "Ingress"
                              - "CloudControllerManager"
                              - "OperatorLifecycleManagerV1"
                            type: "string"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                      type: "object"
                    conditionalUpdates:
                      description: "conditionalUpdates contains the list of updates that may be\nrecommended for this cluster if it meets specific required\nconditions. Consumers interested in the set of updates that are\nactually recommended for this cluster should use\navailableUpdates. This list may be empty if no updates are\nrecommended, if the update service is unavailable, or if an empty\nor invalid channel has been specified."
                      items:
                        description: "ConditionalUpdate represents an update which is recommended to some\nclusters on the version the current cluster is reconciling, but which\nmay not be recommended for the current cluster."
                        properties:
                          conditions:
                            description: "conditions represents the observations of the conditional update's\ncurrent status. Known types are:\n* Recommended, for whether the update is recommended for the current cluster."
                            items:
                              description: "Condition contains details for one aspect of the current state of this API Resource."
                              properties:
                                lastTransitionTime:
                                  description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                                  format: "date-time"
                                  type: "string"
                                message:
                                  description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                                  maxLength: 32768
                                  type: "string"
                                observedGeneration:
                                  description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                                  format: "int64"
                                  minimum: 0.0
                                  type: "integer"
                                reason:
                                  description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                                  type: "string"
                                status:
                                  description: "status of the condition, one of True, False, Unknown."
                                  enum:
                                    - "True"
                                    - "False"
                                    - "Unknown"
                                  type: "string"
                                type:
                                  description: "type of condition in CamelCase or in foo.example.com/CamelCase."
                                  maxLength: 316
                                  pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                                  type: "string"
                              required:
                                - "lastTransitionTime"
                                - "message"
                                - "reason"
                                - "status"
                                - "type"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "type"
                            x-kubernetes-list-type: "map"
                          release:
                            description: "release is the target of the update."
                            properties:
                              architecture:
                                description: "architecture is an optional field that indicates the\nvalue of the cluster architecture. In this context cluster\narchitecture means either a single architecture or a multi\narchitecture.\nValid values are 'Multi' and empty."
                                enum:
                                  - "Multi"
                                  - ""
                                type: "string"
                              channels:
                                description: "channels is the set of Cincinnati channels to which the release\ncurrently belongs."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "set"
                              image:
                                description: "image is a container image location that contains the update. When this\nfield is part of spec, image is optional if version is specified and the\navailableUpdates field contains a matching version."
                                type: "string"
                              url:
                                description: "url contains information about this release. This URL is set by\nthe 'url' metadata property on a release or the metadata returned by\nthe update API and should be displayed as a link in user\ninterfaces. The URL field may not be set for test or nightly\nreleases."
                                type: "string"
                              version:
                                description: "version is a semantic version identifying the update version. When this\nfield is part of spec, version is optional if image is specified."
                                type: "string"
                            required:
                              - "image"
                              - "version"
                            type: "object"
                          risks:
                            description: "risks represents the range of issues associated with\nupdating to the target release. The cluster-version\noperator will evaluate all entries, and only recommend the\nupdate if there is at least one entry and all entries\nrecommend the update."
                            items:
                              description: "ConditionalUpdateRisk represents a reason and cluster-state\nfor not recommending a conditional update."
                              properties:
                                matchingRules:
                                  description: "matchingRules is a slice of conditions for deciding which\nclusters match the risk and which do not. The slice is\nordered by decreasing precedence. The cluster-version\noperator will walk the slice in order, and stop after the\nfirst it can successfully evaluate. If no condition can be\nsuccessfully evaluated, the update will not be recommended."
                                  items:
                                    description: "ClusterCondition is a union of typed cluster conditions.  The 'type'\nproperty determines which of the type-specific properties are relevant.\nWhen evaluated on a cluster, the condition may match, not match, or\nfail to evaluate."
                                    properties:
                                      promql:
                                        description: "promql represents a cluster condition based on PromQL."
                                        properties:
                                          promql:
                                            description: "promql is a PromQL query classifying clusters. This query\nquery should return a 1 in the match case and a 0 in the\ndoes-not-match case. Queries which return no time\nseries, or which return values besides 0 or 1, are\nevaluation failures."
                                            type: "string"
                                        required:
                                          - "promql"
                                        type: "object"
                                      type:
                                        description: "type represents the cluster-condition type. This defines\nthe members and semantics of any additional properties."
                                        enum:
                                          - "Always"
                                          - "PromQL"
                                        type: "string"
                                    required:
                                      - "type"
                                    type: "object"
                                  minItems: 1
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                message:
                                  description: "message provides additional information about the risk of\nupdating, in the event that matchingRules match the cluster\nstate. This is only to be consumed by humans. It may\ncontain Line Feed characters (U+000A), which should be\nrendered as new lines."
                                  minLength: 1
                                  type: "string"
                                name:
                                  description: "name is the CamelCase reason for not recommending a\nconditional update, in the event that matchingRules match the\ncluster state."
                                  minLength: 1
                                  type: "string"
                                url:
                                  description: "url contains information about this risk."
                                  format: "uri"
                                  minLength: 1
                                  type: "string"
                              required:
                                - "matchingRules"
                                - "message"
                                - "name"
                                - "url"
                              type: "object"
                            minItems: 1
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "name"
                            x-kubernetes-list-type: "map"
                        required:
                          - "release"
                          - "risks"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    conditions:
                      description: "conditions provides information about the cluster version. The condition\n\"Available\" is set to true if the desiredUpdate has been reached. The\ncondition \"Progressing\" is set to true if an update is being applied.\nThe condition \"Degraded\" is set to true if an update is currently blocked\nby a temporary or permanent error. Conditions are only valid for the\ncurrent desiredUpdate when metadata.generation is equal to\nstatus.generation."
                      items:
                        description: "ClusterOperatorStatusCondition represents the state of the operator's\nmanaged and monitored components."
                        properties:
                          lastTransitionTime:
                            description: "lastTransitionTime is the time of the last update to the current status property."
                            format: "date-time"
                            type: "string"
                          message:
                            description: "message provides additional information about the current condition.\nThis is only to be consumed by humans.  It may contain Line Feed\ncharacters (U+000A), which should be rendered as new lines."
                            type: "string"
                          reason:
                            description: "reason is the CamelCase reason for the condition's current status."
                            type: "string"
                          status:
                            description: "status of the condition, one of True, False, Unknown."
                            type: "string"
                          type:
                            description: "type specifies the aspect reported by this condition."
                            type: "string"
                        required:
                          - "lastTransitionTime"
                          - "status"
                          - "type"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "type"
                      x-kubernetes-list-type: "map"
                    desired:
                      description: "desired is the version that the cluster is reconciling towards.\nIf the cluster is not yet fully initialized desired will be set\nwith the information available, which may be an image or a tag."
                      properties:
                        architecture:
                          description: "architecture is an optional field that indicates the\nvalue of the cluster architecture. In this context cluster\narchitecture means either a single architecture or a multi\narchitecture.\nValid values are 'Multi' and empty."
                          enum:
                            - "Multi"
                            - ""
                          type: "string"
                        channels:
                          description: "channels is the set of Cincinnati channels to which the release\ncurrently belongs."
                          items:
                            type: "string"
                          type: "array"
                          x-kubernetes-list-type: "set"
                        image:
                          description: "image is a container image location that contains the update. When this\nfield is part of spec, image is optional if version is specified and the\navailableUpdates field contains a matching version."
                          type: "string"
                        url:
                          description: "url contains information about this release. This URL is set by\nthe 'url' metadata property on a release or the metadata returned by\nthe update API and should be displayed as a link in user\ninterfaces. The URL field may not be set for test or nightly\nreleases."
                          type: "string"
                        version:
                          description: "version is a semantic version identifying the update version. When this\nfield is part of spec, version is optional if image is specified."
                          type: "string"
                      required:
                        - "image"
                        - "version"
                      type: "object"
                    history:
                      description: "history contains a list of the most recent versions applied to the cluster.\nThis value may be empty during cluster startup, and then will be updated\nwhen a new update is being applied. The newest update is first in the\nlist and it is ordered by recency. Updates in the history have state\nCompleted if the rollout completed - if an update was failing or halfway\napplied the state will be Partial. Only a limited amount of update history\nis preserved."
                      items:
                        description: "UpdateHistory is a single attempted update to the cluster."
                        properties:
                          acceptedRisks:
                            description: "acceptedRisks records risks which were accepted to initiate the update.\nFor example, it may menition an Upgradeable=False or missing signature\nthat was overriden via desiredUpdate.force, or an update that was\ninitiated despite not being in the availableUpdates set of recommended\nupdate targets."
                            type: "string"
                          completionTime:
                            description: "completionTime, if set, is when the update was fully applied. The update\nthat is currently being applied will have a null completion time.\nCompletion time will always be set for entries that are not the current\nupdate (usually to the started time of the next update)."
                            format: "date-time"
                            nullable: true
                            type: "string"
                          image:
                            description: "image is a container image location that contains the update. This value\nis always populated."
                            type: "string"
                          startedTime:
                            description: "startedTime is the time at which the update was started."
                            format: "date-time"
                            type: "string"
                          state:
                            description: "state reflects whether the update was fully applied. The Partial state\nindicates the update is not fully applied, while the Completed state\nindicates the update was successfully rolled out at least once (all\nparts of the update successfully applied)."
                            type: "string"
                          verified:
                            description: "verified indicates whether the provided update was properly verified\nbefore it was installed. If this is false the cluster may not be trusted.\nVerified does not cover upgradeable checks that depend on the cluster\nstate at the time when the update target was accepted."
                            type: "boolean"
                          version:
                            description: "version is a semantic version identifying the update version. If the\nrequested image does not define a version, or if a failure occurs\nretrieving the image, this value may be empty."
                            type: "string"
                        required:
                          - "completionTime"
                          - "image"
                          - "startedTime"
                          - "state"
                          - "verified"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    observedGeneration:
                      description: "observedGeneration reports which version of the spec is being synced.\nIf this value is not equal to metadata.generation, then the desired\nand conditions fields may represent a previous version."
                      format: "int64"
                      type: "integer"
                    versionHash:
                      description: "versionHash is a fingerprint of the content that the cluster will be\nupdated with. It is used by the operator to avoid unnecessary work\nand is for internal use only."
                      type: "string"
                  required:
                    - "availableUpdates"
                    - "desired"
                    - "observedGeneration"
                    - "versionHash"
                  type: "object"
                conditions:
                  description: "Conditions includes more detailed status for the cluster deployment"
                  items:
                    description: "ClusterDeploymentCondition contains details for the current condition of a cluster deployment"
                    properties:
                      lastProbeTime:
                        description: "LastProbeTime is the last time we probed the condition."
                        format: "date-time"
                        type: "string"
                      lastTransitionTime:
                        description: "LastTransitionTime is the last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "Message is a human-readable message indicating details about last transition."
                        type: "string"
                      reason:
                        description: "Reason is a unique, one-word, CamelCase reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status is the status of the condition."
                        type: "string"
                      type:
                        description: "Type is the type of the condition."
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                installRestarts:
                  description: "InstallRestarts is the total count of container restarts on the clusters install job."
                  type: "integer"
                installStartedTimestamp:
                  description: "InstallStartedTimestamp is the time when all pre-requisites were met and cluster installation was launched."
                  format: "date-time"
                  type: "string"
                installVersion:
                  description: "InstallVersion is the version of OpenShift as reported by the release image\nresolved for the installation."
                  type: "string"
                installedTimestamp:
                  description: "InstalledTimestamp is the time we first detected that the cluster has been successfully installed."
                  format: "date-time"
                  type: "string"
                installerImage:
                  description: "InstallerImage is the name of the installer image to use when installing the target cluster"
                  type: "string"
                platformStatus:
                  description: "Platform contains the observed state for the specific platform upon which to\nperform the installation."
                  properties:
                    aws:
                      description: "AWS is the observed state on AWS."
                      properties:
                        privateLink:
                          description: "PrivateLinkAccessStatus contains the observed state for PrivateLinkAccess resources."
                          properties:
                            hostedZoneID:
                              type: "string"
                            vpcEndpointID:
                              type: "string"
                            vpcEndpointService:
                              properties:
                                additionalAllowedPrincipals:
                                  description: "AdditionalAllowedPrincipals is a list of additional allowed principal ARNs that have been configured\nfor the Private Link cluster's VPC Endpoint Service. This list in Status is used to determine if a sync\nof Allowed Principals is needed outside of the regular reconcile period of 2hrs."
                                  items:
                                    type: "string"
                                  type: "array"
                                defaultAllowedPrincipal:
                                  description: "DefaultAllowedPrincipal is the ARN of the IAM entity used by Hive as configured for the Private\nLink cluster's VPC Endpoint Service."
                                  type: "string"
                                id:
                                  type: "string"
                                name:
                                  type: "string"
                              type: "object"
                          type: "object"
                      type: "object"
                    gcp:
                      description: "GCP is the observed state on GCP"
                      properties:
                        privateServiceConnect:
                          description: "PrivateServiceConnect contains the private service connect resource references"
                          properties:
                            endpoint:
                              description: "Endpoint is the selfLink of the endpoint created for the cluster."
                              type: "string"
                            endpointAddress:
                              description: "EndpointAddress is the selfLink of the address created for the cluster endpoint."
                              type: "string"
                            serviceAttachment:
                              description: "ServiceAttachment is the selfLink of the service attachment created for the clsuter."
                              type: "string"
                            serviceAttachmentFirewall:
                              description: "ServiceAttachmentFirewall is the selfLink of the firewall that allows traffic between\nthe service attachment and the cluster's internal api load balancer."
                              type: "string"
                            serviceAttachmentSubnet:
                              description: "ServiceAttachmentSubnet is the selfLink of the subnet that will contain the service attachment."
                              type: "string"
                          type: "object"
                      type: "object"
                  type: "object"
                powerState:
                  description: "PowerState indicates the powerstate of cluster"
                  type: "string"
                provisionRef:
                  description: "ProvisionRef is a reference to the last ClusterProvision created for the deployment"
                  properties:
                    name:
                      default: ""
                      description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                webConsoleURL:
                  description: "WebConsoleURL is the URL for the cluster's web console UI."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
