apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "jobs.execution.furiko.io"
spec:
  group: "execution.furiko.io"
  names:
    kind: "Job"
    listKind: "JobList"
    plural: "jobs"
    shortNames:
      - "furikojob"
      - "furikojobs"
    singular: "job"
  preserveUnknownFields: false
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
        - jsonPath: ".status.phase"
          name: "Phase"
          type: "string"
        - jsonPath: ".status.createdTasks"
          name: "Created Tasks"
          type: "string"
        - jsonPath: ".status.runningTasks"
          name: "Running Tasks"
          type: "string"
        - jsonPath: ".status.condition.running.latestRunningTimestamp"
          name: "Run Time"
          type: "date"
        - jsonPath: ".status.condition.finished.finishTime"
          name: "Finish Time"
          type: "date"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Job is the schema for a single job execution, which may consist of multiple\ntasks."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "JobSpec defines the desired state of a Job."
              properties:
                configName:
                  description: "ConfigName allows specifying the name of the JobConfig to create the Job\nfrom. The JobConfig must be in the same namespace as the Job.\n\n\nIt is provided as a write-only input field for convenience, and will override\nthe template, labels and annotations from the JobConfig's template.\n\n\nThis field will never be returned from the API. To look up the parent\nJobConfig, use ownerReferences."
                  type: "string"
                killTimestamp:
                  description: "Specifies the time to start killing the job. When the time passes this\ntimestamp, the controller will start attempting to kill all tasks."
                  format: "date-time"
                  type: "string"
                optionValues:
                  description: "Specifies key-values pairs of values for Options, in JSON or YAML format.\n\n\nExample specification:\n\n\n  spec:\n    optionValues: |-\n      myStringOption: \"value\"\n      myBoolOption: true\n      mySelectOption:\n      - option1\n      - option3\n\n\nEach entry in the optionValues struct should consist of the option's name,\nand the value could be an arbitrary type that corresponds to the option's\ntype itself. Each option value specified will be evaluated to a string based\non the JobConfig's OptionsSpec and added to Substitutions. If the key also\nexists in Substitutions, that one takes priority.\n\n\nCannot be updated after creation."
                  type: "string"
                startPolicy:
                  description: "Specifies optional start policy for a Job, which specifies certain conditions\nwhich have to be met before a Job is started."
                  properties:
                    concurrencyPolicy:
                      description: "Specifies the behaviour when there are other concurrent jobs for the\nJobConfig."
                      type: "string"
                    startAfter:
                      description: "Specifies the earliest time that the Job can be started after. Can be\nspecified together with other fields."
                      format: "date-time"
                      type: "string"
                  required:
                    - "concurrencyPolicy"
                  type: "object"
                substitutions:
                  additionalProperties:
                    type: "string"
                  description: "Defines key-value pairs of context variables to be substituted into the\nTaskTemplate. Each entry should consist of the full context variable name\n(i.e. `ctx.name`), and the values must be a string. Substitutions defined\nhere take highest precedence over both predefined context variables and\nevaluated OptionValues.\n\n\nMost users should be using OptionValues to specify custom Job Option values\nfor running the Job instead of using Subsitutions directly.\n\n\nCannot be updated after creation."
                  type: "object"
                template:
                  description: "Template specifies how to create the Job."
                  properties:
                    forbidTaskForceDeletion:
                      description: "Defines whether tasks are allowed to be force deleted or not. If the node is\nunresponsive, it may be possible that the task cannot be killed by normal\ngraceful deletion. The controller may choose to force delete the task, which\nwould ignore the final state of the task since the node is unable to return\nwhether the task is actually still alive.\n\n\nIf not set to true, there may be some cases when there may actually be two\nconcurrently running tasks when even when ConcurrencyPolicyForbid. Setting\nthis to true would prevent this from happening, but the Job may remain stuck\nindefinitely until the node recovers."
                      type: "boolean"
                    maxAttempts:
                      description: "Specifies maximum number of attempts before the Job will terminate in\nfailure. If defined, the controller will wait retryDelaySeconds before\ncreating the next task. Once maxAttempts is reached, the Job terminates in\nRetryLimitExceeded.\n\n\nIf parallelism is also defined, this corresponds to the maximum attempts for\neach parallel task. That is, if there are 5 parallel task to be run at a\ntime, with maxAttempts of 3, the Job may create up to a maximum of 15 tasks\nif each has failed.\n\n\nValue must be a positive integer. Defaults to 1."
                      format: "int64"
                      type: "integer"
                    parallelism:
                      description: "Describes how to run multiple tasks in parallel for the Job. If not set, then\nthere will be at most a single task running at any time."
                      properties:
                        completionStrategy:
                          description: "Defines when the Job will complete when there are multiple tasks running in\nparallel. For example, if using the AllSuccessful strategy, the Job will only\nterminate once all parallel tasks have terminated successfully, or once any\ntask has exhausted its maxAttempts limit."
                          type: "string"
                        withCount:
                          description: "Specifies an exact number of tasks to be run in parallel. The index number\ncan be retrieved via the \"${task.index_num}\" context variable."
                          format: "int64"
                          type: "integer"
                        withKeys:
                          description: "Specifies a list of keys corresponding to each task that will be run in\nparallel. The index key can be retrieved via the \"${task.index_key}\" context\nvariable."
                          items:
                            type: "string"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                        withMatrix:
                          additionalProperties:
                            items:
                              type: "string"
                            type: "array"
                          description: "Specifies a matrix of key-value pairs, with each key mapped to a list of\npossible values, such that tasks will be started for each combination of\nkey-value pairs. The matrix values can be retrieved via context variables in\nthe following format: \"${task.index_matrix.<key>}\"."
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    retryDelaySeconds:
                      description: "Optional duration in seconds to wait between retries. If left empty or zero,\nit means no delay (i.e. retry immediately).\n\n\nIf parallelism is also defined, the retry delay is from the time of the last\nfailed task with the same index. That is, if there are two parallel tasks -\nindex 0 and index 1 - which failed at t=0 and t=15, with retryDelaySeconds of\n30, the controller will only create the next attempts at t=30 and t=45\nrespectively.\n\n\nValue must be a non-negative integer."
                      format: "int64"
                      type: "integer"
                    taskPendingTimeoutSeconds:
                      description: "Optional duration in seconds to wait before terminating the task if it is\nstill pending. This field is useful to prevent jobs from being stuck forever\nif the Job has a deadline to start running by. If not set, it will be set to\nthe DefaultPendingTimeoutSeconds configuration value in the controller. To\ndisable pending timeout, set this to 0."
                      format: "int64"
                      type: "integer"
                    taskTemplate:
                      description: "Defines the template to create a single task in the Job."
                      properties:
                        pod:
                          description: "Describes how to create tasks as Pods."
                          properties:
                            metadata:
                              description: "Standard object's metadata that will be added to Pod. More info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                              type: "object"
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: "Specification of the desired behavior of the pod. API docs:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#podspec-v1-core\n\n\nSupports context variable substitution in the following fields for containers\nand initContainers: image, command, args, env.value"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                              x-kubernetes-preserve-unknown-fields: true
                          type: "object"
                      type: "object"
                  required:
                    - "taskTemplate"
                  type: "object"
                ttlSecondsAfterFinished:
                  description: "Specifies the maximum lifetime of a Job that is finished. If not set, it will\nbe set to the DefaultTTLSecondsAfterFinished configuration value in the\ncontroller."
                  format: "int64"
                  type: "integer"
                type:
                  description: "Specifies the type of Job.\nCan be one of: Adhoc, Scheduled\n\n\nDefault: Adhoc"
                  type: "string"
              type: "object"
            status:
              description: "JobStatus defines the observed state of a Job."
              properties:
                condition:
                  description: "Condition stores details about the Job's current condition."
                  properties:
                    finished:
                      description: "Stores the status of the Job's finished state. If specified, it means that\nall tasks in the Job have terminated."
                      properties:
                        finishTime:
                          description: "The time at which the Job was first marked as finished by the controller."
                          format: "date-time"
                          type: "string"
                        latestCreationTimestamp:
                          description: "The time at which the latest task was created by the controller. May be nil\nif no tasks were ever created."
                          format: "date-time"
                          type: "string"
                        latestRunningTimestamp:
                          description: "The time at which the latest task had started running. May be nil if no tasks\nhad started running."
                          format: "date-time"
                          type: "string"
                        message:
                          description: "Optional descriptive message explaining the condition's last transition."
                          type: "string"
                        reason:
                          description: "Unique, one-word, CamelCase reason for the condition's last transition."
                          type: "string"
                        result:
                          description: "The result of it being finished."
                          type: "string"
                      required:
                        - "finishTime"
                        - "result"
                      type: "object"
                    queueing:
                      description: "Stores the status of the Job's queueing condition. If specified, it means\nthat the Job is currently not started and is queued."
                      properties:
                        message:
                          description: "Optional descriptive message explaining the condition's last transition."
                          type: "string"
                        reason:
                          description: "Unique, one-word, CamelCase reason for the condition's last transition."
                          type: "string"
                      type: "object"
                    running:
                      description: "Stores the status of the Job's running state. If specified, it means that all\ntasks in the Job have started running. If the Job is already complete, this\nstatus may be set of not all tasks are terminated."
                      properties:
                        latestRunningTimestamp:
                          description: "The time at which the latest task had started running."
                          format: "date-time"
                          type: "string"
                        latestTaskCreationTimestamp:
                          description: "The timestamp for the latest task that was created by the controller."
                          format: "date-time"
                          type: "string"
                        terminatingTasks:
                          description: "Number of tasks waiting to be terminated."
                          format: "int64"
                          type: "integer"
                      required:
                        - "latestRunningTimestamp"
                        - "latestTaskCreationTimestamp"
                      type: "object"
                    waiting:
                      description: "Stores the status of the Job's waiting condition. If specified, it means that\nthe Job currently is waiting for at least one task to be created and start\nrunning."
                      properties:
                        message:
                          description: "Optional descriptive message explaining the condition's last transition."
                          type: "string"
                        reason:
                          description: "Unique, one-word, CamelCase reason for the condition's last transition."
                          type: "string"
                      type: "object"
                  type: "object"
                createdTasks:
                  description: "CreatedTasks describes how many tasks were created in total for this Job."
                  format: "int64"
                  type: "integer"
                parallelStatus:
                  description: "The current status for parallel execution of the job.\nMay not be set if the job is not a parallel job."
                  properties:
                    complete:
                      description: "If true, the job is complete and currently in the process of waiting for all\nremaining tasks to be terminated."
                      type: "boolean"
                    indexes:
                      description: "The status for each parallel index. The size of the list should be exactly\nequal to the total parallelism factor, even if no tasks are created yet."
                      items:
                        description: "ParallelIndexStatus stores the status for a single ParallelIndex in the Job.\nThere should be at most one task running at a time for a single parallel\nindex in the Job."
                        properties:
                          createdTasks:
                            description: "Total number of tasks created for this parallel index."
                            format: "int64"
                            type: "integer"
                          hash:
                            description: "Hash of the index."
                            type: "string"
                          index:
                            description: "The parallel index."
                            properties:
                              indexKey:
                                description: "If withKeys is used for parallelism, contains the index key of the job as a\nstring."
                                type: "string"
                              indexNumber:
                                description: "If withCount is used for parallelism, contains the index number of the job\nnumbered from 0 to N-1."
                                format: "int64"
                                type: "integer"
                              matrixValues:
                                additionalProperties:
                                  type: "string"
                                description: "If withMatrix is used for parallelism, contains key-value pairs of the job as\nstrings."
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                          result:
                            description: "Result of executing tasks for this parallel index if it is already terminated."
                            type: "string"
                          state:
                            description: "Overall state of the parallel index."
                            type: "string"
                        required:
                          - "createdTasks"
                          - "hash"
                          - "index"
                          - "state"
                        type: "object"
                      type: "array"
                    successful:
                      description: "If complete, contains whether the job is successful according to the\nParallelCompletionStrategy."
                      type: "boolean"
                  required:
                    - "complete"
                    - "indexes"
                  type: "object"
                phase:
                  description: "Phase stores the high-level description of a Job's state."
                  type: "string"
                runningTasks:
                  description: "RunningTasks describes how many tasks are currently running for this Job."
                  format: "int64"
                  type: "integer"
                startTime:
                  description: "StartTime specifies the time that the Job was started by the controller. If\nnil, it means that the Job is Queued. Cannot be changed once set."
                  format: "date-time"
                  type: "string"
                state:
                  description: "State stores the high-level state of the Job's current condition.\nMust be one of: Queued, Waiting, Running, Finished."
                  type: "string"
                tasks:
                  description: "Tasks contains a list of tasks created by the controller. The controller\nupdates this field when it creates a task, which helps to guard against\nrecreating tasks after they were deleted, and also stores necessary task data\nfor reconciliation in case tasks are deleted."
                  items:
                    description: "TaskRef stores information about a Job's owned task."
                    properties:
                      containerStates:
                        description: "States of each container for the task. This field will be reconciled from the\nrelevant task object, and is not guaranteed to be up-to-date. This field will\npersist the state of tasks beyond the lifetime of the task resources, even if\nthey were deleted."
                        items:
                          properties:
                            containerID:
                              description: "Container ID of the container. May be empty if the container is not yet\ncreated."
                              type: "string"
                            exitCode:
                              description: "Exit status from the last termination of the container"
                              format: "int32"
                              type: "integer"
                            message:
                              description: "Message regarding the container's status."
                              type: "string"
                            reason:
                              description: "Unique, one-word, CamelCase reason for the container's status."
                              type: "string"
                            signal:
                              description: "Signal from the last termination of the container"
                              format: "int32"
                              type: "integer"
                          required:
                            - "exitCode"
                          type: "object"
                        type: "array"
                      creationTimestamp:
                        description: "Creation time of the task."
                        format: "date-time"
                        type: "string"
                      deletedStatus:
                        description: "DeletedStatus, if set, specifies a placeholder Status of the task after it is\nreconciled as deleted. If the task is deleted, Status cannot be reconciled\nfrom the task any more, and instead uses information stored in DeletedStatus.\nIn other words, this field acts as a tombstone marker, and is only used after\nthe deletion of the task object is complete.\n\n\nWhile the task is in the process of being deleted (i.e. deletionTimestamp is\nset but object still exists), Status will still be reconciled from the actual\ntask's status.\n\n\nIf the task is already deleted and DeletedStatus is also not set, then the\ntask's state will be marked as TaskDeletedFinalStateUnknown."
                        properties:
                          message:
                            description: "Descriptive message for the task's status."
                            type: "string"
                          reason:
                            description: "Unique, one-word, CamelCase reason for the task's status."
                            type: "string"
                          result:
                            description: "If the state is Terminated, the result of the task."
                            type: "string"
                          state:
                            description: "State of the task."
                            type: "string"
                        required:
                          - "state"
                        type: "object"
                      finishTimestamp:
                        description: "Time that the task finished. Will always return a non-zero timestamp if task\nis finished."
                        format: "date-time"
                        type: "string"
                      name:
                        description: "Name of the task. Assumes to share the same namespace as the Job."
                        type: "string"
                      nodeName:
                        description: "Node name that the task was bound to. May be empty if task was never\nscheduled."
                        type: "string"
                      parallelIndex:
                        description: "If the Job is a parallel job, then contains the parallel index of the task."
                        properties:
                          indexKey:
                            description: "If withKeys is used for parallelism, contains the index key of the job as a\nstring."
                            type: "string"
                          indexNumber:
                            description: "If withCount is used for parallelism, contains the index number of the job\nnumbered from 0 to N-1."
                            format: "int64"
                            type: "integer"
                          matrixValues:
                            additionalProperties:
                              type: "string"
                            description: "If withMatrix is used for parallelism, contains key-value pairs of the job as\nstrings."
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        type: "object"
                      retryIndex:
                        description: "The retry index of the task, starting from 0 up to maxAttempts - 1."
                        format: "int64"
                        type: "integer"
                      runningTimestamp:
                        description: "Timestamp that the task transitioned to running. May be zero if the task was\nnever observed as started running."
                        format: "date-time"
                        type: "string"
                      status:
                        description: "Status of the task. This field will be reconciled from the relevant task\nobject, may not be always up-to-date. This field will persist the state of\ntasks beyond the lifetime of the task resources, even if they are deleted."
                        properties:
                          message:
                            description: "Descriptive message for the task's status."
                            type: "string"
                          reason:
                            description: "Unique, one-word, CamelCase reason for the task's status."
                            type: "string"
                          result:
                            description: "If the state is Terminated, the result of the task."
                            type: "string"
                          state:
                            description: "State of the task."
                            type: "string"
                        required:
                          - "state"
                        type: "object"
                    required:
                      - "containerStates"
                      - "creationTimestamp"
                      - "name"
                      - "retryIndex"
                      - "status"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-type: "atomic"
              required:
                - "condition"
                - "createdTasks"
                - "phase"
                - "runningTasks"
                - "state"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
