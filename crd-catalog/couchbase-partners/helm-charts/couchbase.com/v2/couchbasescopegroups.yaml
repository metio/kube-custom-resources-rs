apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    config.couchbase.com/version: "2.7.0"
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "couchbasescopegroups.couchbase.com"
spec:
  group: "couchbase.com"
  names:
    kind: "CouchbaseScopeGroup"
    listKind: "CouchbaseScopeGroupList"
    plural: "couchbasescopegroups"
    singular: "couchbasescopegroup"
  scope: "Namespaced"
  versions:
    - name: "v2"
      schema:
        openAPIV3Schema:
          description: "CouchbaseScopeGroup represents a logical unit of data storage that sits between buckets and\ncollections e.g. a bucket may contain multiple scopes, and a scope may contain multiple\ncollections.  At present, scopes are not nested, so provide only a single level of\nabstraction.  Scopes provide a coarser grained basis for role-based access control (RBAC)\nand cross-datacenter replication (XDCR) than collections, but finer that buckets.\nIn order to be considered by the Operator, a scope must be referenced by either a\n`CouchbaseBucket` or `CouchbaseEphemeralBucket` resource.\nUnlike `CouchbaseScope` resources, scope groups represents multiple scopes, with the same\ncommon set of collections, to be expressed as a single resource, minimizing required\nconfiguration and Kubernetes API traffic.  It also forms the basis of Couchbase RBAC\nsecurity boundaries."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Spec defines the desired state of the resource."
              properties:
                collections:
                  description: "Collections defines how to collate collections included in this scope or scope group.\nAny of the provided methods may be used to collate a set of collections to\nmanage.  Collated collections must have unique names, otherwise it is\nconsidered ambiguous, and an error condition."
                  properties:
                    managed:
                      description: "Managed indicates whether collections within this scope are managed.\nIf not then you can dynamically create and delete collections with\nthe Couchbase UI or SDKs."
                      type: "boolean"
                    preserveDefaultCollection:
                      description: "PreserveDefaultCollection indicates whether the Operator should manage the\ndefault collection within the default scope.  The default collection can\nbe deleted, but can not be recreated by Couchbase Server.  By setting this\nfield to `true`, the Operator will implicitly manage the default collection\nwithin the default scope.  The default collection cannot be modified and\nwill have no document time-to-live (TTL).  When set to `false`, the operator\nwill not manage the default collection, which will be deleted and cannot be\nused or recreated."
                      type: "boolean"
                    resources:
                      description: "Resources is an explicit list of named resources that will be considered\nfor inclusion in this scope or scopes.  If a resource reference doesn't\nmatch a resource, then no error conditions are raised due to undefined\nresource creation ordering and eventual consistency."
                      items:
                        properties:
                          kind:
                            default: "CouchbaseCollection"
                            description: "Kind indicates the kind of resource that is being referenced.  A scope\ncan only reference `CouchbaseCollection` and `CouchbaseCollectionGroup`\nresource kinds.  This field defaults to `CouchbaseCollection` if not\nspecified."
                            enum:
                              - "CouchbaseCollection"
                              - "CouchbaseCollectionGroup"
                            type: "string"
                          name:
                            description: "Name is the name of the Kubernetes resource name that is being referenced.\nLegal collection names have a maximum length of 251\ncharacters and may be composed of any character from \"a-z\", \"A-Z\", \"0-9\" and \"_-%\"."
                            maxLength: 251
                            minLength: 1
                            pattern: "^[a-zA-Z0-9\\-][a-zA-Z0-9\\-%_]{0,250}$"
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    selector:
                      description: "Selector allows resources to be implicitly considered for inclusion in this\nscope or scopes.  More info:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#labelselector-v1-meta"
                      properties:
                        matchExpressions:
                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                          items:
                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                            properties:
                              key:
                                description: "key is the label key that the selector applies to."
                                type: "string"
                              operator:
                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                type: "string"
                              values:
                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                items:
                                  type: "string"
                                type: "array"
                            required:
                              - "key"
                              - "operator"
                            type: "object"
                          type: "array"
                        matchLabels:
                          additionalProperties:
                            type: "string"
                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                          type: "object"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                  type: "object"
                names:
                  description: "Names specifies the names of the scopes.  Unlike CouchbaseScope, which\nspecifies a single scope, a scope group specifies multiple, and the\nscope group must specify at least one scope name.\nAny scope names specified must be unique.\nScope names must be 1-251 characters in length, contain only [a-zA-Z0-9_-%]\nand not start with either _ or %."
                  items:
                    description: "ScopeOrCollectionName is a generic type to capture a valid\nscope or collection name.  These must consist of 1-251 characters,\ninclude only A-Z, a-z, 0-9, -, _ or %, and must not start with\n_ (which is an internal marker) or % (which is probably an escape\ncharacter in language X)."
                    maxLength: 251
                    minLength: 1
                    pattern: "^[a-zA-Z0-9\\-][a-zA-Z0-9\\-%_]{0,250}$"
                    type: "string"
                  type: "array"
                  x-kubernetes-list-type: "set"
              required:
                - "names"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
