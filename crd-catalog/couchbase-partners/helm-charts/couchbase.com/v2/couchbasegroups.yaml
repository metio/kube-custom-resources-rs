apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    config.couchbase.com/version: "2.7.0"
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "couchbasegroups.couchbase.com"
spec:
  group: "couchbase.com"
  names:
    kind: "CouchbaseGroup"
    listKind: "CouchbaseGroupList"
    plural: "couchbasegroups"
    singular: "couchbasegroup"
  scope: "Namespaced"
  versions:
    - name: "v2"
      schema:
        openAPIV3Schema:
          description: "CouchbaseGroup allows the automation of Couchbase group management."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "CouchbaseGroupSpec allows the specification of Couchbase group configuration."
              properties:
                ldapGroupRef:
                  description: "LDAPGroupRef is a reference to an LDAP group."
                  type: "string"
                roles:
                  description: "Roles is a list of roles that this group is granted."
                  items:
                    properties:
                      bucket:
                        description: "Bucket name for bucket admin roles.  When not specified for a role that can be scoped\nto a specific bucket, the role will apply to all buckets in the cluster.\nDeprecated:  Couchbase Autonomous Operator 2.3"
                        pattern: "^\\*$|^[a-zA-Z0-9-_%\\.]+$"
                        type: "string"
                      buckets:
                        description: "Bucket level access to apply to specified role. The bucket must exist.  When not specified,\nthe bucket field will be checked. If both are empty and the role can be scoped to a specific bucket, the role\nwill apply to all buckets in the cluster"
                        properties:
                          resources:
                            description: "Resources is an explicit list of named bucket resources that will be considered\nfor inclusion in this role.  If a resource reference doesn't\nmatch a resource, then no error conditions are raised due to undefined\nresource creation ordering and eventual consistency."
                            items:
                              properties:
                                kind:
                                  default: "CouchbaseBucket"
                                  description: "Kind indicates the kind of resource that is being referenced.  A Role\ncan only reference `CouchbaseBucket` kind.  This field defaults\nto `CouchbaseBucket` if not specified."
                                  enum:
                                    - "CouchbaseBucket"
                                  type: "string"
                                name:
                                  description: "Name is the name of the Kubernetes resource name that is being referenced."
                                  type: "string"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          selector:
                            description: "Selector allows resources to be implicitly considered for inclusion in this\nrole.  More info:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#labelselector-v1-meta"
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        type: "object"
                      collections:
                        description: "Collection level access to apply to the specified role.  The collection must exist.\nWhen not specified, the role is subject to scope or bucket level access."
                        properties:
                          resources:
                            description: "Resources is an explicit list of named resources that will be considered\nfor inclusion in this collection or collections.  If a resource reference doesn't\nmatch a resource, then no error conditions are raised due to undefined\nresource creation ordering and eventual consistency."
                            items:
                              properties:
                                kind:
                                  default: "CouchbaseCollection"
                                  description: "Kind indicates the kind of resource that is being referenced.  A scope\ncan only reference `CouchbaseCollection` and `CouchbaseCollectionGroup`\nresource kinds.  This field defaults to `CouchbaseCollection` if not\nspecified."
                                  enum:
                                    - "CouchbaseCollection"
                                    - "CouchbaseCollectionGroup"
                                  type: "string"
                                name:
                                  description: "Name is the name of the Kubernetes resource name that is being referenced.\nLegal collection names have a maximum length of 251\ncharacters and may be composed of any character from \"a-z\", \"A-Z\", \"0-9\" and \"_-%\"."
                                  maxLength: 251
                                  minLength: 1
                                  pattern: "^[a-zA-Z0-9\\-][a-zA-Z0-9\\-%_]{0,250}$"
                                  type: "string"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          selector:
                            description: "Selector allows resources to be implicitly considered for inclusion in this\ncollection or collections.  More info:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#labelselector-v1-meta"
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        type: "object"
                      name:
                        description: "Name of role."
                        enum:
                          - "admin"
                          - "analytics_admin"
                          - "analytics_manager"
                          - "analytics_reader"
                          - "analytics_select"
                          - "backup_admin"
                          - "bucket_admin"
                          - "bucket_full_access"
                          - "cluster_admin"
                          - "data_backup"
                          - "data_dcp_reader"
                          - "data_monitoring"
                          - "data_reader"
                          - "data_writer"
                          - "eventing_admin"
                          - "external_stats_reader"
                          - "fts_admin"
                          - "fts_searcher"
                          - "mobile_sync_gateway"
                          - "mobile_sync_gateway_application"
                          - "mobile_sync_gateway_application_read_only"
                          - "mobile_sync_gateway_architect"
                          - "mobile_sync_gateway_dev_ops"
                          - "mobile_sync_gateway_replicator"
                          - "query_delete"
                          - "query_execute_external_functions"
                          - "query_execute_functions"
                          - "query_execute_global_external_functions"
                          - "query_execute_global_functions"
                          - "query_external_access"
                          - "query_insert"
                          - "query_manage_external_functions"
                          - "query_manage_functions"
                          - "query_manage_global_external_functions"
                          - "query_manage_global_functions"
                          - "query_manage_index"
                          - "query_select"
                          - "query_system_catalog"
                          - "query_update"
                          - "replication_admin"
                          - "replication_target"
                          - "ro_admin"
                          - "scope_admin"
                          - "security_admin"
                          - "security_admin_external"
                          - "security_admin_local"
                          - "views_admin"
                          - "views_reader"
                          - "eventing_manage_functions"
                        type: "string"
                      scopes:
                        description: "Scope level access to apply to specified role.  The scope must exist.  When not specified,\nthe role will apply to selected bucket or all buckets in the cluster."
                        properties:
                          resources:
                            description: "Resources is an explicit list of named resources that will be considered\nfor inclusion in this scope or scopes.  If a resource reference doesn't\nmatch a resource, then no error conditions are raised due to undefined\nresource creation ordering and eventual consistency."
                            items:
                              properties:
                                kind:
                                  default: "CouchbaseScope"
                                  description: "Kind indicates the kind of resource that is being referenced.  A scope\ncan only reference `CouchbaseScope` and `CouchbaseScopeGroup`\nresource kinds.  This field defaults to `CouchbaseScope` if not\nspecified."
                                  enum:
                                    - "CouchbaseScope"
                                    - "CouchbaseScopeGroup"
                                  type: "string"
                                name:
                                  description: "Name is the name of the Kubernetes resource name that is being referenced.\nLegal scope names have a maximum length of 251\ncharacters and may be composed of any character from \"a-z\", \"A-Z\", \"0-9\" and \"_-%\"."
                                  maxLength: 251
                                  minLength: 1
                                  pattern: "^[a-zA-Z0-9\\-][a-zA-Z0-9\\-%_]{0,250}$"
                                  type: "string"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          selector:
                            description: "Selector allows resources to be implicitly considered for inclusion in this\nscope or scopes.  More info:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#labelselector-v1-meta"
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        type: "object"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
              required:
                - "roles"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
