apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    config.couchbase.com/version: "2.7.0"
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "couchbaseclusters.couchbase.com"
spec:
  group: "couchbase.com"
  names:
    kind: "CouchbaseCluster"
    listKind: "CouchbaseClusterList"
    plural: "couchbaseclusters"
    shortNames:
      - "cbc"
    singular: "couchbasecluster"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".status.currentVersion"
          name: "version"
          type: "string"
        - jsonPath: ".status.size"
          name: "size"
          type: "string"
        - jsonPath: ".status.conditions[?(@.type==\"Available\")].reason"
          name: "status"
          type: "string"
        - jsonPath: ".status.clusterId"
          name: "uuid"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "age"
          type: "date"
      name: "v2"
      schema:
        openAPIV3Schema:
          description: "The CouchbaseCluster resource represents a Couchbase cluster.  It allows configuration\nof cluster topology, networking, storage and security options."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "ClusterSpec is the specification for a CouchbaseCluster resources, and allows\nthe cluster to be customized."
              properties:
                antiAffinity:
                  description: "AntiAffinity forces the Operator to schedule different Couchbase server pods on\ndifferent Kubernetes nodes.  Anti-affinity reduces the likelihood of unrecoverable\nfailure in the event of a node issue.  Use of anti-affinity is highly recommended for\nproduction clusters."
                  type: "boolean"
                autoResourceAllocation:
                  description: "AutoResourceAllocation populates pod resource requests based on the services running\non that pod.  When enabled, this feature will calculate the memory request as the\ntotal of service allocations defined in `spec.cluster`, plus an overhead defined\nby `spec.autoResourceAllocation.overheadPercent`.Changing individual allocations for\na service will cause a cluster upgrade as allocations are modified in the underlying\npods.  This field also allows default pod CPU requests and limits to be applied.\nAll resource allocations can be overridden by explicitly configuring them in the\n`spec.servers.resources` field."
                  properties:
                    cpuLimits:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      default: "4"
                      description: "CPULimits automatically populates the CPU limits across all Couchbase\nserver pods.  This field defaults to \"4\" CPUs.  Explicitly specifying the CPU\nlimit for a particular server class will override this value.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                    cpuRequests:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      default: "2"
                      description: "CPURequests automatically populates the CPU requests across all Couchbase\nserver pods.  The default value of \"2\", is the minimum recommended number of\nCPUs required to run Couchbase Server.  Explicitly specifying the CPU request\nfor a particular server class will override this value. More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                    enabled:
                      description: "Enabled defines whether auto-resource allocation is enabled."
                      type: "boolean"
                    overheadPercent:
                      default: 25
                      description: "OverheadPercent defines the amount of memory above that required for individual\nservices on a pod.  For Couchbase Server this should be approximately 25%."
                      minimum: 0.0
                      type: "integer"
                  type: "object"
                autoscaleStabilizationPeriod:
                  description: "AutoscaleStabilizationPeriod defines how long after a rebalance the\ncorresponding HorizontalPodAutoscaler should remain in maintenance mode.\nDuring maintenance mode all autoscaling is disabled since every HorizontalPodAutoscaler\nassociated with the cluster becomes inactive.\nSince certain metrics can be unpredictable when Couchbase is rebalancing or upgrading,\nsetting a stabilization period helps to prevent scaling recommendations from the\nHorizontalPodAutoscaler for a provided period of time.\n\n\nValues must be a valid Kubernetes duration of 0s or higher:\nhttps://golang.org/pkg/time/#ParseDuration\nA value of 0, puts the cluster in maintenance mode during rebalance but\nimmediately exits this mode once the rebalance has completed.\nWhen undefined, the HPA is never put into maintenance mode during rebalance."
                  type: "string"
                backup:
                  description: "Backup defines whether the Operator should manage automated backups, and how\nto lookup backup resources."
                  properties:
                    annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations defines additional annotations to appear on the backup/restore pods."
                      type: "object"
                    image:
                      default: "couchbase/operator-backup:1.3.1"
                      description: "The Backup Image to run on backup pods."
                      type: "string"
                    imagePullSecrets:
                      description: "ImagePullSecrets allow you to use an image from private\nrepositories and non-dockerhub ones."
                      items:
                        description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                        properties:
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      type: "array"
                    labels:
                      additionalProperties:
                        type: "string"
                      description: "Labels defines additional labels to appear on the backup/restore pods."
                      type: "object"
                    managed:
                      description: "Managed defines whether backups are managed by us or the clients."
                      type: "boolean"
                    nodeSelector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector defines which nodes to constrain the pods that\nrun any backup and restore operations to."
                      type: "object"
                    objectEndpoint:
                      description: "Deprecated: by CouchbaseBackup.spec.objectStore.Endpoint\nObjectEndpoint contains the configuration for connecting to a custom S3 compliant object store."
                      properties:
                        secret:
                          description: "The name of the secret, in this namespace, that contains the CA certificate for verification of a TLS endpoint\nThe secret must have the key with the name \"tls.crt\""
                          type: "string"
                        url:
                          description: "The host/address of the custom object endpoint."
                          type: "string"
                        useVirtualPath:
                          description: "UseVirtualPath will force the AWS SDK to use the new virtual style paths\nwhich are often required by S3 compatible object stores."
                          type: "boolean"
                      type: "object"
                    resources:
                      description: "Resources is the resource requirements for the backup and restore\ncontainers.  Will be populated by defaults if not specified."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    s3Secret:
                      description: "Deprecated: by CouchbaseBackup.spec.objectStore.secret\nS3Secret contains the key region and optionally access-key-id and secret-access-key for operating backups in S3.\nThis field must be popluated when the `spec.s3bucket` field is specified\nfor a backup or restore resource."
                      type: "string"
                    selector:
                      description: "Selector allows CouchbaseBackup and CouchbaseBackupRestore\nresources to be filtered based on labels."
                      properties:
                        matchExpressions:
                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                          items:
                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                            properties:
                              key:
                                description: "key is the label key that the selector applies to."
                                type: "string"
                              operator:
                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                type: "string"
                              values:
                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                items:
                                  type: "string"
                                type: "array"
                            required:
                              - "key"
                              - "operator"
                            type: "object"
                          type: "array"
                        matchLabels:
                          additionalProperties:
                            type: "string"
                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                          type: "object"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    serviceAccountName:
                      default: "couchbase-backup"
                      description: "The Service Account to run backup (and restore) pods under.\nWithout this backup pods will not be able to update status."
                      type: "string"
                    tolerations:
                      description: "Tolerations specifies all backup and restore pod tolerations."
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                    useIAMRole:
                      description: "Deprecated: by CouchbaseBackup.spec.objectStore.useIAM\nUseIAMRole enables backup to fetch EC2 instance metadata.\nThis allows the AWS SDK to use the EC2's IAM Role for S3 access.\nUseIAMRole will ignore credentials in s3Secret."
                      type: "boolean"
                  required:
                    - "image"
                  type: "object"
                buckets:
                  description: "Buckets defines whether the Operator should manage buckets, and how to lookup\nbucket resources."
                  properties:
                    managed:
                      description: "Managed defines whether buckets are managed by the Operator (true), or user managed (false).\nWhen Operator managed, all buckets must be defined with either CouchbaseBucket,\nCouchbaseEphemeralBucket or CouchbaseMemcachedBucket resources.  Manual addition\nof buckets will be reverted by the Operator.  When user managed, the Operator\nwill not interrogate buckets at all.  This field defaults to false."
                      type: "boolean"
                    selector:
                      description: "Selector is a label selector used to list buckets in the namespace\nthat are managed by the Operator."
                      properties:
                        matchExpressions:
                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                          items:
                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                            properties:
                              key:
                                description: "key is the label key that the selector applies to."
                                type: "string"
                              operator:
                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                type: "string"
                              values:
                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                items:
                                  type: "string"
                                type: "array"
                            required:
                              - "key"
                              - "operator"
                            type: "object"
                          type: "array"
                        matchLabels:
                          additionalProperties:
                            type: "string"
                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                          type: "object"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    synchronize:
                      description: "Synchronize allows unmanaged buckets, scopes, and collections to be synchronized as\nKubernetes resources by the Operator.  This feature is intended for development only\nand should not be used for production workloads.  The synchronization workflow starts\nwith `spec.buckets.managed` being set to false, the user can manually create buckets,\nscopes, and collections using the Couchbase UI, or other tooling.  When you wish to\ncommit to Kubernetes resources, you must specify a unique label selector in the\n`spec.buckets.selector` field, and this field is set to true.  The Operator will\ncreate Kubernetes resources for you, and upon completion set the cluster's `Synchronized`\nstatus condition. Synchronizing will not create a Kubernetes resource for the Couchbase\nServer maintained _system scope. You may then safely set `spec.buckets.managed` to\ntrue and the Operator will manage these resources as per usual.  To update an already\nmanaged data topology, you must first set it to unmanaged, make any changes, and delete\nany old resources, then follow the standard synchronization workflow.  The Operator\ncan not, and will not, ever delete, or make modifications to resource specifications\nthat are intended to be user managed, or managed by a life cycle management tool. These\nactions must be instigated by an end user.  For a more complete experience, refer to\nthe documentation for the `cao save` and `cao restore` CLI commands."
                      type: "boolean"
                  type: "object"
                cluster:
                  default: {}
                  description: "ClusterSettings define Couchbase cluster-wide settings such as memory allocation,\nfailover characteristics and index settings."
                  properties:
                    analyticsServiceMemoryQuota:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      default: "1Gi"
                      description: "AnalyticsServiceMemQuota is the amount of memory that should be allocated to the analytics service.\nThis value is per-pod, and only applicable to pods belonging to server classes running\nthe analytics service.  This field must be a quantity greater than or equal to 1Gi.  This\nfield defaults to 1Gi.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                    autoCompaction:
                      default: {}
                      description: "AutoCompaction allows the configuration of auto-compaction, including on what\nconditions disk space is reclaimed and when it is allowed to run."
                      properties:
                        databaseFragmentationThreshold:
                          default: {}
                          description: "DatabaseFragmentationThreshold defines triggers for when database compaction should start."
                          properties:
                            percent:
                              default: 30
                              description: "Percent is the percentage of disk fragmentation after which to decompaction will be\ntriggered. This field must be in the range 2-100, defaulting to 30."
                              maximum: 100.0
                              minimum: 2.0
                              type: "integer"
                            size:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Size is the amount of disk framentation, that once exceeded, will trigger decompaction.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              type: "string"
                              x-kubernetes-int-or-string: true
                          type: "object"
                        parallelCompaction:
                          description: "ParallelCompaction controls whether database and view compactions can happen\nin parallel."
                          type: "boolean"
                        timeWindow:
                          description: "TimeWindow allows restriction of when compaction can occur."
                          properties:
                            abortCompactionOutsideWindow:
                              default: false
                              description: "AbortCompactionOutsideWindow stops compaction processes when the\nprocess moves outside the window."
                              type: "boolean"
                            end:
                              description: "End is a wallclock time, in the form HH:MM, when a compaction should stop."
                              pattern: "^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$"
                              type: "string"
                            start:
                              description: "Start is a wallclock time, in the form HH:MM, when a compaction is permitted to start."
                              pattern: "^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$"
                              type: "string"
                          type: "object"
                        tombstonePurgeInterval:
                          default: "72h"
                          description: "TombstonePurgeInterval controls how long to wait before purging tombstones.\nThis field must be in the range 1h-1440h, defaulting to 72h.\nMore info:  https://golang.org/pkg/time/#ParseDuration"
                          type: "string"
                        viewFragmentationThreshold:
                          default: {}
                          description: "ViewFragmentationThreshold defines triggers for when view compaction should start."
                          properties:
                            percent:
                              default: 30
                              description: "Percent is the percentage of disk fragmentation after which to decompaction will be\ntriggered. This field must be in the range 2-100, defaulting to 30."
                              maximum: 100.0
                              minimum: 2.0
                              type: "integer"
                            size:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Size is the amount of disk framentation, that once exceeded, will trigger decompaction.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              type: "string"
                              x-kubernetes-int-or-string: true
                          type: "object"
                      type: "object"
                    autoFailoverMaxCount:
                      default: 1
                      description: "AutoFailoverMaxCount is the maximum number of automatic failovers Couchbase server\nwill allow before not allowing any more.  This field must be between 1-3 for server versions prior to 7.1.0\ndefault is 1."
                      format: "int64"
                      minimum: 1.0
                      type: "integer"
                    autoFailoverOnDataDiskIssues:
                      description: "AutoFailoverOnDataDiskIssues defines whether Couchbase server should failover a pod\nif a disk issue was detected."
                      type: "boolean"
                    autoFailoverOnDataDiskIssuesTimePeriod:
                      default: "120s"
                      description: "AutoFailoverOnDataDiskIssuesTimePeriod defines how long to wait for transient errors\nbefore failing over a faulty disk.  This field must be in the range 5-3600s, defaulting\nto 120s.  More info:  https://golang.org/pkg/time/#ParseDuration"
                      type: "string"
                    autoFailoverServerGroup:
                      description: "AutoFailoverServerGroup whether to enable failing over a server group.\nThis field is ignored in server versions 7.1+ as it has been removed from the Couchbase API"
                      type: "boolean"
                    autoFailoverTimeout:
                      default: "120s"
                      description: "AutoFailoverTimeout defines how long Couchbase server will wait between a pod\nbeing witnessed as down, until when it will failover the pod.  Couchbase server\nwill only failover pods if it deems it safe to do so, and not result in data\nloss.  This field must be in the range 5-3600s, defaulting to 120s.\nMore info:  https://golang.org/pkg/time/#ParseDuration"
                      type: "string"
                    clusterName:
                      description: "ClusterName defines the name of the cluster, as displayed in the Couchbase UI.\nBy default, the cluster name is that specified in the CouchbaseCluster resource's\nmetadata."
                      type: "string"
                    data:
                      description: "Data allows the data service to be configured."
                      properties:
                        auxIOThreads:
                          description: "AuxIOThreads allows the number of threads used by the data service,\nper pod, to be altered.  This indicates the number of threads that are\nto be used in the AuxIO thread pool to run auxiliary I/O tasks.\nThis value must be between 1 and 64 threads and is only supported on CB versions 7.1.0+.\nand should only be increased where there are sufficient CPU resources\nallocated for their use. If not specified, this defaults to the\ndefault value set by Couchbase Server."
                          maximum: 64.0
                          minimum: 1.0
                          type: "integer"
                        minReplicasCount:
                          default: 0
                          description: "MinReplicasCount allows the minimum number of replicas required for\nbuckets to be set. New buckets cannot be created with less than this minimum.\nDefaults to 0."
                          type: "integer"
                        nonIOThreads:
                          description: "NonIOThreads allows the number of threads used by the data service,\nper pod, to be altered.  This indicates the number of threads that are\nto be used in the NonIO thread pool to run in memory tasks.\nThis value must be between 1 and 64 threads and is only supported on CB versions 7.1.0+.\nand should only be increased where there are sufficient CPU resources\nallocated for their use. If not specified, this defaults to the\ndefault value set by Couchbase Server."
                          maximum: 64.0
                          minimum: 1.0
                          type: "integer"
                        readerThreads:
                          description: "ReaderThreads allows the number of threads used by the data service,\nper pod, to be altered.  This value must be between 4 and 64 threads for CB versions below 7.1.0 and,\nor 1 and 64 for CB versions 7.1.0+.\nand should only be increased where there are sufficient CPU resources\nallocated for their use.  If not specified, this defaults to the\ndefault value set by Couchbase Server."
                          maximum: 64.0
                          minimum: 1.0
                          type: "integer"
                        writerThreads:
                          description: "WriterThreads allows the number of threads used by the data service,\nper pod, to be altered.  This setting is especially relevant when\nusing \"durable writes\", increasing this field will have a large\nimpact on performance.  This value must be between 4 and 64 threads for CB versions below 7.1.0 and,\n\t// or 1 and 64 for CB versions 7.1.0+.\nand should only be increased where there are sufficient CPU resources\nallocated for their use. If not specified, this defaults to the\ndefault value set by Couchbase Server."
                          maximum: 64.0
                          minimum: 1.0
                          type: "integer"
                      type: "object"
                    dataServiceMemoryQuota:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      default: "256Mi"
                      description: "DataServiceMemQuota is the amount of memory that should be allocated to the data service.\nThis value is per-pod, and only applicable to pods belonging to server classes running\nthe data service.  This field must be a quantity greater than or equal to 256Mi.  This\nfield defaults to 256Mi.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                    eventingServiceMemoryQuota:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      default: "256Mi"
                      description: "EventingServiceMemQuota is the amount of memory that should be allocated to the eventing service.\nThis value is per-pod, and only applicable to pods belonging to server classes running\nthe eventing service.  This field must be a quantity greater than or equal to 256Mi.  This\nfield defaults to 256Mi.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                    indexServiceMemoryQuota:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      default: "256Mi"
                      description: "IndexServiceMemQuota is the amount of memory that should be allocated to the index service.\nThis value is per-pod, and only applicable to pods belonging to server classes running\nthe index service.  This field must be a quantity greater than or equal to 256Mi.  This\nfield defaults to 256Mi.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                    indexStorageSetting:
                      default: "memory_optimized"
                      description: "DEPRECATED - by indexer.\nThe index storage mode to use for secondary indexing.  This field must be one of\n\"memory_optimized\" or \"plasma\", defaulting to \"memory_optimized\".  This field is\nimmutable and cannot be changed unless there are no server classes running the\nindex service in the cluster."
                      enum:
                        - "memory_optimized"
                        - "plasma"
                      type: "string"
                    indexer:
                      description: "Indexer allows the indexer to be configured."
                      properties:
                        enableShardAffinity:
                          default: false
                          description: "EnableShardAffinity when false Index Servers rebuild any index that\nare newly assigned to them during a rebalance. When set to true,\nCouchbase Server moves a reassigned index’s files between Index Servers.\nThis field is only supported on CB versions 7.6.0+."
                          type: "boolean"
                        logLevel:
                          default: "info"
                          description: "LogLevel controls the verbosity of indexer logs.  This field must be one of\n\"silent\", \"fatal\", \"error\", \"warn\", \"info\", \"verbose\", \"timing\", \"debug\" or\n\"trace\", defaulting to \"info\"."
                          enum:
                            - "silent"
                            - "fatal"
                            - "error"
                            - "warn"
                            - "info"
                            - "verbose"
                            - "timing"
                            - "debug"
                            - "trace"
                          type: "string"
                        maxRollbackPoints:
                          default: 2
                          description: "MaxRollbackPoints controls the number of checkpoints that can be rolled\nback to.  The default is 2, with a minimum of 1."
                          minimum: 1.0
                          type: "integer"
                        memorySnapshotInterval:
                          default: "200ms"
                          description: "MemorySnapshotInterval controls when memory indexes should be snapshotted.\nThis defaults to 200ms, and must be greater than or equal to 1ms."
                          type: "string"
                        numReplica:
                          default: 0
                          description: "NumberOfReplica specifies number of secondary index replicas to be created\nby the Index Service whenever CREATE INDEX is invoked, which ensures\nhigh availability and high performance.\nNote, if nodes and num_replica are both specified in the WITH clause,\nthe specified number of nodes must be one greater than num_replica\nThis defaults to 0, which means no index replicas to be created by default.\nMinimum must be 0."
                          minimum: 0.0
                          type: "integer"
                        redistributeIndexes:
                          default: false
                          description: "RedistributeIndexes when true, Couchbase Server redistributes indexes\nwhen rebalance occurs, in order to optimize performance.\nIf false (the default), such redistribution does not occur."
                          type: "boolean"
                        stableSnapshotInterval:
                          default: "5s"
                          description: "StableSnapshotInterval controls when disk indexes should be snapshotted.\nThis defaults to 5s, and must be greater than or equal to 1ms."
                          type: "string"
                        storageMode:
                          default: "memory_optimized"
                          description: "StorageMode controls the underlying storage engine for indexes.  Once set\nit can only be modified if there are no nodes in the cluster running the\nindex service.  The field must be one of \"memory_optimized\" or \"plasma\",\ndefaulting to \"memory_optimized\"."
                          enum:
                            - "memory_optimized"
                            - "plasma"
                          type: "string"
                        threads:
                          description: "Threads controls the number of processor threads to use for indexing.\nA value of 0 means 1 per CPU.  This attribute must be greater\nthan or equal to 0, defaulting to 0."
                          minimum: 0.0
                          type: "integer"
                      type: "object"
                    query:
                      description: "Query allows the query service to be configured."
                      properties:
                        backfillEnabled:
                          default: true
                          description: "BackfillEnabled allows the query service to backfill."
                          type: "boolean"
                        cboEnabled:
                          default: true
                          description: "CBOEnabled specifies whether the cost-based optimizer is enabled.\nDefaults to true."
                          type: "boolean"
                        cleanupClientAttemptsEnabled:
                          default: true
                          description: "CleanupClientAttemptsEnabled specifies whether the Query service preferentially aims to clean up just\ntransactions that it has created, leaving transactions for the distributed cleanup process only\nwhen it is forced to.\nDefaults to true."
                          type: "boolean"
                        cleanupLostAttemptsEnabled:
                          default: true
                          description: "CleanupLostAttemptsEnabled specifies the Query service takes part in the distributed cleanup\nprocess, and cleans up expired transactions created by any client.\nDefaults to true."
                          type: "boolean"
                        cleanupWindow:
                          default: "60s"
                          description: "CleanupWindow specifies how frequently the Query service checks its subset of active\ntransaction records for cleanup.\nDefaults to 60s"
                          type: "string"
                        completedLimit:
                          default: 4000
                          description: "CompletedLimit sets the number of requests to be logged in the completed\nrequests catalog. As new completed requests are added, old ones are removed."
                          format: "int32"
                          type: "integer"
                        completedMaxPlanSize:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          default: "262144"
                          description: "CompletedMaxPlanSize limits the size of query execution plans that can be logged in the\ncompleted requests catalog. Queries with plans larger than this are not logged.\nThis field is only supported on CB versions 7.6.0+.\nDefaults to 262144, maximum value is 20840448, and minimum value is 0."
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          type: "string"
                          x-kubernetes-int-or-string: true
                        completedTrackingAllRequests:
                          default: false
                          description: "CompletedTrackingAllRequests allows all requests to be tracked regardless of their\ntime. This field requires `completedTrackingEnabled` to be true."
                          type: "boolean"
                        completedTrackingEnabled:
                          default: true
                          description: "CompletedTrackingEnabled allows completed requests to be tracked in the requests\ncatalog."
                          type: "boolean"
                        completedTrackingThreshold:
                          default: "7s"
                          description: "CompletedThreshold is a trigger for queries to be logged in the completed\nrequests catalog. All completed queries lasting longer than this threshold\nare logged in the completed requests catalog. This field requires `completedTrackingEnabled`\nto be set to true and `completedTrackingAllRequests` to be false to have any effect."
                          type: "string"
                        logLevel:
                          default: "info"
                          description: "LogLevel controls the verbosity of query logs. This field must be one of\n\"debug\", \"trace\", \"info\", \"warn\", \"error\", \"severe\", or \"none\", defaulting to \"info\"."
                          enum:
                            - "debug"
                            - "trace"
                            - "info"
                            - "warn"
                            - "error"
                            - "severe"
                            - "none"
                          type: "string"
                        maxParallelism:
                          default: 1
                          description: "MaxParallelism specifies the maximum parallelism for queries on all Query nodes in the cluster.\nIf the value is zero, negative, or larger than the number of allowed cored the maximum parallelism\nis restricted to the number of allowed cores.\nDefaults to 1."
                          format: "int32"
                          type: "integer"
                        memoryQuota:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          default: "0"
                          description: "MemoryQuota specifies the maximum amount of memory a request may use on any Query node in the cluster.\nThis parameter enforces a ceiling on the memory used for the tracked documents required for processing\na request. It does not take into account any other memory that might be used to process a request,\nsuch as the stack, the operators, or some intermediate values.\nDefaults to 0."
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          type: "string"
                          x-kubernetes-int-or-string: true
                        nodeQuotaValPercent:
                          default: 67
                          description: "NodeQuotaValPercent sets the  percentage of the `useReplica` that is dedicated to tracked\nvalue content memory across all active requests for every Query node in the cluster.\nThis field is only supported on CB versions 7.6.0+.\nDefaults to 67."
                          format: "int32"
                          maximum: 100.0
                          minimum: 0.0
                          type: "integer"
                        numActiveTransactionRecords:
                          default: 1024
                          description: "NumActiveTransactionRecords specifies the total number of active transaction records for\nall Query nodes in the cluster.\nDefault to 1024 and has a minimum of 1."
                          format: "int32"
                          minimum: 1.0
                          type: "integer"
                        numCpus:
                          default: 0
                          description: "NumCpus is the number of CPUs the Query service can use on any Query node in the cluster.\nWhen set to 0 (the default), the Query service can use all available CPUs, up to the limits described below.\nThe number of CPUs can never be greater than the number of logical CPUs.\nIn Community Edition, the number of allowed CPUs cannot be greater than 4.\nIn Enterprise Edition, there is no limit to the number of allowed CPUs.\nThis field is only supported on CB versions 7.6.0+.\nNOTE: This change requires a restart of the Query service to take effect which can be done by rescheduling\nnodes that are running the query service.\nDefaults to 0"
                          format: "int32"
                          minimum: 0.0
                          type: "integer"
                        pipelineBatch:
                          default: 16
                          description: "PipelineBatch controls the number of items execution operators can batch for\nFetch from the KV. Defaults to 16."
                          format: "int32"
                          type: "integer"
                        pipelineCap:
                          default: 512
                          description: "PipelineCap controls the maximum number of items each execution\noperator can buffer between various operators. Defaults to 512."
                          format: "int32"
                          type: "integer"
                        preparedLimit:
                          default: 16384
                          description: "PreparedLimit is the maximum number of prepared statements in the cache.\nWhen this cache reaches the limit, the least recently used prepared\nstatements will be discarded as new prepared statements are created."
                          format: "int32"
                          type: "integer"
                        scanCap:
                          default: 512
                          description: "ScapCan sets the maximum buffered channel size between the indexer client\nand the query service for index scans.\nDefaults to 512."
                          format: "int32"
                          type: "integer"
                        temporarySpace:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          default: "5Gi"
                          description: "TemporarySpace allows the temporary storage used by the query\nservice backfill, per-pod, to be modified.  This field requires\n`backfillEnabled` to be set to true in order to have any effect.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          type: "string"
                          x-kubernetes-int-or-string: true
                        temporarySpaceUnlimited:
                          description: "TemporarySpaceUnlimited allows the temporary storage used by\nthe query service backfill, per-pod, to be unconstrained.  This field\nrequires `backfillEnabled` to be set to true in order to have any effect.\nThis field overrides `temporarySpace`."
                          type: "boolean"
                        timeout:
                          description: "Timeout is the maximum time to spend on the request before timing out.\nIf this field is not set then there will be no timeout."
                          type: "string"
                        txTimeout:
                          default: "0ms"
                          description: "TxTimeout is the maximum time to spend on a transaction before timing out. This setting\nonly applies to requests containing the BEGIN TRANSACTION statement, or to requests where\nthe tximplicit parameter is set. For all other requests, it is ignored.\nDefaults to 0ms (no timeout)."
                          type: "string"
                        useReplica:
                          description: "UseReplica specifies whether a query can fetch data from a replica vBucket if active vBuckets\nare inaccessible. If set to true then read from replica is enabled for all queries, but can\nbe disabled at request level. If set to false read from replica is disabled for all queries\nand cannot be overridden at request level. If this field is unset then it is enabled/disabled\nat the request level.\nThis field is only supported on CB versions 7.6.0+."
                          type: "boolean"
                      required:
                        - "cboEnabled"
                        - "cleanupClientAttemptsEnabled"
                        - "cleanupLostAttemptsEnabled"
                        - "cleanupWindow"
                        - "completedLimit"
                        - "completedMaxPlanSize"
                        - "completedTrackingAllRequests"
                        - "completedTrackingEnabled"
                        - "maxParallelism"
                        - "nodeQuotaValPercent"
                        - "numActiveTransactionRecords"
                        - "numCpus"
                        - "pipelineBatch"
                        - "pipelineCap"
                        - "preparedLimit"
                        - "scanCap"
                      type: "object"
                    queryServiceMemoryQuota:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      description: "QueryServiceMemQuota is used when the spec.autoResourceAllocation feature is enabled,\nand is used to define the amount of memory reserved by the query service for use with\nKubernetes resource scheduling. More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes\nIn CB Server 7.6.0+ QueryServiceMemQuota also sets a soft memory limit for every Query node in the cluster.\nThe garbage collector tries to keep below this target. It is not a hard, absolute limit, and memory\nusage may exceed this value."
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                    searchServiceMemoryQuota:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      default: "256Mi"
                      description: "SearchServiceMemQuota is the amount of memory that should be allocated to the search service.\nThis value is per-pod, and only applicable to pods belonging to server classes running\nthe search service.  This field must be a quantity greater than or equal to 256Mi.  This\nfield defaults to 256Mi.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      type: "string"
                      x-kubernetes-int-or-string: true
                  type: "object"
                enableOnlineVolumeExpansion:
                  description: "EnableOnlineVolumeExpansion enables online expansion of Persistent Volumes.\nYou can only expand a PVC if its storage class's \"allowVolumeExpansion\" field is set to true.\nAdditionally, Kubernetes feature \"ExpandInUsePersistentVolumes\" must be enabled in order to\nexpand the volumes which are actively bound to Pods.\nVolumes can only be expanded and not reduced to a smaller size.\nSee: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#resizing-an-in-use-persistentvolumeclaim\n\n\nIf \"EnableOnlineVolumeExpansion\" is enabled for use within an environment that does\nnot actually support online volume and file system expansion then the cluster will fallback to\nrolling upgrade procedure to create a new set of Pods for use with resized Volumes.\nMore info:  https://kubernetes.io/docs/concepts/storage/persistent-volumes/#expanding-persistent-volumes-claims"
                  type: "boolean"
                enablePreviewScaling:
                  description: "DEPRECATED - This option only exists for backwards compatibility and no longer\nrestricts autoscaling to ephemeral services.\nEnablePreviewScaling enables autoscaling for stateful services and buckets."
                  type: "boolean"
                envImagePrecedence:
                  description: "EnvImagePrecedence gives precedence over the default container image name in\n`spec.Image` to an image name provided through Operator environment variables.\nFor more info on using Operator environment variables:\nhttps://docs.couchbase.com/operator/current/reference-operator-configuration.html"
                  type: "boolean"
                hibernate:
                  description: "Hibernate is whether to hibernate the cluster."
                  type: "boolean"
                hibernationStrategy:
                  description: "HibernationStrategy defines how to hibernate the cluster.  When Immediate\nthe Operator will immediately delete all pods and take no further action until\nthe hibernate field is set to false."
                  enum:
                    - "Immediate"
                  type: "string"
                image:
                  description: "Image is the container image name that will be used to launch Couchbase\nserver instances.  Updating this field will cause an automatic upgrade of\nthe cluster. Explicitly specifying the image for a server class will override\nthis value for the server class."
                  pattern: "^(.*?(:\\d+)?/)?.*?/.*?(:.*?\\d+\\.\\d+\\.\\d+.*|@sha256:[0-9a-f]{64})$"
                  type: "string"
                logging:
                  description: "Logging defines Operator logging options."
                  properties:
                    audit:
                      description: "Used to manage the audit configuration directly"
                      properties:
                        disabledEvents:
                          description: "The list of event ids to disable for auditing purposes.\nThis is passed to the REST API with no verification by the operator.\nRefer to the documentation for details:\nhttps://docs.couchbase.com/server/current/audit-event-reference/audit-event-reference.html"
                          items:
                            type: "integer"
                          type: "array"
                        disabledUsers:
                          description: "The list of users to ignore for auditing purposes.\nThis is passed to the REST API with minimal validation it meets an acceptable regex pattern.\nRefer to the documentation for full details on how to configure this:\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html#ignoring-events-by-user"
                          items:
                            description: "The AuditDisabledUser is actually a compound string intended to feed a two-element struct.\nIts value may be:\n1. A local user, specified in the form localusername/local.\n2. An external user, specified in the form externalusername/external.\n3. An internal user, specified in the form @internalusername/local.\nWe add a quick validation check to make sure these match and prevent being rejected by the API later.\nThis is just a sanity check, the REST API may still reject the user for other reasons."
                            pattern: "^.+/(local|external)$"
                            type: "string"
                          type: "array"
                        enabled:
                          description: "Enabled is a boolean that enables the audit capabilities."
                          type: "boolean"
                        garbageCollection:
                          description: "Handle all optional garbage collection (GC) configuration for the audit functionality.\nThis is not part of the audit REST API, it is intended to handle GC automatically for the audit logs.\nBy default the Couchbase Server rotates the audit logs but does not clean up the rotated logs.\nThis is left as an operation for the cluster administrator to manage, the operator allows for us to automate this:\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"
                          properties:
                            sidecar:
                              description: "DEPRECATED - by spec.logging.audit.nativePruning for Couchbase Server 7.2.4+\nProvide the sidecar configuration required (if so desired) to automatically clean up audit logs."
                              properties:
                                age:
                                  default: "1h"
                                  description: "The minimum age of rotated log files to remove, defaults to one hour."
                                  type: "string"
                                enabled:
                                  description: "Enable this sidecar by setting to true, defaults to being disabled."
                                  type: "boolean"
                                image:
                                  default: "busybox:1.33.1"
                                  description: "Image is the image to be used to run the audit sidecar helper.\nNo validation is carried out as this can be any arbitrary repo and tag."
                                  type: "string"
                                interval:
                                  default: "20m"
                                  description: "The interval at which to check for rotated log files to remove, defaults to 20 minutes."
                                  type: "string"
                                resources:
                                  description: "Resources is the resource requirements for the cleanup container.\nWill be populated by Kubernetes defaults if not specified."
                                  properties:
                                    claims:
                                      description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                      items:
                                        description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                        properties:
                                          name:
                                            description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                            type: "string"
                                        required:
                                          - "name"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-map-keys:
                                        - "name"
                                      x-kubernetes-list-type: "map"
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                      type: "object"
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                      type: "object"
                                  type: "object"
                              type: "object"
                          type: "object"
                        rotation:
                          description: "The interval to optionally rotate the audit log.\nThis is passed to the REST API, see here for details:\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"
                          properties:
                            interval:
                              default: "15m"
                              description: "The interval at which to rotate log files, defaults to 15 minutes."
                              type: "string"
                            pruneAge:
                              default: "0"
                              description: "How long Couchbase Server keeps rotated audit logs.\nIf set to 0 (the default) then audit logs won't be pruned.\nHas a maximum of 35791394 seconds."
                              type: "string"
                            size:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              default: "20Mi"
                              description: "Size allows the specification of a rotation size for the log, defaults to 20Mi.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              type: "string"
                              x-kubernetes-int-or-string: true
                          type: "object"
                      type: "object"
                    logRetentionCount:
                      description: "LogRetentionCount gives the number of persistent log PVCs to keep."
                      minimum: 0.0
                      type: "integer"
                    logRetentionTime:
                      description: "LogRetentionTime gives the time to keep persistent log PVCs alive for."
                      pattern: "^\\d+(ns|us|ms|s|m|h)$"
                      type: "string"
                    server:
                      description: "Specification of all logging configuration required to manage the sidecar containers in each pod."
                      properties:
                        configurationName:
                          default: "fluent-bit-config"
                          description: "ConfigurationName is the name of the Secret to use holding the logging configuration in the namespace.\nA Secret is used to ensure we can safely store credentials but this can be populated from plaintext if acceptable too.\nIf it does not exist then one will be created with defaults in the namespace so it can be easily updated whilst running.\nNote that if running multiple clusters in the same kubernetes namespace then you should use a separate Secret for each,\notherwise the first cluster will take ownership (if created) and the Secret will be cleaned up when that cluster is\nremoved. If running clusters in separate namespaces then they will be separate Secrets anyway."
                          type: "string"
                        enabled:
                          description: "Enabled is a boolean that enables the logging sidecar container."
                          type: "boolean"
                        manageConfiguration:
                          default: true
                          description: "A boolean which indicates whether the operator should manage the configuration or not.\nIf omitted then this defaults to true which means the operator will attempt to reconcile it to default values.\nTo use a custom configuration make sure to set this to false.\nNote that the ownership of any Secret is not changed so if a Secret is created externally it can be updated by\nthe operator but it's ownership stays the same so it will be cleaned up when it's owner is."
                          type: "boolean"
                        sidecar:
                          default: {}
                          description: "Any specific logging sidecar container configuration."
                          properties:
                            configurationMountPath:
                              default: "/fluent-bit/config/"
                              description: "ConfigurationMountPath is the location to mount the ConfigurationName Secret into the image.\nIf another log shipping image is used that needs a different mount then modify this.\nNote that the configuration file must be called 'fluent-bit.conf' at the root of this path,\nthere is no provision for overriding the name of the config file passed as the\nCOUCHBASE_LOGS_CONFIG_FILE environment variable."
                              type: "string"
                            image:
                              default: "couchbase/fluent-bit:1.2.1"
                              description: "Image is the image to be used to deal with logging as a sidecar.\nNo validation is carried out as this can be any arbitrary repo and tag.\nIt will default to the latest supported version of Fluent Bit."
                              type: "string"
                            resources:
                              description: "Resources is the resource requirements for the sidecar container.\nWill be populated by Kubernetes defaults if not specified."
                              properties:
                                claims:
                                  description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                  items:
                                    description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                    properties:
                                      name:
                                        description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                        type: "string"
                                    required:
                                      - "name"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-map-keys:
                                    - "name"
                                  x-kubernetes-list-type: "map"
                                limits:
                                  additionalProperties:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                  type: "object"
                                requests:
                                  additionalProperties:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                  type: "object"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
                monitoring:
                  description: "DEPRECATED - By Couchbase Server metrics endpoint on version 7.0+\nMonitoring defines any Operator managed integration into 3rd party monitoring\ninfrastructure."
                  properties:
                    prometheus:
                      description: "DEPRECATED - By Couchbase Server metrics endpoint on version 7.0+\nPrometheus provides integration with Prometheus monitoring."
                      properties:
                        authorizationSecret:
                          description: "AuthorizationSecret is the name of a Kubernetes secret that contains a\nbearer token to authorize GET requests to the metrics endpoint"
                          type: "string"
                        enabled:
                          description: "Enabled is a boolean that enables/disables the metrics sidecar container.\nThis must be set to true, when image is provided."
                          type: "boolean"
                        image:
                          description: "Image is the metrics image to be used to collect metrics.\nNo validation is carried out as this can be any arbitrary repo and tag.\nenabled must be set to true, when image is provided."
                          type: "string"
                        refreshRate:
                          default: 60
                          description: "RefreshRate is the frequency in which cached statistics are updated in seconds.\nShorter intervals will add additional resource overhead to clusters running Couchbase Server 7.0+\nDefault is 60 seconds, Maximum value is 600 seconds, and minimum value is 1 second."
                          format: "int64"
                          maximum: 600.0
                          minimum: 1.0
                          type: "integer"
                        resources:
                          description: "Resources is the resource requirements for the metrics container.\nWill be populated by Kubernetes defaults if not specified."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                      required:
                        - "image"
                      type: "object"
                  type: "object"
                networking:
                  description: "Networking defines Couchbase cluster networking options such as network\ntopology, TLS and DDNS settings."
                  properties:
                    addressFamily:
                      description: "AddressFamily allows the manual selection of the address family to use.\nWhen this field is not set, Couchbase server will default to using IPv4\nfor internal communication and also support IPv6 on dual stack systems.\nSetting this field to either IPv4 or IPv6 will force Couchbase to use the\nselected protocol for internal communication, and also disable all other\nprotocols to provide added security and simplicty when defining firewall\nrules.  Disabling of address families is only supported in Couchbase\nServer 7.0.2+."
                      enum:
                        - "IPv4"
                        - "IPv6"
                      type: "string"
                    adminConsoleServiceTemplate:
                      description: "AdminConsoleServiceTemplate provides a template used by the Operator to create\nand manage the admin console service.  This allows services to be annotated, the\nservice type defined and any other options that Kubernetes provides.  When using\na LoadBalancer service type, TLS and dynamic DNS must also be enabled. The Operator\nreserves the right to modify or replace any field.  More info:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#service-v1-core"
                      properties:
                        metadata:
                          description: "Standard objects metadata.  This is a curated version for use with Couchbase\nresource templates."
                          properties:
                            annotations:
                              additionalProperties:
                                type: "string"
                              description: "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations"
                              type: "object"
                            labels:
                              additionalProperties:
                                type: "string"
                              description: "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services. More info: http://kubernetes.io/docs/user-guide/labels"
                              type: "object"
                          type: "object"
                        spec:
                          description: "ServiceSpec describes the attributes that a user creates on a service."
                          properties:
                            allocateLoadBalancerNodePorts:
                              description: "allocateLoadBalancerNodePorts defines if NodePorts will be automatically\nallocated for services with type LoadBalancer.  Default is \"true\". It\nmay be set to \"false\" if the cluster load-balancer does not rely on\nNodePorts.  If the caller requests specific NodePorts (by specifying a\nvalue), those requests will be respected, regardless of this field.\nThis field may only be set for services with type LoadBalancer and will\nbe cleared if the type is changed to any other type."
                              type: "boolean"
                            clusterIP:
                              description: "clusterIP is the IP address of the service and is usually assigned\nrandomly. If an address is specified manually, is in-range (as per\nsystem configuration), and is not in use, it will be allocated to the\nservice; otherwise creation of the service will fail. This field may not\nbe changed through updates unless the type field is also being changed\nto ExternalName (which requires this field to be blank) or the type\nfield is being changed from ExternalName (in which case this field may\noptionally be specified, as describe above).  Valid values are \"None\",\nempty string (\"\"), or a valid IP address. Setting this to \"None\" makes a\n\"headless service\" (no virtual IP), which is useful when direct endpoint\nconnections are preferred and proxying is not required.  Only applies to\ntypes ClusterIP, NodePort, and LoadBalancer. If this field is specified\nwhen creating a Service of type ExternalName, creation will fail. This\nfield will be wiped when updating a Service to type ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                              type: "string"
                            clusterIPs:
                              description: "ClusterIPs is a list of IP addresses assigned to this service, and are\nusually assigned randomly.  If an address is specified manually, is\nin-range (as per system configuration), and is not in use, it will be\nallocated to the service; otherwise creation of the service will fail.\nThis field may not be changed through updates unless the type field is\nalso being changed to ExternalName (which requires this field to be\nempty) or the type field is being changed from ExternalName (in which\ncase this field may optionally be specified, as describe above).  Valid\nvalues are \"None\", empty string (\"\"), or a valid IP address.  Setting\nthis to \"None\" makes a \"headless service\" (no virtual IP), which is\nuseful when direct endpoint connections are preferred and proxying is\nnot required.  Only applies to types ClusterIP, NodePort, and\nLoadBalancer. If this field is specified when creating a Service of type\nExternalName, creation will fail. This field will be wiped when updating\na Service to type ExternalName.  If this field is not specified, it will\nbe initialized from the clusterIP field.  If this field is specified,\nclients must ensure that clusterIPs[0] and clusterIP have the same\nvalue.\n\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order).\nThese IPs must correspond to the values of the ipFamilies field. Both\nclusterIPs and ipFamilies are governed by the ipFamilyPolicy field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                              items:
                                type: "string"
                              type: "array"
                              x-kubernetes-list-type: "atomic"
                            externalIPs:
                              description: "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system."
                              items:
                                type: "string"
                              type: "array"
                            externalName:
                              description: "externalName is the external reference that discovery mechanisms will\nreturn as an alias for this service (e.g. a DNS CNAME record). No\nproxying will be involved.  Must be a lowercase RFC-1123 hostname\n(https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\"."
                              type: "string"
                            externalTrafficPolicy:
                              description: "externalTrafficPolicy describes how nodes distribute service traffic they\nreceive on one of the Service's \"externally-facing\" addresses (NodePorts,\nExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure\nthe service in a way that assumes that external load balancers will take care\nof balancing the service traffic between nodes, and so each node will deliver\ntraffic only to the node-local endpoints of the service, without masquerading\nthe client source IP. (Traffic mistakenly sent to a node with no endpoints will\nbe dropped.) The default value, \"Cluster\", uses the standard behavior of\nrouting to all endpoints evenly (possibly modified by topology and other\nfeatures). Note that traffic sent to an External IP or LoadBalancer IP from\nwithin the cluster will always get \"Cluster\" semantics, but clients sending to\na NodePort from within the cluster may need to take traffic policy into account\nwhen picking a node."
                              type: "string"
                            healthCheckNodePort:
                              description: "healthCheckNodePort specifies the healthcheck nodePort for the service.\nThis only applies when type is set to LoadBalancer and\nexternalTrafficPolicy is set to Local. If a value is specified, is\nin-range, and is not in use, it will be used.  If not specified, a value\nwill be automatically allocated.  External systems (e.g. load-balancers)\ncan use this port to determine if a given node holds endpoints for this\nservice or not.  If this field is specified when creating a Service\nwhich does not need it, creation will fail. This field will be wiped\nwhen updating a Service to no longer need it (e.g. changing type).\nThis field cannot be updated once set."
                              format: "int32"
                              type: "integer"
                            internalTrafficPolicy:
                              description: "InternalTrafficPolicy describes how nodes distribute service traffic they\nreceive on the ClusterIP. If set to \"Local\", the proxy will assume that pods\nonly want to talk to endpoints of the service on the same node as the pod,\ndropping the traffic if there are no local endpoints. The default value,\n\"Cluster\", uses the standard behavior of routing to all endpoints evenly\n(possibly modified by topology and other features)."
                              type: "string"
                            ipFamilies:
                              description: "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\nservice. This field is usually assigned automatically based on cluster\nconfiguration and the ipFamilyPolicy field. If this field is specified\nmanually, the requested family is available in the cluster,\nand ipFamilyPolicy allows it, it will be used; otherwise creation of\nthe service will fail. This field is conditionally mutable: it allows\nfor adding or removing a secondary IP family, but it does not allow\nchanging the primary IP family of the Service. Valid values are \"IPv4\"\nand \"IPv6\".  This field only applies to Services of types ClusterIP,\nNodePort, and LoadBalancer, and does apply to \"headless\" services.\nThis field will be wiped when updating a Service to type ExternalName.\n\n\nThis field may hold a maximum of two entries (dual-stack families, in\neither order).  These families must correspond to the values of the\nclusterIPs field, if specified. Both clusterIPs and ipFamilies are\ngoverned by the ipFamilyPolicy field."
                              items:
                                description: "IPFamily represents the IP Family (IPv4 or IPv6). This type is used\nto express the family of an IP expressed by a type (e.g. service.spec.ipFamilies)."
                                type: "string"
                              type: "array"
                              x-kubernetes-list-type: "atomic"
                            ipFamilyPolicy:
                              description: "IPFamilyPolicy represents the dual-stack-ness requested or required by\nthis Service. If there is no value provided, then this field will be set\nto SingleStack. Services can be \"SingleStack\" (a single IP family),\n\"PreferDualStack\" (two IP families on dual-stack configured clusters or\na single IP family on single-stack clusters), or \"RequireDualStack\"\n(two IP families on dual-stack configured clusters, otherwise fail). The\nipFamilies and clusterIPs fields depend on the value of this field. This\nfield will be wiped when updating a service to type ExternalName."
                              type: "string"
                            loadBalancerClass:
                              description: "loadBalancerClass is the class of the load balancer implementation this Service belongs to.\nIf specified, the value of this field must be a label-style identifier, with an optional prefix,\ne.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users.\nThis field can only be set when the Service type is 'LoadBalancer'. If not set, the default load\nbalancer implementation is used, today this is typically done through the cloud provider integration,\nbut should apply for any default implementation. If set, it is assumed that a load balancer\nimplementation is watching for Services with a matching class. Any default load balancer\nimplementation (e.g. cloud providers) should ignore Services that set this field.\nThis field can only be set when creating or updating a Service to type 'LoadBalancer'.\nOnce set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type."
                              type: "string"
                            loadBalancerIP:
                              description: "Only applies to Service Type: LoadBalancer.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.\nDeprecated: This field was under-specified and its meaning varies across implementations.\nUsing it is non-portable and it may not support dual-stack.\nUsers are encouraged to use implementation-specific annotations when available."
                              type: "string"
                            loadBalancerSourceRanges:
                              description: "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
                              items:
                                type: "string"
                              type: "array"
                            sessionAffinity:
                              description: "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                              type: "string"
                            sessionAffinityConfig:
                              description: "sessionAffinityConfig contains the configurations of session affinity."
                              properties:
                                clientIP:
                                  description: "clientIP contains the configurations of Client IP based session affinity."
                                  properties:
                                    timeoutSeconds:
                                      description: "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours)."
                                      format: "int32"
                                      type: "integer"
                                  type: "object"
                              type: "object"
                            type:
                              description: "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing\nto endpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object or\nEndpointSlice objects. If clusterIP is \"None\", no virtual IP is\nallocated and the endpoints are published as a set of endpoints rather\nthan a virtual IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the same endpoints as the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an external load-balancer\n(if supported in the current cloud) which routes to the same endpoints\nas the clusterIP.\n\"ExternalName\" aliases this service to the specified externalName.\nSeveral other fields do not apply to ExternalName services.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types"
                              type: "string"
                          type: "object"
                      type: "object"
                    adminConsoleServiceType:
                      default: "NodePort"
                      description: "DEPRECATED - by adminConsoleServiceTemplate.\nAdminConsoleServiceType defines whether to create a node port or load balancer service.\nWhen using a LoadBalancer service type, TLS and dynamic DNS must also be enabled.\nThis field must be one of \"NodePort\" or \"LoadBalancer\", defaulting to \"NodePort\"."
                      enum:
                        - "NodePort"
                        - "LoadBalancer"
                      type: "string"
                    adminConsoleServices:
                      description: "DEPRECATED - not required by Couchbase Server.\nAdminConsoleServices is a selector to choose specific services to expose via the admin\nconsole. This field may contain any of \"data\", \"index\", \"query\", \"search\", \"eventing\"\nand \"analytics\".  Each service may only be included once."
                      items:
                        description: "Supported services"
                        enum:
                          - "admin"
                          - "data"
                          - "index"
                          - "query"
                          - "search"
                          - "eventing"
                          - "analytics"
                        type: "string"
                      type: "array"
                      x-kubernetes-list-type: "set"
                    cloudNativeGateway:
                      description: "CloudNativeGateway is used to provision a gRPC gateway proxying a Couchbase\ncluster."
                      properties:
                        image:
                          description: "Image is the Cloud Native Gateway image to be used to run the sidecar container.\nNo validation is carried out as this can be any arbitrary repo and tag.\nTODO: provide a default kubebuilder default image tag as field is mandatory."
                          type: "string"
                        logLevel:
                          default: "info"
                          description: "DEVELOPER PREVIEW - This feature is in developer preview.\nLogLevel controls the verbosity of cloud native logs.  This field must be one of\n\"fatal\", \"panic\", \"dpanic\", \"error\", \"warn\", \"info\", \"debug\" defaulting to \"info\"."
                          enum:
                            - "fatal"
                            - "panic"
                            - "dpanic"
                            - "error"
                            - "warn"
                            - "info"
                            - "debug"
                          type: "string"
                        terminationGracePeriodSeconds:
                          default: 75
                          description: "TerminationGracePeriodSeconds specifies the grace period for the container to\nterminate. Defaults to 75 seconds."
                          format: "int64"
                          type: "integer"
                        tls:
                          description: "TLS defines the TLS configuration for the Cloud Native Gateway server including\nserver and client certificate configuration, and TLS security policies.\nIf no TLS config are explicitly provided, the operator generates/manages self-signed certs/keys\nand creates a k8s secret named `couchbase-cloud-native-gateway-self-signed-secret-<cluster-name>`\nunique to a Couchbase cluster, which is volume mounted to the cb k8s pod.\nThis action could be overidden at the outset or later, by using the below\nTLS config or generating the secret of same name as\n`couchbase-cloud-native-gateway-self-signed-secret-<cluster-name>` with certificates\nconforming to the keys of well-known type \"kubernetes.io/tls\" with \"tls.crt\" and \"tls.key\".\nN.B. The secret is on per cluster basis so it's advised to use the unique cluster name else\nwould be ignored."
                          properties:
                            serverSecretName:
                              description: "ServerSecretName specifies the secret name, in the same namespace as the cluster,\nthat contains Cloud Native Gateway gRPC server TLS data.\nThe secret is expected to contain \"tls.crt\" and\n\"tls.key\" as per the kubernetes.io/tls secret type."
                              type: "string"
                          type: "object"
                      required:
                        - "image"
                        - "logLevel"
                      type: "object"
                    disableUIOverHTTP:
                      description: "DisableUIOverHTTP is used to explicitly enable and disable UI access over\nthe HTTP protocol.  If not specified, this field defaults to false."
                      type: "boolean"
                    disableUIOverHTTPS:
                      description: "DisableUIOverHTTPS is used to explicitly enable and disable UI access over\nthe HTTPS protocol.  If not specified, this field defaults to false."
                      type: "boolean"
                    dns:
                      description: "DNS defines information required for Dynamic DNS support."
                      properties:
                        domain:
                          description: "Domain is the domain to create pods in.  When populated the Operator\nwill annotate the admin console and per-pod services with the key\n\"external-dns.alpha.kubernetes.io/hostname\".  These annotations can\nbe used directly by a Kubernetes External-DNS controller to replicate\nload balancer service IP addresses into a public DNS server."
                          type: "string"
                      type: "object"
                    exposeAdminConsole:
                      description: "ExposeAdminConsole creates a service referencing the admin console.\nThe service is configured by the adminConsoleServiceTemplate field."
                      type: "boolean"
                    exposedFeatureServiceTemplate:
                      description: "ExposedFeatureServiceTemplate provides a template used by the Operator to create\nand manage per-pod services.  This allows services to be annotated, the\nservice type defined and any other options that Kubernetes provides.  When using\na LoadBalancer service type, TLS and dynamic DNS must also be enabled. The Operator\nreserves the right to modify or replace any field.  More info:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#service-v1-core"
                      properties:
                        metadata:
                          description: "Standard objects metadata.  This is a curated version for use with Couchbase\nresource templates."
                          properties:
                            annotations:
                              additionalProperties:
                                type: "string"
                              description: "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations"
                              type: "object"
                            labels:
                              additionalProperties:
                                type: "string"
                              description: "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services. More info: http://kubernetes.io/docs/user-guide/labels"
                              type: "object"
                          type: "object"
                        spec:
                          description: "ServiceSpec describes the attributes that a user creates on a service."
                          properties:
                            allocateLoadBalancerNodePorts:
                              description: "allocateLoadBalancerNodePorts defines if NodePorts will be automatically\nallocated for services with type LoadBalancer.  Default is \"true\". It\nmay be set to \"false\" if the cluster load-balancer does not rely on\nNodePorts.  If the caller requests specific NodePorts (by specifying a\nvalue), those requests will be respected, regardless of this field.\nThis field may only be set for services with type LoadBalancer and will\nbe cleared if the type is changed to any other type."
                              type: "boolean"
                            clusterIP:
                              description: "clusterIP is the IP address of the service and is usually assigned\nrandomly. If an address is specified manually, is in-range (as per\nsystem configuration), and is not in use, it will be allocated to the\nservice; otherwise creation of the service will fail. This field may not\nbe changed through updates unless the type field is also being changed\nto ExternalName (which requires this field to be blank) or the type\nfield is being changed from ExternalName (in which case this field may\noptionally be specified, as describe above).  Valid values are \"None\",\nempty string (\"\"), or a valid IP address. Setting this to \"None\" makes a\n\"headless service\" (no virtual IP), which is useful when direct endpoint\nconnections are preferred and proxying is not required.  Only applies to\ntypes ClusterIP, NodePort, and LoadBalancer. If this field is specified\nwhen creating a Service of type ExternalName, creation will fail. This\nfield will be wiped when updating a Service to type ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                              type: "string"
                            clusterIPs:
                              description: "ClusterIPs is a list of IP addresses assigned to this service, and are\nusually assigned randomly.  If an address is specified manually, is\nin-range (as per system configuration), and is not in use, it will be\nallocated to the service; otherwise creation of the service will fail.\nThis field may not be changed through updates unless the type field is\nalso being changed to ExternalName (which requires this field to be\nempty) or the type field is being changed from ExternalName (in which\ncase this field may optionally be specified, as describe above).  Valid\nvalues are \"None\", empty string (\"\"), or a valid IP address.  Setting\nthis to \"None\" makes a \"headless service\" (no virtual IP), which is\nuseful when direct endpoint connections are preferred and proxying is\nnot required.  Only applies to types ClusterIP, NodePort, and\nLoadBalancer. If this field is specified when creating a Service of type\nExternalName, creation will fail. This field will be wiped when updating\na Service to type ExternalName.  If this field is not specified, it will\nbe initialized from the clusterIP field.  If this field is specified,\nclients must ensure that clusterIPs[0] and clusterIP have the same\nvalue.\n\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order).\nThese IPs must correspond to the values of the ipFamilies field. Both\nclusterIPs and ipFamilies are governed by the ipFamilyPolicy field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                              items:
                                type: "string"
                              type: "array"
                              x-kubernetes-list-type: "atomic"
                            externalIPs:
                              description: "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system."
                              items:
                                type: "string"
                              type: "array"
                            externalName:
                              description: "externalName is the external reference that discovery mechanisms will\nreturn as an alias for this service (e.g. a DNS CNAME record). No\nproxying will be involved.  Must be a lowercase RFC-1123 hostname\n(https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\"."
                              type: "string"
                            externalTrafficPolicy:
                              description: "externalTrafficPolicy describes how nodes distribute service traffic they\nreceive on one of the Service's \"externally-facing\" addresses (NodePorts,\nExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure\nthe service in a way that assumes that external load balancers will take care\nof balancing the service traffic between nodes, and so each node will deliver\ntraffic only to the node-local endpoints of the service, without masquerading\nthe client source IP. (Traffic mistakenly sent to a node with no endpoints will\nbe dropped.) The default value, \"Cluster\", uses the standard behavior of\nrouting to all endpoints evenly (possibly modified by topology and other\nfeatures). Note that traffic sent to an External IP or LoadBalancer IP from\nwithin the cluster will always get \"Cluster\" semantics, but clients sending to\na NodePort from within the cluster may need to take traffic policy into account\nwhen picking a node."
                              type: "string"
                            healthCheckNodePort:
                              description: "healthCheckNodePort specifies the healthcheck nodePort for the service.\nThis only applies when type is set to LoadBalancer and\nexternalTrafficPolicy is set to Local. If a value is specified, is\nin-range, and is not in use, it will be used.  If not specified, a value\nwill be automatically allocated.  External systems (e.g. load-balancers)\ncan use this port to determine if a given node holds endpoints for this\nservice or not.  If this field is specified when creating a Service\nwhich does not need it, creation will fail. This field will be wiped\nwhen updating a Service to no longer need it (e.g. changing type).\nThis field cannot be updated once set."
                              format: "int32"
                              type: "integer"
                            internalTrafficPolicy:
                              description: "InternalTrafficPolicy describes how nodes distribute service traffic they\nreceive on the ClusterIP. If set to \"Local\", the proxy will assume that pods\nonly want to talk to endpoints of the service on the same node as the pod,\ndropping the traffic if there are no local endpoints. The default value,\n\"Cluster\", uses the standard behavior of routing to all endpoints evenly\n(possibly modified by topology and other features)."
                              type: "string"
                            ipFamilies:
                              description: "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\nservice. This field is usually assigned automatically based on cluster\nconfiguration and the ipFamilyPolicy field. If this field is specified\nmanually, the requested family is available in the cluster,\nand ipFamilyPolicy allows it, it will be used; otherwise creation of\nthe service will fail. This field is conditionally mutable: it allows\nfor adding or removing a secondary IP family, but it does not allow\nchanging the primary IP family of the Service. Valid values are \"IPv4\"\nand \"IPv6\".  This field only applies to Services of types ClusterIP,\nNodePort, and LoadBalancer, and does apply to \"headless\" services.\nThis field will be wiped when updating a Service to type ExternalName.\n\n\nThis field may hold a maximum of two entries (dual-stack families, in\neither order).  These families must correspond to the values of the\nclusterIPs field, if specified. Both clusterIPs and ipFamilies are\ngoverned by the ipFamilyPolicy field."
                              items:
                                description: "IPFamily represents the IP Family (IPv4 or IPv6). This type is used\nto express the family of an IP expressed by a type (e.g. service.spec.ipFamilies)."
                                type: "string"
                              type: "array"
                              x-kubernetes-list-type: "atomic"
                            ipFamilyPolicy:
                              description: "IPFamilyPolicy represents the dual-stack-ness requested or required by\nthis Service. If there is no value provided, then this field will be set\nto SingleStack. Services can be \"SingleStack\" (a single IP family),\n\"PreferDualStack\" (two IP families on dual-stack configured clusters or\na single IP family on single-stack clusters), or \"RequireDualStack\"\n(two IP families on dual-stack configured clusters, otherwise fail). The\nipFamilies and clusterIPs fields depend on the value of this field. This\nfield will be wiped when updating a service to type ExternalName."
                              type: "string"
                            loadBalancerClass:
                              description: "loadBalancerClass is the class of the load balancer implementation this Service belongs to.\nIf specified, the value of this field must be a label-style identifier, with an optional prefix,\ne.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users.\nThis field can only be set when the Service type is 'LoadBalancer'. If not set, the default load\nbalancer implementation is used, today this is typically done through the cloud provider integration,\nbut should apply for any default implementation. If set, it is assumed that a load balancer\nimplementation is watching for Services with a matching class. Any default load balancer\nimplementation (e.g. cloud providers) should ignore Services that set this field.\nThis field can only be set when creating or updating a Service to type 'LoadBalancer'.\nOnce set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type."
                              type: "string"
                            loadBalancerIP:
                              description: "Only applies to Service Type: LoadBalancer.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.\nDeprecated: This field was under-specified and its meaning varies across implementations.\nUsing it is non-portable and it may not support dual-stack.\nUsers are encouraged to use implementation-specific annotations when available."
                              type: "string"
                            loadBalancerSourceRanges:
                              description: "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
                              items:
                                type: "string"
                              type: "array"
                            sessionAffinity:
                              description: "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                              type: "string"
                            sessionAffinityConfig:
                              description: "sessionAffinityConfig contains the configurations of session affinity."
                              properties:
                                clientIP:
                                  description: "clientIP contains the configurations of Client IP based session affinity."
                                  properties:
                                    timeoutSeconds:
                                      description: "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours)."
                                      format: "int32"
                                      type: "integer"
                                  type: "object"
                              type: "object"
                            type:
                              description: "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing\nto endpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object or\nEndpointSlice objects. If clusterIP is \"None\", no virtual IP is\nallocated and the endpoints are published as a set of endpoints rather\nthan a virtual IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the same endpoints as the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an external load-balancer\n(if supported in the current cloud) which routes to the same endpoints\nas the clusterIP.\n\"ExternalName\" aliases this service to the specified externalName.\nSeveral other fields do not apply to ExternalName services.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types"
                              type: "string"
                          type: "object"
                      type: "object"
                    exposedFeatureServiceType:
                      default: "NodePort"
                      description: "DEPRECATED - by exposedFeatureServiceTemplate.\nExposedFeatureServiceType defines whether to create a node port or load balancer service.\nWhen using a LoadBalancer service type, TLS and dynamic DNS must also be enabled.\nThis field must be one of \"NodePort\" or \"LoadBalancer\", defaulting to \"NodePort\"."
                      enum:
                        - "NodePort"
                        - "LoadBalancer"
                      type: "string"
                    exposedFeatureTrafficPolicy:
                      description: "DEPRECATED  - by exposedFeatureServiceTemplate.\nExposedFeatureTrafficPolicy defines how packets should be routed from a load balancer\nservice to a Couchbase pod.  When local, traffic is routed directly to the pod.  When\ncluster, traffic is routed to any node, then forwarded on.  While cluster routing may be\nslower, there are some situations where it is required for connectivity.  This field\nmust be either \"Cluster\" or \"Local\", defaulting to \"Local\","
                      enum:
                        - "Cluster"
                        - "Local"
                      type: "string"
                    exposedFeatures:
                      description: "ExposedFeatures is a list of Couchbase features to expose when using a networking\nmodel that exposes the Couchbase cluster externally to Kubernetes.  This field also\ntriggers the creation of per-pod services used by clients to connect to the Couchbase\ncluster.  When admin, only the administrator port is exposed, allowing remote\nadministration.  When xdcr, only the services required for remote replication are exposed.\nThe xdcr feature is only required when the cluster is the destination of an XDCR\nreplication.  When client, all services are exposed as required for client SDK operation.\nThis field may contain any of \"admin\", \"xdcr\" and \"client\".  Each feature may only be\nincluded once."
                      items:
                        enum:
                          - "admin"
                          - "xdcr"
                          - "client"
                          - "backup"
                        type: "string"
                      type: "array"
                      x-kubernetes-list-type: "set"
                    loadBalancerSourceRanges:
                      description: "DEPRECATED - by adminConsoleServiceTemplate and exposedFeatureServiceTemplate.\nLoadBalancerSourceRanges applies only when an exposed service is of type\nLoadBalancer and limits the source IP ranges that are allowed to use the\nservice.  Items must use IPv4 class-less interdomain routing (CIDR) notation\ne.g. 10.0.0.0/16."
                      items:
                        pattern: "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/\\d{1,2}$"
                        type: "string"
                      type: "array"
                    networkPlatform:
                      description: "NetworkPlatform is used to enable support for various networking\ntechnologies.  This field must be one of \"Istio\"."
                      enum:
                        - "Istio"
                      type: "string"
                    serviceAnnotations:
                      additionalProperties:
                        type: "string"
                      description: "DEPRECATED - by adminConsoleServiceTemplate and exposedFeatureServiceTemplate.\nServiceAnnotations allows services to be annotated with custom labels.\nOperator annotations are merged on top of these so have precedence as\nthey are required for correct operation."
                      type: "object"
                    tls:
                      description: "TLS defines the TLS configuration for the cluster including\nserver and client certificate configuration, and TLS security policies."
                      properties:
                        allowPlainTextCertReload:
                          default: false
                          description: "AllowPlainTextCertReload allows the reload of TLS certificates in plain text.\nThis option should only be enabled as a means to recover connectivity with\nserver in the event that any of the server certificates expire. When enabled\nthe Operator only attempts plain text cert reloading when expired certificates\nare detected."
                          type: "boolean"
                        cipherSuites:
                          description: "CipherSuites specifies a list of cipher suites for Couchbase server to select\nfrom when negotiating TLS handshakes with a client.  Suites are not validated\nby the Operator.  Run \"openssl ciphers -v\" in a Couchbase server pod to\ninterrogate supported values."
                          items:
                            type: "string"
                          type: "array"
                          x-kubernetes-list-type: "set"
                        clientCertificatePaths:
                          description: "ClientCertificatePaths defines where to look in client certificates in order\nto extract the user name."
                          items:
                            description: "ClientCertificatePath defines how to extract a username from a client ceritficate."
                            properties:
                              delimiter:
                                description: "Delimiter if specified allows a suffix to be stripped from the username, once\nextracted from the certificate path."
                                type: "string"
                              path:
                                description: "Path defines where in the X.509 specification to extract the username from.\nThis field must be either \"subject.cn\", \"san.uri\", \"san.dnsname\" or  \"san.email\"."
                                pattern: "^subject\\.cn|san\\.uri|san\\.dnsname|san\\.email$"
                                type: "string"
                              prefix:
                                description: "Prefix allows a prefix to be stripped from the username, once extracted from the\ncertificate path."
                                type: "string"
                            required:
                              - "path"
                            type: "object"
                          type: "array"
                        clientCertificatePolicy:
                          description: "ClientCertificatePolicy defines the client authentication policy to use.\nIf set, the Operator expects TLS configuration to contain a valid certificate/key pair\nfor the Administrator account."
                          enum:
                            - "enable"
                            - "mandatory"
                          type: "string"
                        nodeToNodeEncryption:
                          description: "NodeToNodeEncryption specifies whether to encrypt data between Couchbase nodes\nwithin the same cluster.  This may come at the expense of performance.  When\ncontrol plane only encryption is used, only cluster management traffic is encrypted\nbetween nodes.  When all, all traffic is encrypted, including database documents.\nWhen strict mode is used, it is the same as all, but also disables all plaintext\nports.  Strict mode is only available on Couchbase Server versions 7.1 and greater.\nNode to node encryption can only be used when TLS certificates are managed by the\nOperator.  This field must be either \"ControlPlaneOnly\", \"All\", or \"Strict\"."
                          enum:
                            - "ControlPlaneOnly"
                            - "All"
                            - "Strict"
                          type: "string"
                        passphrase:
                          description: "PassphraseConfig configures the passphrase key to use with encrypted certificates.\nThe passphrase may be registered with Couchbase Server using a local script or a\nrest endpoint. Private key encryption is only available on Couchbase Server\nversions 7.1 and greater."
                          properties:
                            rest:
                              description: "PassphraseRestConfig is the configuration to register a private key passphrase with a rest endpoint.\nWhen the private key is accessed, Couchbase Server attempts to extract the password by means of the\nspecified endpoint. The response status must be 200 and the response text must be the exact passphrase\nexcluding newlines and extraneous spaces."
                              properties:
                                addressFamily:
                                  default: "inet"
                                  description: "AddressFamily is the address family to use. By default inet (meaning IPV4) is used."
                                  enum:
                                    - "inet"
                                    - "inet6"
                                  type: "string"
                                headers:
                                  additionalProperties:
                                    type: "string"
                                  description: "Headers is a map of one or more key-value pairs to pass alongside the Get request."
                                  type: "object"
                                timeout:
                                  default: 5000
                                  description: "Timeout is  the number of milliseconds that must elapse before the call is timed out."
                                  format: "int64"
                                  type: "integer"
                                url:
                                  description: "URL is the endpoint to be called to retrieve the passphrase.\nURL will be called using the GET method and may use http/https protocol."
                                  type: "string"
                                verifyPeer:
                                  default: true
                                  description: "VerifyPeer ensures peer verification is performed when Https is used."
                                  type: "boolean"
                              required:
                                - "url"
                              type: "object"
                            script:
                              description: "PassphraseScriptConfig is the configuration to register a private key passphrase with a script.\nThe Operator auto-provisions the underlying script so this config simply provides a mechanism\nto perform the decryption of the Couchbase Private Key using a local script."
                              properties:
                                secret:
                                  description: "Secret is the secret containing the passphrase string. The secret is expected\nto contain \"passphrase\" key with the passphrase string as a value."
                                  type: "string"
                              required:
                                - "secret"
                              type: "object"
                          type: "object"
                        rootCAs:
                          description: "RootCAs defines a set of secrets that reside in this namespace that contain\nadditional CA certificates that should be installed in Couchbase.  The CA\ncertificates that are defined here are in addition to those defined for the\ncluster, optionally by couchbaseclusters.spec.networking.tls.secretSource, and\nthus should not be duplicated.  Each Secret referred to must be of well-known type\n\"kubernetes.io/tls\" and must contain one or more CA certificates under the key \"tls.crt\".\nMultiple root CA certificates are only supported on Couchbase Server 7.1 and greater,\nand not with legacy couchbaseclusters.spec.networking.tls.static configuration."
                          items:
                            type: "string"
                          type: "array"
                        secretSource:
                          description: "SecretSource enables the user to specify a secret conforming to the Kubernetes TLS\nsecret specification that is used for the Couchbase server certificate, and optionally\nthe Operator's client certificate, providing cert-manager compatibility without having\nto specify a separate root CA.  A server CA certificate must be supplied by one of the\nprovided methods. Certificates referred to must conform to the keys of well-known type\n\"kubernetes.io/tls\" with \"tls.crt\" and \"tls.key\". If the \"tls.key\" is an encrypted\nprivate key then the secret type can be the generic Opaque type since \"kubernetes.io/tls\"\ntype secrets cannot verify encrypted keys."
                          properties:
                            clientSecretName:
                              description: "ClientSecretName specifies the secret name, in the same namespace as the cluster,\nthe contains client TLS data.  The secret is expected to contain \"tls.crt\" and\n\"tls.key\" as per the Kubernetes.io/tls secret type."
                              type: "string"
                            serverSecretName:
                              description: "ServerSecretName specifies the secret name, in the same namespace as the cluster,\nthat contains server TLS data.  The secret is expected to contain \"tls.crt\" and\n\"tls.key\" as per the kubernetes.io/tls secret type.  It may also contain \"ca.crt\".\nOnly a single PEM formated x509 certificate can be provided to \"ca.crt\".\nThe single certificate may also bundle together multiple root CA certificates.\nMultiple root CA certificates are only supported on Couchbase Server 7.1 and greater."
                              type: "string"
                          required:
                            - "serverSecretName"
                          type: "object"
                        static:
                          description: "DEPRECATED - by couchbaseclusters.spec.networking.tls.secretSource.\nStatic enables user to generate static x509 certificates and keys,\nput them into Kubernetes secrets, and specify them here.  Static secrets\nare Couchbase specific, and follow no well-known standards."
                          properties:
                            operatorSecret:
                              description: "OperatorSecret is a secret name containing TLS certs used by operator to\ntalk securely to this cluster.  The secret must contain a CA certificate (data key\nca.crt).  If client authentication is enabled, then the secret must also contain\na client certificate chain (data key \"couchbase-operator.crt\") and private key\n(data key \"couchbase-operator.key\")."
                              type: "string"
                            serverSecret:
                              description: "ServerSecret is a secret name containing TLS certs used by each Couchbase member pod\nfor the communication between Couchbase server and its clients.  The secret must\ncontain a certificate chain (data key \"chain.pem\") and a private\nkey (data key \"pkey.key\").  The private key must be in the PKCS#1 RSA\nformat.  The certificate chain must have a required set of X.509v3 subject alternative\nnames for all cluster addressing modes.  See the Operator TLS documentation for more\ninformation."
                              type: "string"
                          type: "object"
                        tlsMinimumVersion:
                          default: "TLS1.2"
                          description: "TLSMinimumVersion specifies the minimum TLS version the Couchbase server can\nnegotiate with a client.  Must be one of TLS1.0, TLS1.1 TLS1.2 or TLS1.3,\ndefaulting to TLS1.2.  TLS1.3 is only valid for Couchbase Server 7.1.0 onward.\nTLS1.0 and TLS1.1 are not valid for Couchbase Server 7.6.0 onward."
                          enum:
                            - "TLS1.0"
                            - "TLS1.1"
                            - "TLS1.2"
                            - "TLS1.3"
                          type: "string"
                      type: "object"
                    waitForAddressReachable:
                      default: "10m"
                      description: "WaitForAddressReachable is used to set the timeout between when polling of\nexternal addresses is started, and when it is deemed a failure.  Polling of\nDNS name availability inherently dangerous due to negative caching, so prefer\nthe use of an initial `waitForAddressReachableDelay` to allow propagation."
                      type: "string"
                    waitForAddressReachableDelay:
                      default: "2m"
                      description: "WaitForAddressReachableDelay is used to defer operator checks that\nensure external addresses are reachable before new nodes are balanced\nin to the cluster.  This prevents negative DNS caching while waiting\nfor external-DDNS controllers to propagate addresses."
                      type: "string"
                  type: "object"
                onlineVolumeExpansionTimeoutInMins:
                  description: "OnlineVolumeExpansionTimeoutInMins must be provided as a retry mechanism with a timeout in minutes\nfor expanding volumes. This must only be provided, if EnableOnlineVolumeExpansion is set to true.\nValue must be between 0 and 30.\nIf no value is provided, then it defaults to 10 minutes."
                  maximum: 30.0
                  minimum: 0.0
                  type: "integer"
                paused:
                  description: "Paused is to pause the control of the operator for the Couchbase cluster.\nThis does not pause the cluster itself, instead stopping the operator from\ntaking any action."
                  type: "boolean"
                platform:
                  description: "Platform gives a hint as to what platform we are running on and how\nto configure services.  This field must be one of \"aws\", \"gke\" or \"azure\"."
                  enum:
                    - "aws"
                    - "gce"
                    - "azure"
                  type: "string"
                recoveryPolicy:
                  description: "RecoveryPolicy controls how aggressive the Operator is when recovering cluster\ntopology.  When PrioritizeDataIntegrity, the Operator will delegate failover\nexclusively to Couchbase server, relying on it to only allow recovery when safe to\ndo so.  When PrioritizeUptime, the Operator will wait for a period after the\nexpected auto-failover of the cluster, before forcefully failing-over the pods.\nThis may cause data loss, and is only expected to be used on clusters with ephemeral\ndata, where the loss of the pod means that the data is known to be unrecoverable.\nThis field must be either \"PrioritizeDataIntegrity\" or \"PrioritizeUptime\", defaulting\nto \"PrioritizeDataIntegrity\"."
                  enum:
                    - "PrioritizeDataIntegrity"
                    - "PrioritizeUptime"
                  type: "string"
                rollingUpgrade:
                  description: "When `spec.upgradeStrategy` is set to `RollingUpgrade` it will, by default, upgrade one pod\nat a time.  If this field is specified then that number can be increased."
                  properties:
                    maxUpgradable:
                      description: "MaxUpgradable allows the number of pods affected by an upgrade at any\none time to be increased.  By default a rolling upgrade will\nupgrade one pod at a time.  This field allows that limit to be removed.\nThis field must be greater than zero.\nThe smallest of `maxUpgradable` and `maxUpgradablePercent` takes precedence if\nboth are defined."
                      minimum: 1.0
                      type: "integer"
                    maxUpgradablePercent:
                      description: "MaxUpgradablePercent allows the number of pods affected by an upgrade at any\none time to be increased.  By default a rolling upgrade will\nupgrade one pod at a time.  This field allows that limit to be removed.\nThis field must be an integer percentage, e.g. \"10%\", in the range 1% to 100%.\nPercentages are relative to the total cluster size, and rounded down to\nthe nearest whole number, with a minimum of 1.  For example, a 10 pod\ncluster, and 25% allowed to upgrade, would yield 2.5 pods per iteration,\nrounded down to 2.\nThe smallest of `maxUpgradable` and `maxUpgradablePercent` takes precedence if\nboth are defined."
                      pattern: "^(100|[1-9][0-9]|[1-9])%$"
                      type: "string"
                  type: "object"
                security:
                  description: "Security defines Couchbase cluster security options such as the administrator\naccount username and password, and user RBAC settings."
                  properties:
                    adminSecret:
                      description: "AdminSecret is the name of a Kubernetes secret to use for administrator authentication.\nThe admin secret must contain the keys \"username\" and \"password\".  The password data\nmust be at least 6 characters in length, and not contain the any of the characters\n`()<>,;:\\\"/[]?={}`."
                      type: "string"
                    ldap:
                      description: "LDAP provides settings to authenticate and authorize LDAP users with Couchbase Server.\nWhen specified, the Operator keeps these settings in sync with Cocuhbase Server's\nLDAP configuration. Leave empty to manually manage LDAP configuration."
                      properties:
                        authenticationEnabled:
                          default: true
                          description: "AuthenticationEnabled allows users who attempt to access Couchbase Server without having been\nadded as local users to be authenticated against the specified LDAP Host(s)."
                          type: "boolean"
                        authorizationEnabled:
                          description: "AuthorizationEnabled allows authenticated LDAP users to be authorized with RBAC roles granted to\nany Couchbase Server group associated with the user."
                          type: "boolean"
                        bindDN:
                          description: "DN to use for searching users and groups synchronization. More info:\nhttps://docs.couchbase.com/server/current/manage/manage-security/configure-ldap.html"
                          type: "string"
                        bindSecret:
                          description: "BindSecret is the name of a Kubernetes secret to use containing password for LDAP user binding.\nThe bindSecret must have a key with the name \"password\" and a value which corresponds to the\npassword of the binding LDAP user."
                          type: "string"
                        cacert:
                          description: "DEPRECATED - Field is ignored, use tlsSecret.\nCA Certificate in PEM format to be used in LDAP server certificate validation.\nThis cert is the string form of the secret provided to `spec.tls.tlsSecret`."
                          type: "string"
                        cacheValueLifetime:
                          default: 30000
                          description: "Lifetime of values in cache in milliseconds. Default 300000 ms.  More info:\nhttps://docs.couchbase.com/server/current/manage/manage-security/configure-ldap.html"
                          format: "int64"
                          type: "integer"
                        encryption:
                          description: "Encryption determines how the connection with the LDAP server should be encrypted.\nEncryption may set as either StartTLSExtension, TLS, or false.\nWhen set to \"false\" then no verification of the LDAP hostname is performed.\nWhen Encryption is StartTLSExtension, or TLS is set then the default behavior is to\nuse the certificate already loaded into the Couchbase Cluster for certificate validation,\notherwise `ldap.tlsSecret` may be set to override The Couchbase certificate."
                          enum:
                            - "None"
                            - "StartTLSExtension"
                            - "TLS"
                          type: "string"
                        groupsQuery:
                          description: "LDAP query, to get the users' groups by username in RFC4516 format.  More info:\nhttps://docs.couchbase.com/server/current/manage/manage-security/configure-ldap.html"
                          type: "string"
                        hosts:
                          description: "List of LDAP hosts to provide authentication-support for Couchbase Server.\nHost name must be a valid IP address or DNS Name e.g openldap.default.svc, 10.0.92.147."
                          items:
                            type: "string"
                          minItems: 1
                          type: "array"
                        middleboxCompMode:
                          default: true
                          description: "Sets middlebox compatibility mode for LDAP. This option is only available on\nCouchbase Server 7.6.0+."
                          type: "boolean"
                        nestedGroupsEnabled:
                          description: "If enabled Couchbase server will try to recursively search for groups\nfor every discovered ldap group. groups_query will be user for the search.\nMore info:\nhttps://docs.couchbase.com/server/current/manage/manage-security/configure-ldap.html"
                          type: "boolean"
                        nestedGroupsMaxDepth:
                          default: 10
                          description: "Maximum number of recursive groups requests the server is allowed to perform.\nRequires NestedGroupsEnabled.  Values between 1 and 100: the default is 10.\nMore info:\nhttps://docs.couchbase.com/server/current/manage/manage-security/configure-ldap.html"
                          format: "int64"
                          maximum: 100.0
                          minimum: 1.0
                          type: "integer"
                        port:
                          default: 389
                          description: "LDAP port.\nThis is typically 389 for LDAP, and 636 for LDAPS."
                          type: "integer"
                        serverCertValidation:
                          description: "Whether server certificate validation be enabled."
                          type: "boolean"
                        tlsSecret:
                          description: "TLSSecret is the name of a Kubernetes secret to use explcitly for LDAP ca cert.\nIf TLSSecret is not provided, certificates found in `couchbaseclusters.spec.networking.tls.rootCAs`\nwill be used instead.\nIf provided, the secret must contain the ca to be used under the name \"ca.crt\"."
                          type: "string"
                        userDNMapping:
                          description: "User to distinguished name (DN) mapping. If none is specified,\nthe username is used as the user’s distinguished name.  More info:\nhttps://docs.couchbase.com/server/current/manage/manage-security/configure-ldap.html"
                          properties:
                            query:
                              description: "Query is the LDAP query to run to map from Couchbase user to LDAP distinguished name."
                              type: "string"
                            template:
                              description: "This field specifies list of templates to use for providing username to DN mapping.\nThe template may contain a placeholder specified as `%u` to represent the Couchbase\nuser who is attempting to gain access."
                              type: "string"
                          type: "object"
                      required:
                        - "bindSecret"
                        - "hosts"
                        - "port"
                      type: "object"
                    podSecurityContext:
                      description: "PodSecurityContext allows the configuration of the security context for all\nCouchbase server pods.  When using persistent volumes you may need to set\nthe fsGroup field in order to write to the volume.  For non-root clusters\nyou must also set runAsUser to 1000, corresponding to the Couchbase user\nin official container images.  More info:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                      properties:
                        fsGroup:
                          description: "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows."
                          format: "int64"
                          type: "integer"
                        fsGroupChangePolicy:
                          description: "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows."
                          type: "string"
                        runAsGroup:
                          description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows."
                          format: "int64"
                          type: "integer"
                        runAsNonRoot:
                          description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                          type: "boolean"
                        runAsUser:
                          description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows."
                          format: "int64"
                          type: "integer"
                        seLinuxOptions:
                          description: "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows."
                          properties:
                            level:
                              description: "Level is SELinux level label that applies to the container."
                              type: "string"
                            role:
                              description: "Role is a SELinux role label that applies to the container."
                              type: "string"
                            type:
                              description: "Type is a SELinux type label that applies to the container."
                              type: "string"
                            user:
                              description: "User is a SELinux user label that applies to the container."
                              type: "string"
                          type: "object"
                        seccompProfile:
                          description: "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows."
                          properties:
                            localhostProfile:
                              description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                              type: "string"
                            type:
                              description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                              type: "string"
                          required:
                            - "type"
                          type: "object"
                        supplementalGroups:
                          description: "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID, the fsGroup (if specified), and group memberships\ndefined in the container image for the uid of the container process. If unspecified,\nno additional groups are added to any container. Note that group memberships\ndefined in the container image for the uid of the container process are still effective,\neven if they are not included in this list.\nNote that this field cannot be set when spec.os.name is windows."
                          items:
                            format: "int64"
                            type: "integer"
                          type: "array"
                        sysctls:
                          description: "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows."
                          items:
                            description: "Sysctl defines a kernel parameter to be set"
                            properties:
                              name:
                                description: "Name of a property to set"
                                type: "string"
                              value:
                                description: "Value of a property to set"
                                type: "string"
                            required:
                              - "name"
                              - "value"
                            type: "object"
                          type: "array"
                        windowsOptions:
                          description: "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                          properties:
                            gmsaCredentialSpec:
                              description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                              type: "string"
                            gmsaCredentialSpecName:
                              description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                              type: "string"
                            hostProcess:
                              description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                              type: "boolean"
                            runAsUserName:
                              description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                              type: "string"
                          type: "object"
                      type: "object"
                    rbac:
                      description: "RBAC is the options provided for enabling and selecting RBAC User resources to manage."
                      properties:
                        managed:
                          description: "Managed defines whether RBAC is managed by us or the clients."
                          type: "boolean"
                        selector:
                          description: "Selector is a label selector used to list RBAC resources in the namespace\nthat are managed by the Operator."
                          properties:
                            matchExpressions:
                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              items:
                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                properties:
                                  key:
                                    description: "key is the label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                    type: "string"
                                  values:
                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                            matchLabels:
                              additionalProperties:
                                type: "string"
                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              type: "object"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    securityContext:
                      description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nUse securityContext.allowPrivilegeEscalation field to grant more privileges than its parent process.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                      properties:
                        allowPrivilegeEscalation:
                          description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                          type: "boolean"
                        capabilities:
                          description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                          properties:
                            add:
                              description: "Added capabilities"
                              items:
                                description: "Capability represent POSIX capabilities type"
                                type: "string"
                              type: "array"
                            drop:
                              description: "Removed capabilities"
                              items:
                                description: "Capability represent POSIX capabilities type"
                                type: "string"
                              type: "array"
                          type: "object"
                        privileged:
                          description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                          type: "boolean"
                        procMount:
                          description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                          type: "string"
                        readOnlyRootFilesystem:
                          description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                          type: "boolean"
                        runAsGroup:
                          description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                          format: "int64"
                          type: "integer"
                        runAsNonRoot:
                          description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                          type: "boolean"
                        runAsUser:
                          description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                          format: "int64"
                          type: "integer"
                        seLinuxOptions:
                          description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                          properties:
                            level:
                              description: "Level is SELinux level label that applies to the container."
                              type: "string"
                            role:
                              description: "Role is a SELinux role label that applies to the container."
                              type: "string"
                            type:
                              description: "Type is a SELinux type label that applies to the container."
                              type: "string"
                            user:
                              description: "User is a SELinux user label that applies to the container."
                              type: "string"
                          type: "object"
                        seccompProfile:
                          description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                          properties:
                            localhostProfile:
                              description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                              type: "string"
                            type:
                              description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                              type: "string"
                          required:
                            - "type"
                          type: "object"
                        windowsOptions:
                          description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                          properties:
                            gmsaCredentialSpec:
                              description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                              type: "string"
                            gmsaCredentialSpecName:
                              description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                              type: "string"
                            hostProcess:
                              description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                              type: "boolean"
                            runAsUserName:
                              description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                              type: "string"
                          type: "object"
                      type: "object"
                    uiSessionTimeout:
                      default: 0
                      description: "UISessionTimeout sets how long, in minutes, before a user is declared inactive\nand signed out from the Couchbase Server UI.\n0 represents no time out."
                      maximum: 16666.0
                      minimum: 0.0
                      type: "integer"
                  required:
                    - "adminSecret"
                  type: "object"
                securityContext:
                  description: "DEPRECATED - by spec.security.securityContext\nSecurityContext allows the configuration of the security context for all\nCouchbase server pods.  When using persistent volumes you may need to set\nthe fsGroup field in order to write to the volume.  For non-root clusters\nyou must also set runAsUser to 1000, corresponding to the Couchbase user\nin official container images.  More info:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                  properties:
                    fsGroup:
                      description: "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows."
                      format: "int64"
                      type: "integer"
                    fsGroupChangePolicy:
                      description: "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows."
                      type: "string"
                    runAsGroup:
                      description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows."
                      format: "int64"
                      type: "integer"
                    runAsNonRoot:
                      description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                      type: "boolean"
                    runAsUser:
                      description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows."
                      format: "int64"
                      type: "integer"
                    seLinuxOptions:
                      description: "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows."
                      properties:
                        level:
                          description: "Level is SELinux level label that applies to the container."
                          type: "string"
                        role:
                          description: "Role is a SELinux role label that applies to the container."
                          type: "string"
                        type:
                          description: "Type is a SELinux type label that applies to the container."
                          type: "string"
                        user:
                          description: "User is a SELinux user label that applies to the container."
                          type: "string"
                      type: "object"
                    seccompProfile:
                      description: "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows."
                      properties:
                        localhostProfile:
                          description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                          type: "string"
                        type:
                          description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                          type: "string"
                      required:
                        - "type"
                      type: "object"
                    supplementalGroups:
                      description: "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID, the fsGroup (if specified), and group memberships\ndefined in the container image for the uid of the container process. If unspecified,\nno additional groups are added to any container. Note that group memberships\ndefined in the container image for the uid of the container process are still effective,\neven if they are not included in this list.\nNote that this field cannot be set when spec.os.name is windows."
                      items:
                        format: "int64"
                        type: "integer"
                      type: "array"
                    sysctls:
                      description: "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows."
                      items:
                        description: "Sysctl defines a kernel parameter to be set"
                        properties:
                          name:
                            description: "Name of a property to set"
                            type: "string"
                          value:
                            description: "Value of a property to set"
                            type: "string"
                        required:
                          - "name"
                          - "value"
                        type: "object"
                      type: "array"
                    windowsOptions:
                      description: "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                      properties:
                        gmsaCredentialSpec:
                          description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                          type: "string"
                        gmsaCredentialSpecName:
                          description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                          type: "string"
                        hostProcess:
                          description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                          type: "boolean"
                        runAsUserName:
                          description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                          type: "string"
                      type: "object"
                  type: "object"
                serverGroups:
                  description: "ServerGroups define the set of availability zones you want to distribute\npods over, and construct Couchbase server groups for.  By default, most\ncloud providers will label nodes with the key \"topology.kubernetes.io/zone\",\nthe values associated with that key are used here to provide explicit\nscheduling by the Operator.  You may manually label nodes using the\n\"topology.kubernetes.io/zone\" key, to provide failure-domain\naware scheduling when none is provided for you.  Global server groups are\napplied to all server classes, and may be overridden on a per-server class\nbasis to give more control over scheduling and server groups."
                  items:
                    type: "string"
                  type: "array"
                  x-kubernetes-list-type: "set"
                servers:
                  description: "Servers defines server classes for the Operator to provision and manage.\nA server class defines what services are running and how many members make\nup that class.  Specifying multiple server classes allows the Operator to\nprovision clusters with Multi-Dimensional Scaling (MDS).  At least one server\nclass must be defined, and at least one server class must be running the data\nservice."
                  items:
                    properties:
                      autoscaleEnabled:
                        description: "AutoscaledEnabled defines whether the autoscaling feature is enabled for this class.\nWhen true, the Operator will create a CouchbaseAutoscaler resource for this\nserver class.  The CouchbaseAutoscaler implements the Kubernetes scale API and\ncan be controlled by the Kubernetes horizontal pod autoscaler (HPA)."
                        type: "boolean"
                      env:
                        description: "Env allows the setting of environment variables in the Couchbase server container."
                        items:
                          description: "EnvVar represents an environment variable present in a Container."
                          properties:
                            name:
                              description: "Name of the environment variable. Must be a C_IDENTIFIER."
                              type: "string"
                            value:
                              description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                              type: "string"
                            valueFrom:
                              description: "Source for the environment variable's value. Cannot be used if value is not empty."
                              properties:
                                configMapKeyRef:
                                  description: "Selects a key of a ConfigMap."
                                  properties:
                                    key:
                                      description: "The key to select."
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap or its key must be defined"
                                      type: "boolean"
                                  required:
                                    - "key"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                fieldRef:
                                  description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                  properties:
                                    apiVersion:
                                      description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                      type: "string"
                                    fieldPath:
                                      description: "Path of the field to select in the specified API version."
                                      type: "string"
                                  required:
                                    - "fieldPath"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                resourceFieldRef:
                                  description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                  properties:
                                    containerName:
                                      description: "Container name: required for volumes, optional for env vars"
                                      type: "string"
                                    divisor:
                                      anyOf:
                                        - type: "integer"
                                        - type: "string"
                                      description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: "Required: resource to select"
                                      type: "string"
                                  required:
                                    - "resource"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                secretKeyRef:
                                  description: "Selects a key of a secret in the pod's namespace"
                                  properties:
                                    key:
                                      description: "The key of the secret to select from.  Must be a valid secret key."
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret or its key must be defined"
                                      type: "boolean"
                                  required:
                                    - "key"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                          required:
                            - "name"
                          type: "object"
                        type: "array"
                      envFrom:
                        description: "EnvFrom allows the setting of environment variables in the Couchbase server container."
                        items:
                          description: "EnvFromSource represents the source of a set of ConfigMaps"
                          properties:
                            configMapRef:
                              description: "The ConfigMap to select from"
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the ConfigMap must be defined"
                                  type: "boolean"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            prefix:
                              description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                              type: "string"
                            secretRef:
                              description: "The Secret to select from"
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the Secret must be defined"
                                  type: "boolean"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        type: "array"
                      image:
                        description: "Image is the container image name that will be used to launch Couchbase\nserver instances in this server class. You cannot downgrade the Couchbase\nversion. Across spec.image and all server classes there can only be two\ndifferent Couchbase images. Updating this field to a value different than\nspec.image will cause an automatic upgrade of the server class. If it isn't\nspecified then the cluster image will be used."
                        pattern: "^(.*?(:\\d+)?/)?.*?/.*?(:.*?\\d+\\.\\d+\\.\\d+.*|@sha256:[0-9a-f]{64})$"
                        type: "string"
                      name:
                        description: "Name is a textual name for the server configuration and must be unique.\nThe name is used by the operator to uniquely identify a server class,\nand map pods back to an intended configuration."
                        type: "string"
                      pod:
                        description: "Pod defines a template used to create pod for each Couchbase server\ninstance.  Modifying pod metadata such as labels and annotations will\nupdate the pod in-place.  Any other modification will result in a cluster\nupgrade in order to fulfill the request. The Operator reserves the right\nto modify or replace any field.  More info:\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#pod-v1-core"
                        properties:
                          metadata:
                            description: "Standard objects metadata.  This is a curated version for use with Couchbase\nresource templates."
                            properties:
                              annotations:
                                additionalProperties:
                                  type: "string"
                                description: "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations"
                                type: "object"
                              labels:
                                additionalProperties:
                                  type: "string"
                                description: "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services. More info: http://kubernetes.io/docs/user-guide/labels"
                                type: "object"
                            type: "object"
                          spec:
                            description: "PodSpec is a description of a pod."
                            properties:
                              activeDeadlineSeconds:
                                description: "Optional duration in seconds the pod may be active on the node relative to\nStartTime before the system will actively try to mark it failed and kill associated containers.\nValue must be a positive integer."
                                format: "int64"
                                type: "integer"
                              affinity:
                                description: "If specified, the pod's scheduling constraints"
                                properties:
                                  nodeAffinity:
                                    description: "Describes node affinity scheduling rules for the pod."
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                        items:
                                          description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                          properties:
                                            preference:
                                              description: "A node selector term, associated with the corresponding weight."
                                              properties:
                                                matchExpressions:
                                                  description: "A list of node selector requirements by node's labels."
                                                  items:
                                                    description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                    properties:
                                                      key:
                                                        description: "The label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                        type: "string"
                                                      values:
                                                        description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchFields:
                                                  description: "A list of node selector requirements by node's fields."
                                                  items:
                                                    description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                    properties:
                                                      key:
                                                        description: "The label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                        type: "string"
                                                      values:
                                                        description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            weight:
                                              description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                              format: "int32"
                                              type: "integer"
                                          required:
                                            - "preference"
                                            - "weight"
                                          type: "object"
                                        type: "array"
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                        properties:
                                          nodeSelectorTerms:
                                            description: "Required. A list of node selector terms. The terms are ORed."
                                            items:
                                              description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                              properties:
                                                matchExpressions:
                                                  description: "A list of node selector requirements by node's labels."
                                                  items:
                                                    description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                    properties:
                                                      key:
                                                        description: "The label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                        type: "string"
                                                      values:
                                                        description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchFields:
                                                  description: "A list of node selector requirements by node's fields."
                                                  items:
                                                    description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                    properties:
                                                      key:
                                                        description: "The label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                        type: "string"
                                                      values:
                                                        description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            type: "array"
                                        required:
                                          - "nodeSelectorTerms"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                    type: "object"
                                  podAffinity:
                                    description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                        items:
                                          description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                          properties:
                                            podAffinityTerm:
                                              description: "Required. A pod affinity term, associated with the corresponding weight."
                                              properties:
                                                labelSelector:
                                                  description: "A label query over a set of resources, in this case pods."
                                                  properties:
                                                    matchExpressions:
                                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                      items:
                                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                        properties:
                                                          key:
                                                            description: "key is the label key that the selector applies to."
                                                            type: "string"
                                                          operator:
                                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                            type: "string"
                                                          values:
                                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                            items:
                                                              type: "string"
                                                            type: "array"
                                                        required:
                                                          - "key"
                                                          - "operator"
                                                        type: "object"
                                                      type: "array"
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: "string"
                                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                      type: "object"
                                                  type: "object"
                                                  x-kubernetes-map-type: "atomic"
                                                namespaceSelector:
                                                  description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                  properties:
                                                    matchExpressions:
                                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                      items:
                                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                        properties:
                                                          key:
                                                            description: "key is the label key that the selector applies to."
                                                            type: "string"
                                                          operator:
                                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                            type: "string"
                                                          values:
                                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                            items:
                                                              type: "string"
                                                            type: "array"
                                                        required:
                                                          - "key"
                                                          - "operator"
                                                        type: "object"
                                                      type: "array"
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: "string"
                                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                      type: "object"
                                                  type: "object"
                                                  x-kubernetes-map-type: "atomic"
                                                namespaces:
                                                  description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                topologyKey:
                                                  description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                  type: "string"
                                              required:
                                                - "topologyKey"
                                              type: "object"
                                            weight:
                                              description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                              format: "int32"
                                              type: "integer"
                                          required:
                                            - "podAffinityTerm"
                                            - "weight"
                                          type: "object"
                                        type: "array"
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                        items:
                                          description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                          properties:
                                            labelSelector:
                                              description: "A label query over a set of resources, in this case pods."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaceSelector:
                                              description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaces:
                                              description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                              items:
                                                type: "string"
                                              type: "array"
                                            topologyKey:
                                              description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                              type: "string"
                                          required:
                                            - "topologyKey"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                  podAntiAffinity:
                                    description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                        items:
                                          description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                          properties:
                                            podAffinityTerm:
                                              description: "Required. A pod affinity term, associated with the corresponding weight."
                                              properties:
                                                labelSelector:
                                                  description: "A label query over a set of resources, in this case pods."
                                                  properties:
                                                    matchExpressions:
                                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                      items:
                                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                        properties:
                                                          key:
                                                            description: "key is the label key that the selector applies to."
                                                            type: "string"
                                                          operator:
                                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                            type: "string"
                                                          values:
                                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                            items:
                                                              type: "string"
                                                            type: "array"
                                                        required:
                                                          - "key"
                                                          - "operator"
                                                        type: "object"
                                                      type: "array"
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: "string"
                                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                      type: "object"
                                                  type: "object"
                                                  x-kubernetes-map-type: "atomic"
                                                namespaceSelector:
                                                  description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                  properties:
                                                    matchExpressions:
                                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                      items:
                                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                        properties:
                                                          key:
                                                            description: "key is the label key that the selector applies to."
                                                            type: "string"
                                                          operator:
                                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                            type: "string"
                                                          values:
                                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                            items:
                                                              type: "string"
                                                            type: "array"
                                                        required:
                                                          - "key"
                                                          - "operator"
                                                        type: "object"
                                                      type: "array"
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: "string"
                                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                      type: "object"
                                                  type: "object"
                                                  x-kubernetes-map-type: "atomic"
                                                namespaces:
                                                  description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                topologyKey:
                                                  description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                  type: "string"
                                              required:
                                                - "topologyKey"
                                              type: "object"
                                            weight:
                                              description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                              format: "int32"
                                              type: "integer"
                                          required:
                                            - "podAffinityTerm"
                                            - "weight"
                                          type: "object"
                                        type: "array"
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                        items:
                                          description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                          properties:
                                            labelSelector:
                                              description: "A label query over a set of resources, in this case pods."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaceSelector:
                                              description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaces:
                                              description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                              items:
                                                type: "string"
                                              type: "array"
                                            topologyKey:
                                              description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                              type: "string"
                                          required:
                                            - "topologyKey"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                type: "object"
                              automountServiceAccountToken:
                                description: "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
                                type: "boolean"
                              dnsConfig:
                                description: "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy."
                                properties:
                                  nameservers:
                                    description: "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed."
                                    items:
                                      type: "string"
                                    type: "array"
                                  options:
                                    description: "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy."
                                    items:
                                      description: "PodDNSConfigOption defines DNS resolver options of a pod."
                                      properties:
                                        name:
                                          description: "Required."
                                          type: "string"
                                        value:
                                          type: "string"
                                      type: "object"
                                    type: "array"
                                  searches:
                                    description: "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              dnsPolicy:
                                description: "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'."
                                type: "string"
                              enableServiceLinks:
                                description: "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true."
                                type: "boolean"
                              hostIPC:
                                description: "Use the host's ipc namespace.\nOptional: Default to false."
                                type: "boolean"
                              hostNetwork:
                                description: "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false."
                                type: "boolean"
                              hostPID:
                                description: "Use the host's pid namespace.\nOptional: Default to false."
                                type: "boolean"
                              hostUsers:
                                description: "Use the host's user namespace.\nOptional: Default to true.\nIf set to true or not present, the pod will be run in the host user namespace, useful\nfor when the pod needs a feature only available to the host user namespace, such as\nloading a kernel module with CAP_SYS_MODULE.\nWhen set to false, a new userns is created for the pod. Setting false is useful for\nmitigating container breakout vulnerabilities even allowing users to run their\ncontainers as root without actually having root privileges on the host.\nThis field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature."
                                type: "boolean"
                              imagePullSecrets:
                                description: "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.\nIf specified, these secrets will be passed to individual puller implementations for them to use.\nMore info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
                                items:
                                  description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                type: "array"
                              nodeName:
                                description: "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements."
                                type: "string"
                              nodeSelector:
                                additionalProperties:
                                  type: "string"
                                description: "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              os:
                                description: "Specifies the OS of the containers in the pod.\nSome pod and container fields are restricted if this is set.\n\n\nIf the OS field is set to linux, the following fields must be unset:\n-securityContext.windowsOptions\n\n\nIf the OS field is set to windows, following fields must be unset:\n- spec.hostPID\n- spec.hostIPC\n- spec.hostUsers\n- spec.securityContext.seLinuxOptions\n- spec.securityContext.seccompProfile\n- spec.securityContext.fsGroup\n- spec.securityContext.fsGroupChangePolicy\n- spec.securityContext.sysctls\n- spec.shareProcessNamespace\n- spec.securityContext.runAsUser\n- spec.securityContext.runAsGroup\n- spec.securityContext.supplementalGroups\n- spec.containers[*].securityContext.seLinuxOptions\n- spec.containers[*].securityContext.seccompProfile\n- spec.containers[*].securityContext.capabilities\n- spec.containers[*].securityContext.readOnlyRootFilesystem\n- spec.containers[*].securityContext.privileged\n- spec.containers[*].securityContext.allowPrivilegeEscalation\n- spec.containers[*].securityContext.procMount\n- spec.containers[*].securityContext.runAsUser\n- spec.containers[*].securityContext.runAsGroup"
                                properties:
                                  name:
                                    description: "Name is the name of the operating system. The currently supported values are linux and windows.\nAdditional value may be defined in future and can be one of:\nhttps://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration\nClients should expect to handle additional values and treat unrecognized values in this field as os: null"
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              overhead:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.\nThis field will be autopopulated at admission time by the RuntimeClass admission controller. If\nthe RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.\nThe RuntimeClass admission controller will reject Pod create requests which have the overhead already\nset. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value\ndefined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md"
                                type: "object"
                              preemptionPolicy:
                                description: "PreemptionPolicy is the Policy for preempting pods with lower priority.\nOne of Never, PreemptLowerPriority.\nDefaults to PreemptLowerPriority if unset."
                                type: "string"
                              priority:
                                description: "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority."
                                format: "int32"
                                type: "integer"
                              priorityClassName:
                                description: "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault."
                                type: "string"
                              resourceClaims:
                                description: "ResourceClaims defines which ResourceClaims must be allocated\nand reserved before the Pod is allowed to start. The resources\nwill be made available to those containers which consume them\nby name.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable."
                                items:
                                  description: "PodResourceClaim references exactly one ResourceClaim through a ClaimSource.\nIt adds a name to it that uniquely identifies the ResourceClaim inside the Pod.\nContainers that need access to the ResourceClaim reference it with this name."
                                  properties:
                                    name:
                                      description: "Name uniquely identifies this resource claim inside the pod.\nThis must be a DNS_LABEL."
                                      type: "string"
                                    source:
                                      description: "Source describes where to find the ResourceClaim."
                                      properties:
                                        resourceClaimName:
                                          description: "ResourceClaimName is the name of a ResourceClaim object in the same\nnamespace as this pod."
                                          type: "string"
                                        resourceClaimTemplateName:
                                          description: "ResourceClaimTemplateName is the name of a ResourceClaimTemplate\nobject in the same namespace as this pod.\n\n\nThe template will be used to create a new ResourceClaim, which will\nbe bound to this pod. When this pod is deleted, the ResourceClaim\nwill also be deleted. The pod name and resource name, along with a\ngenerated component, will be used to form a unique name for the\nResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\n\nThis field is immutable and no changes will be made to the\ncorresponding ResourceClaim by the control plane after creating the\nResourceClaim."
                                          type: "string"
                                      type: "object"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              runtimeClassName:
                                description: "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class"
                                type: "string"
                              schedulerName:
                                description: "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler."
                                type: "string"
                              schedulingGates:
                                description: "SchedulingGates is an opaque list of values that if specified will block scheduling the pod.\nIf schedulingGates is not empty, the pod will stay in the SchedulingGated state and the\nscheduler will not attempt to schedule the pod.\n\n\nSchedulingGates can only be set at pod creation time, and be removed only afterwards.\n\n\nThis is a beta feature enabled by the PodSchedulingReadiness feature gate."
                                items:
                                  description: "PodSchedulingGate is associated to a Pod to guard its scheduling."
                                  properties:
                                    name:
                                      description: "Name of the scheduling gate.\nEach scheduling gate must have a unique name field."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              serviceAccount:
                                description: "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.\nDeprecated: Use serviceAccountName instead."
                                type: "string"
                              serviceAccountName:
                                description: "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
                                type: "string"
                              setHostnameAsFQDN:
                                description: "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).\nIn Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).\nIn Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN.\nIf a pod does not have FQDN, this has no effect.\nDefault to false."
                                type: "boolean"
                              shareProcessNamespace:
                                description: "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false."
                                type: "boolean"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds."
                                format: "int64"
                                type: "integer"
                              tolerations:
                                description: "If specified, the pod's tolerations."
                                items:
                                  description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                                  properties:
                                    effect:
                                      description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                      type: "string"
                                    key:
                                      description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                      type: "string"
                                    operator:
                                      description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                      type: "string"
                                    tolerationSeconds:
                                      description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                      format: "int64"
                                      type: "integer"
                                    value:
                                      description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                      type: "string"
                                  type: "object"
                                type: "array"
                              topologySpreadConstraints:
                                description: "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed."
                                items:
                                  description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                                  properties:
                                    labelSelector:
                                      description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    matchLabelKeys:
                                      description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    maxSkew:
                                      description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                                      format: "int32"
                                      type: "integer"
                                    minDomains:
                                      description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default)."
                                      format: "int32"
                                      type: "integer"
                                    nodeAffinityPolicy:
                                      description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                      type: "string"
                                    nodeTaintsPolicy:
                                      description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                      type: "string"
                                    topologyKey:
                                      description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                                      type: "string"
                                    whenUnsatisfiable:
                                      description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                                      type: "string"
                                  required:
                                    - "maxSkew"
                                    - "topologyKey"
                                    - "whenUnsatisfiable"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "topologyKey"
                                  - "whenUnsatisfiable"
                                x-kubernetes-list-type: "map"
                            type: "object"
                        type: "object"
                      resources:
                        description: "Resources are the resource requirements for the Couchbase server container.\nThis field overrides any automatic allocation as defined by\n`spec.autoResourceAllocation`."
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                            items:
                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                              properties:
                                name:
                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                  type: "string"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "name"
                            x-kubernetes-list-type: "map"
                          limits:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: "object"
                          requests:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: "object"
                        type: "object"
                      serverGroups:
                        description: "ServerGroups define the set of availability zones you want to distribute\npods over, and construct Couchbase server groups for.  By default, most\ncloud providers will label nodes with the key \"topology.kubernetes.io/zone\",\nthe values associated with that key are used here to provide explicit\nscheduling by the Operator.  You may manually label nodes using the\n\"topology.kubernetes.io/zone\" key, to provide failure-domain\naware scheduling when none is provided for you.  Global server groups are\napplied to all server classes, and may be overridden on a per-server class\nbasis to give more control over scheduling and server groups."
                        items:
                          type: "string"
                        type: "array"
                        x-kubernetes-list-type: "set"
                      services:
                        description: "Services is the set of Couchbase services to run on this server class.\nAt least one class must contain the data service.  The field may contain\nany of \"data\", \"index\", \"query\", \"search\", \"eventing\" or \"analytics\".\nEach service may only be specified once."
                        items:
                          description: "Supported services"
                          enum:
                            - "admin"
                            - "data"
                            - "index"
                            - "query"
                            - "search"
                            - "eventing"
                            - "analytics"
                          type: "string"
                        type: "array"
                        x-kubernetes-list-type: "set"
                      size:
                        description: "Size is the expected requested of the server class.  This field\nmust be greater than or equal to 1."
                        minimum: 1.0
                        type: "integer"
                      volumeMounts:
                        description: "VolumeMounts define persistent volume claims to attach to pod."
                        properties:
                          analytics:
                            description: "AnalyticsClaims are persistent volumes that encompass analytics storage associated\nwith the analytics service.  Analytics claims can only be used on server classes\nrunning the analytics service, and must be used in conjunction with the default claim.\nThis field allows the analytics service to use different storage media (e.g. SSD), and\nscale horizontally, to improve performance of this service.  This field references a volume\nclaim template name as defined in \"spec.volumeClaimTemplates\"."
                            items:
                              type: "string"
                            type: "array"
                          data:
                            description: "DataClaim is a persistent volume that encompasses key/value storage associated\nwith the data service.  The data claim can only be used on server classes running\nthe data service, and must be used in conjunction with the default claim.  This\nfield allows the data service to use different storage media (e.g. SSD) to\nimprove performance of this service.  This field references a volume\nclaim template name as defined in \"spec.volumeClaimTemplates\"."
                            type: "string"
                          default:
                            description: "DefaultClaim is a persistent volume that encompasses all Couchbase persistent\ndata, including document storage, indexes and logs.  The default volume can be\nused with any server class.  Use of the default claim allows the Operator to\nrecover failed pods from the persistent volume far quicker than if the pod were\nusing ephemeral storage.  The default claim cannot be used at the same time\nas the logs claim within the same server class.  This field references a volume\nclaim template name as defined in \"spec.volumeClaimTemplates\"."
                            type: "string"
                          index:
                            description: "IndexClaim s a persistent volume that encompasses index storage associated\nwith the index and search services.  The index claim can only be used on server classes running\nthe index or search services, and must be used in conjunction with the default claim.  This\nfield allows the index and/or search service to use different storage media (e.g. SSD) to\nimprove performance of this service. This field references a volume\nclaim template name as defined in \"spec.volumeClaimTemplates\".\nWhilst this references index primarily, note that the full text search (FTS) service\nalso uses this same mount."
                            type: "string"
                          logs:
                            description: "LogsClaim is a persistent volume that encompasses only Couchbase server logs to aid\nwith supporting the product.  The logs claim can only be used on server classes running\nthe following services: query, search & eventing.  The logs claim cannot be used at the same\ntime as the default claim within the same server class.  This field references a volume\nclaim template name as defined in \"spec.volumeClaimTemplates\".\nWhilst the logs claim can be used with the search service, the recommendation is to use the\ndefault claim for these. The reason for this is that a failure of these nodes will require\nindexes to be rebuilt and subsequent performance impact."
                            type: "string"
                        type: "object"
                    required:
                      - "name"
                      - "services"
                      - "size"
                    type: "object"
                  minItems: 1
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "name"
                  x-kubernetes-list-type: "map"
                softwareUpdateNotifications:
                  description: "SoftwareUpdateNotifications enables software update notifications in the UI.\nWhen enabled, the UI will alert when a Couchbase server upgrade is available."
                  type: "boolean"
                upgradeProcess:
                  description: "UpgradeProcess defines the process that will be used when performing a couchbase cluster upgrade.\nWhen SwapRebalance is requested (default), pods will be upgraded using either a RollingUpgrade or\nImmediateUpgrade (determined by UpgradeStrategy). When InPlaceUpgrade is requested, the operator will\nperform an in-place upgrade on a best effort basis. InPlaceUpgrade cannot be used if the UpgradeStrategy\nis set to ImmediateUpgrade."
                  enum:
                    - "SwapRebalance"
                    - "DeltaRecovery"
                    - "InPlaceUpgrade"
                  type: "string"
                upgradeStrategy:
                  description: "UpgradeStrategy controls how aggressive the Operator is when performing a cluster\nupgrade.  When a rolling upgrade is requested, pods are upgraded one at a time.  This\nstrategy is slower, however less disruptive.  When an immediate upgrade strategy is\nrequested, all pods are upgraded at the same time.  This strategy is faster, but more\ndisruptive.  This field must be either \"RollingUpgrade\" or \"ImmediateUpgrade\", defaulting\nto \"RollingUpgrade\"."
                  enum:
                    - "RollingUpgrade"
                    - "ImmediateUpgrade"
                  type: "string"
                volumeClaimTemplates:
                  description: "VolumeClaimTemplates define the desired characteristics of a volume\nthat can be requested/claimed by a pod, for example the storage class to\nuse and the volume size.  Volume claim templates are referred to by name\nby server class volume mount configuration."
                  items:
                    properties:
                      metadata:
                        description: "Standard objects metadata.  This is a curated version for use with Couchbase\nresource templates."
                        properties:
                          annotations:
                            additionalProperties:
                              type: "string"
                            description: "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations"
                            type: "object"
                          labels:
                            additionalProperties:
                              type: "string"
                            description: "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services. More info: http://kubernetes.io/docs/user-guide/labels"
                            type: "object"
                          name:
                            description: "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      spec:
                        description: "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
                        properties:
                          accessModes:
                            description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                            items:
                              type: "string"
                            type: "array"
                          dataSourceRef:
                            description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                            properties:
                              apiGroup:
                                description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                type: "string"
                              kind:
                                description: "Kind is the type of resource being referenced"
                                type: "string"
                              name:
                                description: "Name is the name of resource being referenced"
                                type: "string"
                              namespace:
                                description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                type: "string"
                            required:
                              - "kind"
                              - "name"
                            type: "object"
                          resources:
                            description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          selector:
                            description: "selector is a label query over volumes to consider for binding."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          storageClassName:
                            description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            type: "string"
                          volumeMode:
                            description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                            type: "string"
                          volumeName:
                            description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                            type: "string"
                        type: "object"
                    required:
                      - "metadata"
                      - "spec"
                    type: "object"
                  type: "array"
                xdcr:
                  description: "XDCR defines whether the Operator should manage XDCR, remote clusters and how\nto lookup replication resources."
                  properties:
                    managed:
                      description: "Managed defines whether XDCR is managed by the operator or not."
                      type: "boolean"
                    remoteClusters:
                      description: "RemoteClusters is a set of named remote clusters to establish replications to."
                      items:
                        description: "RemoteCluster is a reference to a remote cluster for XDCR."
                        properties:
                          authenticationSecret:
                            description: "AuthenticationSecret is a secret used to authenticate when establishing a\nremote connection.  It is only required when not using mTLS.  The secret\nmust contain a username (secret key \"username\") and password (secret key\n\"password\")."
                            type: "string"
                          hostname:
                            description: "Hostname is the connection string to use to connect the remote cluster.  To use IPv6, place brackets (`[`, `]`) around the IPv6 value."
                            pattern: "^((couchbase|http)(s)?(://))?((\\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|$)){4}\\b)|((([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]))|\\[(\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*\\]))(:[0-9]{0,5})?(\\\\{0,1}\\?network=[^&]+)?$"
                            type: "string"
                          name:
                            description: "Name of the remote cluster.\nNote that, -operator-managed is added as suffix by operator automatically\nto the name in order to diffrentiate from non operator managed remote clusters."
                            type: "string"
                          replications:
                            description: "Replications are replication streams from this cluster to the remote one.\nThis field defines how to look up CouchbaseReplication resources.  By default\nany CouchbaseReplication resources in the namespace will be considered."
                            properties:
                              selector:
                                description: "Selector allows CouchbaseReplication resources to be filtered\nbased on labels."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                          tls:
                            description: "TLS if specified references a resource containing the necessary certificate\ndata for an encrypted connection."
                            properties:
                              secret:
                                description: "Secret references a secret containing the CA certificate (data key \"ca\"),\nand optionally a client certificate (data key \"certificate\") and key\n(data key \"key\")."
                                type: "string"
                            required:
                              - "secret"
                            type: "object"
                          uuid:
                            description: "UUID of the remote cluster.  The UUID of a CouchbaseCluster resource\nis advertised in the status.clusterId field of the resource."
                            pattern: "^[0-9a-f]{32}$"
                            type: "string"
                        required:
                          - "hostname"
                          - "name"
                          - "uuid"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "name"
                      x-kubernetes-list-type: "map"
                  type: "object"
              required:
                - "image"
                - "security"
                - "servers"
              type: "object"
            status:
              description: "ClusterStatus defines any read-only status fields for the Couchbase server cluster."
              properties:
                allocations:
                  description: "Allocations shows memory allocations within server classes."
                  items:
                    description: "ServerClassStatus summarizes memory allocations to make configuration easier."
                    properties:
                      allocatedMemory:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "AllocatedMemory defines the total memory allocated for constrained Couchbase services.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      allocatedMemoryPercent:
                        description: "AllocatedMemoryPercent is set when memory resources are requested and define how much of\nthe requested memory is allocated to constrained Couchbase services."
                        type: "integer"
                      analyticsServiceAllocation:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "AnalyticsServiceAllocation is set when the analytics service is enabled for this class and\ndefines how much memory this service consumes per pod.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      dataServiceAllocation:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "DataServiceAllocation is set when the data service is enabled for this class and\ndefines how much memory this service consumes per pod.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      eventingServiceAllocation:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "EventingServiceAllocation is set when the eventing service is enabled for this class and\ndefines how much memory this service consumes per pod.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      indexServiceAllocation:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "IndexServiceAllocation is set when the index service is enabled for this class and\ndefines how much memory this service consumes per pod.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      name:
                        description: "Name is the name of the server class defined in spec.servers"
                        type: "string"
                      requestedMemory:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "RequestedMemory, if set, defines the Kubernetes resource request for the server class.\nMore info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      searchServiceAllocation:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "SearchServiceAllocation is set when the search service is enabled for this class and\ndefines how much memory this service consumes per pod.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      unusedMemory:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        description: "UnusedMemory is set when memory resources are requested and is the difference between\nthe requestedMemory and allocatedMemory.  More info:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        type: "string"
                        x-kubernetes-int-or-string: true
                      unusedMemoryPercent:
                        description: "UnusedMemoryPercent is set when memory resources are requested and defines how much\nrequested memory is not allocated.  Couchbase server expects at least a 20% overhead."
                        type: "integer"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
                autoscalers:
                  description: "Autscalers describes all the autoscalers managed by the cluster."
                  items:
                    type: "string"
                  type: "array"
                buckets:
                  description: "Buckets describes all the buckets managed by the cluster."
                  items:
                    properties:
                      compressionMode:
                        description: "CompressionMode defines how documents are compressed."
                        type: "string"
                      conflictResolution:
                        description: "ConflictResolution is relevant for `couchbase` and `ephemeral` bucket types\nand indicates how to resolve conflicts when using multi-master XDCR."
                        type: "string"
                      enableFlush:
                        description: "EnableFlush is whether a client can delete all documents in a bucket."
                        type: "boolean"
                      enableIndexReplica:
                        description: "EnableIndexReplica is whether indexes against bucket documents are replicated."
                        type: "boolean"
                      evictionPolicy:
                        description: "EvictionPolicy is relevant for `couchbase` and `ephemeral` bucket types\nand indicates how documents are evicted from memory when it is exhausted."
                        type: "string"
                      ioPriority:
                        description: "IoPriority is `low` or `high` depending on the number of threads\nspawned for data processing."
                        type: "string"
                      memoryQuota:
                        description: "BucketMemoryQuota is the bucket memory quota in megabytes."
                        format: "int64"
                        type: "integer"
                      name:
                        description: "BucketName is the full name of the bucket."
                        type: "string"
                      password:
                        description: "BucketPassword will never be populated."
                        type: "string"
                      replicas:
                        description: "BucketReplicas is the number of data replicas."
                        type: "integer"
                      storageBackend:
                        description: "BucketStorageBackend is the storage backend of the bucket."
                        type: "string"
                      type:
                        description: "BucketType is the type of the bucket."
                        type: "string"
                    required:
                      - "compressionMode"
                      - "conflictResolution"
                      - "enableFlush"
                      - "enableIndexReplica"
                      - "evictionPolicy"
                      - "ioPriority"
                      - "memoryQuota"
                      - "name"
                      - "password"
                      - "replicas"
                      - "type"
                    type: "object"
                  type: "array"
                clusterId:
                  description: "ClusterID is the unique cluster UUID.  This is generated every time\na new cluster is created, so may vary over the lifetime of a cluster\nif it is recreated by disaster recovery mechanisms."
                  type: "string"
                conditions:
                  description: "Current service state of the Couchbase cluster."
                  items:
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        type: "string"
                      lastUpdateTime:
                        description: "Last time the condition status message updated."
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "Unique, one-word, CamelCase reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status is the status of the condition. Can be one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of condition."
                        enum:
                          - "Available"
                          - "Balanced"
                          - "ManageConfig"
                          - "Scaling"
                          - "ScalingUp"
                          - "ScalingDown"
                          - "Upgrading"
                          - "Hibernating"
                          - "Error"
                          - "AutoscaleReady"
                          - "Synchronized"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                controlPaused:
                  description: "ControlPaused indicates if the Operator has acknowledged and paused the\ncontrol of the cluster."
                  type: "boolean"
                currentVersion:
                  description: "CurrentVersion is the current Couchbase version.  This reflects the\nversion of the whole cluster, therefore during upgrade, it is only\nupdated when the upgrade has completed."
                  type: "string"
                groups:
                  description: "Groups describes all the groups managed by the cluster."
                  items:
                    type: "string"
                  type: "array"
                members:
                  description: "Members are the Couchbase members in the cluster."
                  properties:
                    ready:
                      description: "Ready are the Couchbase members that are clustered and ready to serve\nclient requests.  The member names are the same as the Couchbase pod names."
                      items:
                        type: "string"
                      type: "array"
                    unready:
                      description: "Unready are the Couchbase members not clustered or unready to serve\nclient requests.  The member names are the same as the Couchbase pod names."
                      items:
                        type: "string"
                      type: "array"
                  type: "object"
                size:
                  description: "Size is the current size of the cluster in terms of pods.  Individual\npod status conditions are listed in the members status."
                  type: "integer"
                users:
                  description: "Users describes all the users managed by the cluster."
                  items:
                    type: "string"
                  type: "array"
              required:
                - "size"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
