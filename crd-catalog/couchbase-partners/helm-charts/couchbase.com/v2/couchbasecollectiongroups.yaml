apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    config.couchbase.com/version: "2.7.0"
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "couchbasecollectiongroups.couchbase.com"
spec:
  group: "couchbase.com"
  names:
    kind: "CouchbaseCollectionGroup"
    listKind: "CouchbaseCollectionGroupList"
    plural: "couchbasecollectiongroups"
    singular: "couchbasecollectiongroup"
  scope: "Namespaced"
  versions:
    - name: "v2"
      schema:
        openAPIV3Schema:
          description: "CouchbaseCollectionGroup represent the finest grained size of data storage in Couchbase.\nCollections contain all documents and indexes in the system.  Collections also form\nthe finest grain basis for role-based access control (RBAC) and cross-datacenter\nreplication (XDCR).  In order to be considered by the Operator, every collection group\nmust be referenced by a `CouchbaseScope` or `CouchbaseScopeGroup` resource.  Unlike the\nCouchbaseCollection resource, a collection group represents multiple collections, with\ncommon configuration parameters, to be expressed as a single resource, minimizing required\nconfiguration and Kubernetes API traffic.  It also forms the basis of Couchbase RBAC\nsecurity boundaries."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Spec defines the desired state of the resource."
              properties:
                maxTTL:
                  description: "MaxTTL defines how long a document is permitted to exist for, without\nmodification, until it is automatically deleted.  This field takes precedence over\nany TTL defined at the bucket level.  This is a default, and maximum\ntime-to-live and may be set to a lower value by the client.  If the client specifies\na higher value, then it is truncated to the maximum durability.  Documents are\nremoved by Couchbase, after they have expired, when either accessed, the expiry\npager is run, or the bucket is compacted.  When set to 0, then documents are not\nexpired by default.  This field must be a duration in the range 0-2147483648s,\ndefaulting to 0.  More info:\nhttps://golang.org/pkg/time/#ParseDuration"
                  type: "string"
                names:
                  description: "Names specifies the names of the collections.  Unlike CouchbaseCollection, which\nspecifies a single collection, a collection group specifies multiple, and the\ncollection group must specify at least one collection name.\nAny collection names specified must be unique.\nCollection names must be 1-251 characters in length, contain only [a-zA-Z0-9_-%]\nand not start with either _ or %."
                  items:
                    description: "ScopeOrCollectionName is a generic type to capture a valid\nscope or collection name.  These must consist of 1-251 characters,\ninclude only A-Z, a-z, 0-9, -, _ or %, and must not start with\n_ (which is an internal marker) or % (which is probably an escape\ncharacter in language X)."
                    maxLength: 251
                    minLength: 1
                    pattern: "^[a-zA-Z0-9\\-][a-zA-Z0-9\\-%_]{0,250}$"
                    type: "string"
                  type: "array"
                  x-kubernetes-list-type: "set"
              required:
                - "names"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
