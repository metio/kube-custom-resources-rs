apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    helm.sh/resource-policy: "keep"
  name: "secretclasses.secrets.stackable.tech"
spec:
  group: "secrets.stackable.tech"
  names:
    categories: []
    kind: "SecretClass"
    plural: "secretclasses"
    shortNames: []
    singular: "secretclass"
  scope: "Cluster"
  versions:
    - additionalPrinterColumns: []
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Auto-generated derived type for SecretClassSpec via `CustomResource`"
          properties:
            spec:
              description: "A [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) is a cluster-global Kubernetes resource that defines a category of secrets that the Secret Operator knows how to provision."
              properties:
                backend:
                  description: "Each SecretClass is associated with a single [backend](https://docs.stackable.tech/home/nightly/secret-operator/secretclass#backend), which dictates the mechanism for issuing that kind of Secret."
                  oneOf:
                    - required:
                        - "k8sSearch"
                    - required:
                        - "autoTls"
                    - required:
                        - "experimentalCertManager"
                    - required:
                        - "kerberosKeytab"
                  properties:
                    autoTls:
                      description: "The [`autoTls` backend](https://docs.stackable.tech/home/nightly/secret-operator/secretclass#backend-autotls) issues a TLS certificate signed by the Secret Operator. The certificate authority can be provided by the administrator, or managed automatically by the Secret Operator.\n\nA new certificate and keypair will be generated and signed for each Pod, keys or certificates are never reused."
                      properties:
                        ca:
                          description: "Configures the certificate authority used to issue Pod certificates."
                          properties:
                            autoGenerate:
                              default: false
                              description: "Whether the certificate authority should be managed by Secret Operator, including being generated if it does not already exist."
                              type: "boolean"
                            caCertificateLifetime:
                              default: "365d"
                              description: "The lifetime of each generated certificate authority.\n\nShould always be more than double `maxCertificateLifetime`.\n\nIf `autoGenerate: true` then the Secret Operator will prepare a new CA certificate the old CA approaches expiration. If `autoGenerate: false` then the Secret Operator will log a warning instead."
                              type: "string"
                            secret:
                              description: "Reference (name and namespace) to a Kubernetes Secret object where the CA certificate and key is stored in the keys `ca.crt` and `ca.key` respectively."
                              properties:
                                name:
                                  description: "Name of the Secret being referred to."
                                  type: "string"
                                namespace:
                                  description: "Namespace of the Secret being referred to."
                                  type: "string"
                              required:
                                - "name"
                                - "namespace"
                              type: "object"
                          required:
                            - "secret"
                          type: "object"
                        maxCertificateLifetime:
                          default: "15d"
                          description: "Maximum lifetime the created certificates are allowed to have. In case consumers request a longer lifetime than allowed by this setting, the lifetime will be the minimum of both, so this setting takes precedence. The default value is 15 days."
                          type: "string"
                      required:
                        - "ca"
                      type: "object"
                    experimentalCertManager:
                      description: "The [`experimentalCertManager` backend][1] injects a TLS certificate issued by [cert-manager](https://cert-manager.io/).\n\nA new certificate will be requested the first time it is used by a Pod, it will be reused after that (subject to cert-manager renewal rules).\n\n[1]: https://docs.stackable.tech/home/nightly/secret-operator/secretclass#backend-certmanager"
                      properties:
                        defaultCertificateLifetime:
                          default: "1d"
                          description: "The default lifetime of certificates.\n\nDefaults to 1 day. This may need to be increased for external issuers that impose rate limits (such as Let's Encrypt)."
                          type: "string"
                        issuer:
                          description: "A reference to the cert-manager issuer that the certificates should be requested from."
                          properties:
                            kind:
                              description: "The kind of the issuer, Issuer or ClusterIssuer.\n\nIf Issuer then it must be in the same namespace as the Pods using it."
                              enum:
                                - "Issuer"
                                - "ClusterIssuer"
                              type: "string"
                            name:
                              description: "The name of the issuer."
                              type: "string"
                          required:
                            - "kind"
                            - "name"
                          type: "object"
                      required:
                        - "issuer"
                      type: "object"
                    k8sSearch:
                      description: "The [`k8sSearch` backend](https://docs.stackable.tech/home/nightly/secret-operator/secretclass#backend-k8ssearch) can be used to mount Secrets across namespaces into Pods."
                      properties:
                        searchNamespace:
                          description: "Configures the namespace searched for Secret objects."
                          oneOf:
                            - required:
                                - "pod"
                            - required:
                                - "name"
                          properties:
                            name:
                              description: "The Secret objects are located in a single global namespace. Should be used for secrets that are provisioned by the cluster administrator."
                              type: "string"
                            pod:
                              description: "The Secret objects are located in the same namespace as the Pod object. Should be used for Secrets that are provisioned by the application administrator."
                              type: "object"
                          type: "object"
                      required:
                        - "searchNamespace"
                      type: "object"
                    kerberosKeytab:
                      description: "The [`kerberosKeytab` backend](https://docs.stackable.tech/home/nightly/secret-operator/secretclass#backend-kerberoskeytab) creates a Kerberos keytab file for a selected realm. The Kerberos KDC and administrator credentials must be provided by the administrator."
                      properties:
                        admin:
                          description: "Kerberos admin configuration settings."
                          oneOf:
                            - required:
                                - "mit"
                            - required:
                                - "activeDirectory"
                          properties:
                            activeDirectory:
                              description: "Credentials should be provisioned in a Microsoft Active Directory domain."
                              properties:
                                experimentalGenerateSamAccountName:
                                  description: "Allows samAccountName generation for new accounts to be customized. Note that setting this field (even if empty) makes the Secret Operator take over the generation duty from the domain controller."
                                  nullable: true
                                  properties:
                                    prefix:
                                      default: ""
                                      description: "A prefix to be prepended to generated samAccountNames."
                                      type: "string"
                                    totalLength:
                                      default: 20
                                      description: "The total length of generated samAccountNames, _including_ `prefix`. Must be larger than the length of `prefix`, but at most `20`.\n\nNote that this should be as large as possible, to minimize the risk of collisions."
                                      format: "uint8"
                                      minimum: 0.0
                                      type: "integer"
                                  type: "object"
                                ldapServer:
                                  description: "An AD LDAP server, such as the AD Domain Controller. This must match the serverâ€™s FQDN, or GSSAPI authentication will fail."
                                  type: "string"
                                ldapTlsCaSecret:
                                  description: "Reference (name and namespace) to a Kubernetes Secret object containing the TLS CA (in `ca.crt`) that the LDAP serverâ€™s certificate should be authenticated against."
                                  properties:
                                    name:
                                      description: "Name of the Secret being referred to."
                                      type: "string"
                                    namespace:
                                      description: "Namespace of the Secret being referred to."
                                      type: "string"
                                  required:
                                    - "name"
                                    - "namespace"
                                  type: "object"
                                passwordCacheSecret:
                                  description: "Reference (name and namespace) to a Kubernetes Secret object where workload passwords will be stored. This must not be accessible to end users."
                                  properties:
                                    name:
                                      description: "Name of the Secret being referred to."
                                      type: "string"
                                    namespace:
                                      description: "Namespace of the Secret being referred to."
                                      type: "string"
                                  required:
                                    - "name"
                                    - "namespace"
                                  type: "object"
                                schemaDistinguishedName:
                                  description: "The root Distinguished Name (DN) for AD-managed schemas, typically `CN=Schema,CN=Configuration,{domain_dn}`."
                                  type: "string"
                                userDistinguishedName:
                                  description: "The root Distinguished Name (DN) where service accounts should be provisioned, typically `CN=Users,{domain_dn}`."
                                  type: "string"
                              required:
                                - "ldapServer"
                                - "ldapTlsCaSecret"
                                - "passwordCacheSecret"
                                - "schemaDistinguishedName"
                                - "userDistinguishedName"
                              type: "object"
                            mit:
                              description: "Credentials should be provisioned in a MIT Kerberos Admin Server."
                              properties:
                                kadminServer:
                                  description: "The hostname of the Kerberos Admin Server. This should be provided by the Kerberos administrator."
                                  type: "string"
                              required:
                                - "kadminServer"
                              type: "object"
                          type: "object"
                        adminKeytabSecret:
                          description: "Reference (`name` and `namespace`) to a K8s Secret object where a keytab with administrative privileges is stored in the key `keytab`."
                          properties:
                            name:
                              description: "Name of the Secret being referred to."
                              type: "string"
                            namespace:
                              description: "Namespace of the Secret being referred to."
                              type: "string"
                          required:
                            - "name"
                            - "namespace"
                          type: "object"
                        adminPrincipal:
                          description: "The admin principal."
                          type: "string"
                        kdc:
                          description: "The hostname of the Kerberos Key Distribution Center (KDC). This should be provided by the Kerberos administrator."
                          type: "string"
                        realmName:
                          description: "The name of the Kerberos realm. This should be provided by the Kerberos administrator."
                          type: "string"
                      required:
                        - "admin"
                        - "adminKeytabSecret"
                        - "adminPrincipal"
                        - "kdc"
                        - "realmName"
                      type: "object"
                  type: "object"
              required:
                - "backend"
              type: "object"
          required:
            - "spec"
          title: "SecretClass"
          type: "object"
      served: true
      storage: true
      subresources: {}
