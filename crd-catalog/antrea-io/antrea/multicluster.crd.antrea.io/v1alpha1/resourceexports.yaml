apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "resourceexports.multicluster.crd.antrea.io"
spec:
  group: "multicluster.crd.antrea.io"
  names:
    kind: "ResourceExport"
    listKind: "ResourceExportList"
    plural: "resourceexports"
    singular: "resourceexport"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - description: "Cluster ID of the exporting cluster"
          jsonPath: ".spec.clusterID"
          name: "Cluster ID"
          type: "string"
        - description: "Kind of the exported resource"
          jsonPath: ".spec.kind"
          name: "Kind"
          type: "string"
        - description: "Namespace of the exported resource"
          jsonPath: ".spec.namespace"
          name: "Namespace"
          type: "string"
        - description: "Name of the exported resource"
          jsonPath: ".spec.name"
          name: "Name"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "ResourceExport is the Schema for the resourceexports API."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "ResourceExportSpec defines the desired state of ResourceExport."
              properties:
                clusterID:
                  description: "ClusterID specifies the member cluster this resource exported from."
                  type: "string"
                clusterInfo:
                  description: "If exported resource is ClusterInfo."
                  properties:
                    clusterID:
                      description: "ClusterID of the member cluster."
                      type: "string"
                    gatewayInfos:
                      description: "GatewayInfos has information of Gateways"
                      items:
                        description: "GatewayInfo includes information of a Gateway."
                        properties:
                          gatewayIP:
                            type: "string"
                        type: "object"
                      type: "array"
                    podCIDRs:
                      description: "PodCIDRs is the Pod IP address CIDRs."
                      items:
                        type: "string"
                      type: "array"
                    serviceCIDR:
                      description: "ServiceCIDR is the IP ranges used by Service ClusterIP."
                      type: "string"
                    wireGuard:
                      description: "WireGuardInfo includes information of a WireGuard tunnel."
                      properties:
                        publicKey:
                          description: "Public key of the WireGuard tunnel."
                          type: "string"
                      type: "object"
                  type: "object"
                clusterNetworkPolicy:
                  description: "If exported resource is AntreaClusterNetworkPolicy."
                  properties:
                    appliedTo:
                      description: "Select workloads on which the rules will be applied to. Cannot be set in\nconjunction with AppliedTo in each rule."
                      items:
                        description: "AppliedTo describes the grouping selector of workloads in AppliedTo field."
                        properties:
                          externalEntitySelector:
                            description: "Select ExternalEntities from NetworkPolicy's Namespace as workloads\nin AppliedTo fields. If set with NamespaceSelector,\nExternalEntities are matched from Namespaces matched by the\nNamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          group:
                            description: "Group is the name of the ClusterGroup which can be set as an\nAppliedTo in place of a stand-alone selector. A Group cannot\nbe set with any other selector."
                            type: "string"
                          namespaceSelector:
                            description: "Select all Pods from Namespaces matched by this selector, as\nworkloads in AppliedTo fields. If set with PodSelector,\nPods are matched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. Cannot be set with Namespaces."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          nodeSelector:
                            description: "Select Nodes in cluster as workloads in AppliedTo fields.\nCannot be set with any other selector."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          podSelector:
                            description: "Select Pods from NetworkPolicy's Namespace as workloads in\nAppliedTo fields. If set with NamespaceSelector, Pods are\nmatched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          service:
                            description: "Select a certain Service which matches the NamespacedName.\nA Service can only be set in either policy level AppliedTo field in a policy\nthat only has ingress rules or rule level AppliedTo field in an ingress rule.\nOnly a NodePort Service can be referred by this field.\nCannot be set with any other selector."
                            properties:
                              name:
                                type: "string"
                              namespace:
                                type: "string"
                            type: "object"
                          serviceAccount:
                            description: "Select all Pods with the ServiceAccount matched by this field, as\nworkloads in AppliedTo fields.\nCannot be set with any other selector."
                            properties:
                              name:
                                type: "string"
                              namespace:
                                type: "string"
                            type: "object"
                        type: "object"
                      type: "array"
                    egress:
                      description: "Set of egress rules evaluated based on the order in which they are set.\nCurrently Egress rule supports setting the `To` field but not the `From`\nfield within a Rule."
                      items:
                        description: "Rule describes the traffic allowed to/from the workloads selected by\nSpec.AppliedTo. Based on the action specified in the rule, traffic is either\nallowed or denied which exactly match the specified ports and protocol."
                        properties:
                          action:
                            description: "Action specifies the action to be applied on the rule."
                            type: "string"
                          appliedTo:
                            description: "Select workloads on which this rule will be applied to. Cannot be set in\nconjunction with NetworkPolicySpec/ClusterNetworkPolicySpec.AppliedTo."
                            items:
                              description: "AppliedTo describes the grouping selector of workloads in AppliedTo field."
                              properties:
                                externalEntitySelector:
                                  description: "Select ExternalEntities from NetworkPolicy's Namespace as workloads\nin AppliedTo fields. If set with NamespaceSelector,\nExternalEntities are matched from Namespaces matched by the\nNamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                group:
                                  description: "Group is the name of the ClusterGroup which can be set as an\nAppliedTo in place of a stand-alone selector. A Group cannot\nbe set with any other selector."
                                  type: "string"
                                namespaceSelector:
                                  description: "Select all Pods from Namespaces matched by this selector, as\nworkloads in AppliedTo fields. If set with PodSelector,\nPods are matched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. Cannot be set with Namespaces."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                nodeSelector:
                                  description: "Select Nodes in cluster as workloads in AppliedTo fields.\nCannot be set with any other selector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                podSelector:
                                  description: "Select Pods from NetworkPolicy's Namespace as workloads in\nAppliedTo fields. If set with NamespaceSelector, Pods are\nmatched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                service:
                                  description: "Select a certain Service which matches the NamespacedName.\nA Service can only be set in either policy level AppliedTo field in a policy\nthat only has ingress rules or rule level AppliedTo field in an ingress rule.\nOnly a NodePort Service can be referred by this field.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                                serviceAccount:
                                  description: "Select all Pods with the ServiceAccount matched by this field, as\nworkloads in AppliedTo fields.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          enableLogging:
                            description: "EnableLogging is used to indicate if agent should generate logs\nwhen rules are matched. Should be default to false."
                            type: "boolean"
                          from:
                            description: "Rule is matched if traffic originates from workloads selected by\nthis field. If this field is empty, this rule matches all sources."
                            items:
                              description: "NetworkPolicyPeer describes the grouping selector of workloads."
                              properties:
                                externalEntitySelector:
                                  description: "Select ExternalEntities from NetworkPolicy's Namespace as workloads\nin To/From fields. If set with NamespaceSelector,\nExternalEntities are matched from Namespaces matched by the\nNamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                fqdn:
                                  description: "Restrict egress access to the Fully Qualified Domain Names prescribed\nby name or by wildcard match patterns. This field can only be set for\nNetworkPolicyPeer of egress rules.\nSupported formats are:\n Exact FQDNs such as \"google.com\".\n Wildcard expressions such as \"*wayfair.com\"."
                                  type: "string"
                                group:
                                  description: "Group is the name of the ClusterGroup which can be set within\nan Ingress or Egress rule in place of a stand-alone selector.\nA Group cannot be set with any other selector."
                                  type: "string"
                                ipBlock:
                                  description: "IPBlock describes the IPAddresses/IPBlocks that is matched in to/from.\nIPBlock cannot be set as part of the AppliedTo field.\nCannot be set with any other selector."
                                  properties:
                                    cidr:
                                      description: "CIDR is a string representing the IP Block\nValid examples are \"192.168.1.1/24\"."
                                      type: "string"
                                  required:
                                    - "cidr"
                                  type: "object"
                                namespaceSelector:
                                  description: "Select all Pods from Namespaces matched by this selector, as\nworkloads in To/From fields. If set with PodSelector,\nPods are matched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. Cannot be set with Namespaces."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                namespaces:
                                  description: "Select Pod/ExternalEntity from Namespaces matched by specific criteria.\nCurrent supported criteria is match: Self, which selects from the same\nNamespace of the appliedTo workloads.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. This field can only be set when NetworkPolicyPeer\nis created for ClusterNetworkPolicy ingress/egress rules.\nCannot be set with NamespaceSelector."
                                  properties:
                                    match:
                                      description: "Selects from the same Namespace of the appliedTo workloads."
                                      type: "string"
                                    sameLabels:
                                      description: "Selects Namespaces that share the same values for the given set of label keys\nwith the appliedTo Namespace. Namespaces must have all the label keys."
                                      items:
                                        type: "string"
                                      type: "array"
                                  type: "object"
                                nodeSelector:
                                  description: "Select certain Nodes which match the label selector.\nA NodeSelector cannot be set with any other selector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                podSelector:
                                  description: "Select Pods from NetworkPolicy's Namespace as workloads in\nTo/From fields. If set with NamespaceSelector, Pods are\nmatched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                scope:
                                  description: "Define scope of the Pod/NamespaceSelector(s) of this peer.\nCan only be used in ingress NetworkPolicyPeers.\nDefaults to \"Cluster\"."
                                  type: "string"
                                serviceAccount:
                                  description: "Select all Pods with the ServiceAccount matched by this field, as\nworkloads in To/From fields.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          l7Protocols:
                            description: "Set of layer 7 protocols matched by the rule. If this field is set, action can only be Allow.\nWhen this field is used in a rule, any traffic matching the other layer 3/4 criteria of the rule (typically the\n5-tuple) will be forwarded to an application-aware engine for protocol detection and rule enforcement, and the\ntraffic will be allowed if the layer 7 criteria is also matched, otherwise it will be dropped. Therefore, any\nrules after a layer 7 rule will not be enforced for the traffic."
                            items:
                              properties:
                                http:
                                  description: "HTTPProtocol matches HTTP requests with specific host, method, and path. All fields could be used alone or together.\nIf all fields are not provided, it matches all HTTP requests."
                                  properties:
                                    host:
                                      description: "Host represents the hostname present in the URI or the HTTP Host header to match.\nIt does not contain the port associated with the host."
                                      type: "string"
                                    method:
                                      description: "Method represents the HTTP method to match.\nIt could be GET, POST, PUT, HEAD, DELETE, TRACE, OPTIONS, CONNECT and PATCH."
                                      type: "string"
                                    path:
                                      description: "Path represents the URI path to match (Ex. \"/index.html\", \"/admin\")."
                                      type: "string"
                                  type: "object"
                                tls:
                                  description: "TLSProtocol matches TLS handshake packets with specific SNI. If the field is not provided, this\nmatches all TLS handshake packets."
                                  properties:
                                    sni:
                                      description: "SNI (Server Name Indication) indicates the server domain name in the TLS/SSL hello message."
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          logLabel:
                            description: "LogLabel is a user-defined arbitrary string which will be printed in the NetworkPolicy logs."
                            type: "string"
                          name:
                            description: "Name describes the intention of this rule.\nName should be unique within the policy."
                            type: "string"
                          ports:
                            description: "Set of ports and protocols matched by the rule. If this field and Protocols\nare unset or empty, this rule matches all ports."
                            items:
                              description: "NetworkPolicyPort describes the port and protocol to match in a rule."
                              properties:
                                endPort:
                                  description: "EndPort defines the end of the port range, inclusive.\nIt can only be specified when a numerical `port` is specified."
                                  format: "int32"
                                  type: "integer"
                                port:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  description: "The port on the given protocol. This can be either a numerical\nor named port on a Pod. If this field is not provided, this\nmatches all port names and numbers."
                                  x-kubernetes-int-or-string: true
                                protocol:
                                  default: "TCP"
                                  description: "The protocol (TCP, UDP, or SCTP) which traffic must match.\nIf not specified, this field defaults to TCP."
                                  type: "string"
                                sourceEndPort:
                                  description: "SourceEndPort defines the end of the source port range, inclusive.\nIt can only be specified when `sourcePort` is specified."
                                  format: "int32"
                                  type: "integer"
                                sourcePort:
                                  description: "The source port on the given protocol. This can only be a numerical port.\nIf this field is not provided, rule matches all source ports."
                                  format: "int32"
                                  type: "integer"
                              type: "object"
                            type: "array"
                          protocols:
                            description: "Set of protocols matched by the rule. If this field and Ports are unset or\nempty, this rule matches all protocols supported."
                            items:
                              description: "NetworkPolicyProtocol defines additional protocols that are not supported by\n`ports`. All fields should be used as a standalone field."
                              properties:
                                icmp:
                                  description: "ICMPProtocol matches ICMP traffic with specific ICMPType and/or ICMPCode. All\nfields could be used alone or together. If all fields are not provided, this\nmatches all ICMP traffic."
                                  properties:
                                    icmpCode:
                                      format: "int32"
                                      type: "integer"
                                    icmpType:
                                      format: "int32"
                                      type: "integer"
                                  type: "object"
                                igmp:
                                  description: "IGMPProtocol matches IGMP traffic with IGMPType and GroupAddress. IGMPType must\nbe filled with:\nIGMPQuery    int32 = 0x11\nIGMPReportV1 int32 = 0x12\nIGMPReportV2 int32 = 0x16\nIGMPReportV3 int32 = 0x22\nIf groupAddress is empty, all groupAddresses will be matched."
                                  properties:
                                    groupAddress:
                                      type: "string"
                                    igmpType:
                                      format: "int32"
                                      type: "integer"
                                  type: "object"
                              type: "object"
                            type: "array"
                          to:
                            description: "Rule is matched if traffic is intended for workloads selected by\nthis field. This field can't be used with ToServices. If this field\nand ToServices are both empty or missing this rule matches all destinations."
                            items:
                              description: "NetworkPolicyPeer describes the grouping selector of workloads."
                              properties:
                                externalEntitySelector:
                                  description: "Select ExternalEntities from NetworkPolicy's Namespace as workloads\nin To/From fields. If set with NamespaceSelector,\nExternalEntities are matched from Namespaces matched by the\nNamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                fqdn:
                                  description: "Restrict egress access to the Fully Qualified Domain Names prescribed\nby name or by wildcard match patterns. This field can only be set for\nNetworkPolicyPeer of egress rules.\nSupported formats are:\n Exact FQDNs such as \"google.com\".\n Wildcard expressions such as \"*wayfair.com\"."
                                  type: "string"
                                group:
                                  description: "Group is the name of the ClusterGroup which can be set within\nan Ingress or Egress rule in place of a stand-alone selector.\nA Group cannot be set with any other selector."
                                  type: "string"
                                ipBlock:
                                  description: "IPBlock describes the IPAddresses/IPBlocks that is matched in to/from.\nIPBlock cannot be set as part of the AppliedTo field.\nCannot be set with any other selector."
                                  properties:
                                    cidr:
                                      description: "CIDR is a string representing the IP Block\nValid examples are \"192.168.1.1/24\"."
                                      type: "string"
                                  required:
                                    - "cidr"
                                  type: "object"
                                namespaceSelector:
                                  description: "Select all Pods from Namespaces matched by this selector, as\nworkloads in To/From fields. If set with PodSelector,\nPods are matched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. Cannot be set with Namespaces."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                namespaces:
                                  description: "Select Pod/ExternalEntity from Namespaces matched by specific criteria.\nCurrent supported criteria is match: Self, which selects from the same\nNamespace of the appliedTo workloads.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. This field can only be set when NetworkPolicyPeer\nis created for ClusterNetworkPolicy ingress/egress rules.\nCannot be set with NamespaceSelector."
                                  properties:
                                    match:
                                      description: "Selects from the same Namespace of the appliedTo workloads."
                                      type: "string"
                                    sameLabels:
                                      description: "Selects Namespaces that share the same values for the given set of label keys\nwith the appliedTo Namespace. Namespaces must have all the label keys."
                                      items:
                                        type: "string"
                                      type: "array"
                                  type: "object"
                                nodeSelector:
                                  description: "Select certain Nodes which match the label selector.\nA NodeSelector cannot be set with any other selector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                podSelector:
                                  description: "Select Pods from NetworkPolicy's Namespace as workloads in\nTo/From fields. If set with NamespaceSelector, Pods are\nmatched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                scope:
                                  description: "Define scope of the Pod/NamespaceSelector(s) of this peer.\nCan only be used in ingress NetworkPolicyPeers.\nDefaults to \"Cluster\"."
                                  type: "string"
                                serviceAccount:
                                  description: "Select all Pods with the ServiceAccount matched by this field, as\nworkloads in To/From fields.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          toServices:
                            description: "Rule is matched if traffic is intended for a Service listed in this field.\nCurrently, only ClusterIP types Services are supported in this field.\nWhen scope is set to ClusterSet, it matches traffic intended for a multi-cluster\nService listed in this field. Service name and Namespace provided should match\nthe original exported Service.\nThis field can only be used when AntreaProxy is enabled. This field can't be used\nwith To or Ports. If this field and To are both empty or missing, this rule matches\nall destinations."
                            items:
                              description: "PeerService refers to a Service, which can be a in-cluster Service or\nimported multi-cluster service."
                              properties:
                                name:
                                  type: "string"
                                namespace:
                                  type: "string"
                                scope:
                                  type: "string"
                              type: "object"
                            type: "array"
                        required:
                          - "action"
                        type: "object"
                      type: "array"
                    ingress:
                      description: "Set of ingress rules evaluated based on the order in which they are set.\nCurrently Ingress rule supports setting the `From` field but not the `To`\nfield within a Rule."
                      items:
                        description: "Rule describes the traffic allowed to/from the workloads selected by\nSpec.AppliedTo. Based on the action specified in the rule, traffic is either\nallowed or denied which exactly match the specified ports and protocol."
                        properties:
                          action:
                            description: "Action specifies the action to be applied on the rule."
                            type: "string"
                          appliedTo:
                            description: "Select workloads on which this rule will be applied to. Cannot be set in\nconjunction with NetworkPolicySpec/ClusterNetworkPolicySpec.AppliedTo."
                            items:
                              description: "AppliedTo describes the grouping selector of workloads in AppliedTo field."
                              properties:
                                externalEntitySelector:
                                  description: "Select ExternalEntities from NetworkPolicy's Namespace as workloads\nin AppliedTo fields. If set with NamespaceSelector,\nExternalEntities are matched from Namespaces matched by the\nNamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                group:
                                  description: "Group is the name of the ClusterGroup which can be set as an\nAppliedTo in place of a stand-alone selector. A Group cannot\nbe set with any other selector."
                                  type: "string"
                                namespaceSelector:
                                  description: "Select all Pods from Namespaces matched by this selector, as\nworkloads in AppliedTo fields. If set with PodSelector,\nPods are matched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. Cannot be set with Namespaces."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                nodeSelector:
                                  description: "Select Nodes in cluster as workloads in AppliedTo fields.\nCannot be set with any other selector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                podSelector:
                                  description: "Select Pods from NetworkPolicy's Namespace as workloads in\nAppliedTo fields. If set with NamespaceSelector, Pods are\nmatched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                service:
                                  description: "Select a certain Service which matches the NamespacedName.\nA Service can only be set in either policy level AppliedTo field in a policy\nthat only has ingress rules or rule level AppliedTo field in an ingress rule.\nOnly a NodePort Service can be referred by this field.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                                serviceAccount:
                                  description: "Select all Pods with the ServiceAccount matched by this field, as\nworkloads in AppliedTo fields.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          enableLogging:
                            description: "EnableLogging is used to indicate if agent should generate logs\nwhen rules are matched. Should be default to false."
                            type: "boolean"
                          from:
                            description: "Rule is matched if traffic originates from workloads selected by\nthis field. If this field is empty, this rule matches all sources."
                            items:
                              description: "NetworkPolicyPeer describes the grouping selector of workloads."
                              properties:
                                externalEntitySelector:
                                  description: "Select ExternalEntities from NetworkPolicy's Namespace as workloads\nin To/From fields. If set with NamespaceSelector,\nExternalEntities are matched from Namespaces matched by the\nNamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                fqdn:
                                  description: "Restrict egress access to the Fully Qualified Domain Names prescribed\nby name or by wildcard match patterns. This field can only be set for\nNetworkPolicyPeer of egress rules.\nSupported formats are:\n Exact FQDNs such as \"google.com\".\n Wildcard expressions such as \"*wayfair.com\"."
                                  type: "string"
                                group:
                                  description: "Group is the name of the ClusterGroup which can be set within\nan Ingress or Egress rule in place of a stand-alone selector.\nA Group cannot be set with any other selector."
                                  type: "string"
                                ipBlock:
                                  description: "IPBlock describes the IPAddresses/IPBlocks that is matched in to/from.\nIPBlock cannot be set as part of the AppliedTo field.\nCannot be set with any other selector."
                                  properties:
                                    cidr:
                                      description: "CIDR is a string representing the IP Block\nValid examples are \"192.168.1.1/24\"."
                                      type: "string"
                                  required:
                                    - "cidr"
                                  type: "object"
                                namespaceSelector:
                                  description: "Select all Pods from Namespaces matched by this selector, as\nworkloads in To/From fields. If set with PodSelector,\nPods are matched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. Cannot be set with Namespaces."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                namespaces:
                                  description: "Select Pod/ExternalEntity from Namespaces matched by specific criteria.\nCurrent supported criteria is match: Self, which selects from the same\nNamespace of the appliedTo workloads.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. This field can only be set when NetworkPolicyPeer\nis created for ClusterNetworkPolicy ingress/egress rules.\nCannot be set with NamespaceSelector."
                                  properties:
                                    match:
                                      description: "Selects from the same Namespace of the appliedTo workloads."
                                      type: "string"
                                    sameLabels:
                                      description: "Selects Namespaces that share the same values for the given set of label keys\nwith the appliedTo Namespace. Namespaces must have all the label keys."
                                      items:
                                        type: "string"
                                      type: "array"
                                  type: "object"
                                nodeSelector:
                                  description: "Select certain Nodes which match the label selector.\nA NodeSelector cannot be set with any other selector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                podSelector:
                                  description: "Select Pods from NetworkPolicy's Namespace as workloads in\nTo/From fields. If set with NamespaceSelector, Pods are\nmatched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                scope:
                                  description: "Define scope of the Pod/NamespaceSelector(s) of this peer.\nCan only be used in ingress NetworkPolicyPeers.\nDefaults to \"Cluster\"."
                                  type: "string"
                                serviceAccount:
                                  description: "Select all Pods with the ServiceAccount matched by this field, as\nworkloads in To/From fields.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          l7Protocols:
                            description: "Set of layer 7 protocols matched by the rule. If this field is set, action can only be Allow.\nWhen this field is used in a rule, any traffic matching the other layer 3/4 criteria of the rule (typically the\n5-tuple) will be forwarded to an application-aware engine for protocol detection and rule enforcement, and the\ntraffic will be allowed if the layer 7 criteria is also matched, otherwise it will be dropped. Therefore, any\nrules after a layer 7 rule will not be enforced for the traffic."
                            items:
                              properties:
                                http:
                                  description: "HTTPProtocol matches HTTP requests with specific host, method, and path. All fields could be used alone or together.\nIf all fields are not provided, it matches all HTTP requests."
                                  properties:
                                    host:
                                      description: "Host represents the hostname present in the URI or the HTTP Host header to match.\nIt does not contain the port associated with the host."
                                      type: "string"
                                    method:
                                      description: "Method represents the HTTP method to match.\nIt could be GET, POST, PUT, HEAD, DELETE, TRACE, OPTIONS, CONNECT and PATCH."
                                      type: "string"
                                    path:
                                      description: "Path represents the URI path to match (Ex. \"/index.html\", \"/admin\")."
                                      type: "string"
                                  type: "object"
                                tls:
                                  description: "TLSProtocol matches TLS handshake packets with specific SNI. If the field is not provided, this\nmatches all TLS handshake packets."
                                  properties:
                                    sni:
                                      description: "SNI (Server Name Indication) indicates the server domain name in the TLS/SSL hello message."
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          logLabel:
                            description: "LogLabel is a user-defined arbitrary string which will be printed in the NetworkPolicy logs."
                            type: "string"
                          name:
                            description: "Name describes the intention of this rule.\nName should be unique within the policy."
                            type: "string"
                          ports:
                            description: "Set of ports and protocols matched by the rule. If this field and Protocols\nare unset or empty, this rule matches all ports."
                            items:
                              description: "NetworkPolicyPort describes the port and protocol to match in a rule."
                              properties:
                                endPort:
                                  description: "EndPort defines the end of the port range, inclusive.\nIt can only be specified when a numerical `port` is specified."
                                  format: "int32"
                                  type: "integer"
                                port:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  description: "The port on the given protocol. This can be either a numerical\nor named port on a Pod. If this field is not provided, this\nmatches all port names and numbers."
                                  x-kubernetes-int-or-string: true
                                protocol:
                                  default: "TCP"
                                  description: "The protocol (TCP, UDP, or SCTP) which traffic must match.\nIf not specified, this field defaults to TCP."
                                  type: "string"
                                sourceEndPort:
                                  description: "SourceEndPort defines the end of the source port range, inclusive.\nIt can only be specified when `sourcePort` is specified."
                                  format: "int32"
                                  type: "integer"
                                sourcePort:
                                  description: "The source port on the given protocol. This can only be a numerical port.\nIf this field is not provided, rule matches all source ports."
                                  format: "int32"
                                  type: "integer"
                              type: "object"
                            type: "array"
                          protocols:
                            description: "Set of protocols matched by the rule. If this field and Ports are unset or\nempty, this rule matches all protocols supported."
                            items:
                              description: "NetworkPolicyProtocol defines additional protocols that are not supported by\n`ports`. All fields should be used as a standalone field."
                              properties:
                                icmp:
                                  description: "ICMPProtocol matches ICMP traffic with specific ICMPType and/or ICMPCode. All\nfields could be used alone or together. If all fields are not provided, this\nmatches all ICMP traffic."
                                  properties:
                                    icmpCode:
                                      format: "int32"
                                      type: "integer"
                                    icmpType:
                                      format: "int32"
                                      type: "integer"
                                  type: "object"
                                igmp:
                                  description: "IGMPProtocol matches IGMP traffic with IGMPType and GroupAddress. IGMPType must\nbe filled with:\nIGMPQuery    int32 = 0x11\nIGMPReportV1 int32 = 0x12\nIGMPReportV2 int32 = 0x16\nIGMPReportV3 int32 = 0x22\nIf groupAddress is empty, all groupAddresses will be matched."
                                  properties:
                                    groupAddress:
                                      type: "string"
                                    igmpType:
                                      format: "int32"
                                      type: "integer"
                                  type: "object"
                              type: "object"
                            type: "array"
                          to:
                            description: "Rule is matched if traffic is intended for workloads selected by\nthis field. This field can't be used with ToServices. If this field\nand ToServices are both empty or missing this rule matches all destinations."
                            items:
                              description: "NetworkPolicyPeer describes the grouping selector of workloads."
                              properties:
                                externalEntitySelector:
                                  description: "Select ExternalEntities from NetworkPolicy's Namespace as workloads\nin To/From fields. If set with NamespaceSelector,\nExternalEntities are matched from Namespaces matched by the\nNamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                fqdn:
                                  description: "Restrict egress access to the Fully Qualified Domain Names prescribed\nby name or by wildcard match patterns. This field can only be set for\nNetworkPolicyPeer of egress rules.\nSupported formats are:\n Exact FQDNs such as \"google.com\".\n Wildcard expressions such as \"*wayfair.com\"."
                                  type: "string"
                                group:
                                  description: "Group is the name of the ClusterGroup which can be set within\nan Ingress or Egress rule in place of a stand-alone selector.\nA Group cannot be set with any other selector."
                                  type: "string"
                                ipBlock:
                                  description: "IPBlock describes the IPAddresses/IPBlocks that is matched in to/from.\nIPBlock cannot be set as part of the AppliedTo field.\nCannot be set with any other selector."
                                  properties:
                                    cidr:
                                      description: "CIDR is a string representing the IP Block\nValid examples are \"192.168.1.1/24\"."
                                      type: "string"
                                  required:
                                    - "cidr"
                                  type: "object"
                                namespaceSelector:
                                  description: "Select all Pods from Namespaces matched by this selector, as\nworkloads in To/From fields. If set with PodSelector,\nPods are matched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. Cannot be set with Namespaces."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                namespaces:
                                  description: "Select Pod/ExternalEntity from Namespaces matched by specific criteria.\nCurrent supported criteria is match: Self, which selects from the same\nNamespace of the appliedTo workloads.\nCannot be set with any other selector except PodSelector or\nExternalEntitySelector. This field can only be set when NetworkPolicyPeer\nis created for ClusterNetworkPolicy ingress/egress rules.\nCannot be set with NamespaceSelector."
                                  properties:
                                    match:
                                      description: "Selects from the same Namespace of the appliedTo workloads."
                                      type: "string"
                                    sameLabels:
                                      description: "Selects Namespaces that share the same values for the given set of label keys\nwith the appliedTo Namespace. Namespaces must have all the label keys."
                                      items:
                                        type: "string"
                                      type: "array"
                                  type: "object"
                                nodeSelector:
                                  description: "Select certain Nodes which match the label selector.\nA NodeSelector cannot be set with any other selector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                podSelector:
                                  description: "Select Pods from NetworkPolicy's Namespace as workloads in\nTo/From fields. If set with NamespaceSelector, Pods are\nmatched from Namespaces matched by the NamespaceSelector.\nCannot be set with any other selector except NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                scope:
                                  description: "Define scope of the Pod/NamespaceSelector(s) of this peer.\nCan only be used in ingress NetworkPolicyPeers.\nDefaults to \"Cluster\"."
                                  type: "string"
                                serviceAccount:
                                  description: "Select all Pods with the ServiceAccount matched by this field, as\nworkloads in To/From fields.\nCannot be set with any other selector."
                                  properties:
                                    name:
                                      type: "string"
                                    namespace:
                                      type: "string"
                                  type: "object"
                              type: "object"
                            type: "array"
                          toServices:
                            description: "Rule is matched if traffic is intended for a Service listed in this field.\nCurrently, only ClusterIP types Services are supported in this field.\nWhen scope is set to ClusterSet, it matches traffic intended for a multi-cluster\nService listed in this field. Service name and Namespace provided should match\nthe original exported Service.\nThis field can only be used when AntreaProxy is enabled. This field can't be used\nwith To or Ports. If this field and To are both empty or missing, this rule matches\nall destinations."
                            items:
                              description: "PeerService refers to a Service, which can be a in-cluster Service or\nimported multi-cluster service."
                              properties:
                                name:
                                  type: "string"
                                namespace:
                                  type: "string"
                                scope:
                                  type: "string"
                              type: "object"
                            type: "array"
                        required:
                          - "action"
                        type: "object"
                      type: "array"
                    priority:
                      description: "Priority specfies the order of the ClusterNetworkPolicy relative to\nother AntreaClusterNetworkPolicies."
                      type: "number"
                    tier:
                      description: "Tier specifies the tier to which this ClusterNetworkPolicy belongs to.\nThe ClusterNetworkPolicy order will be determined based on the\ncombination of the Tier's Priority and the ClusterNetworkPolicy's own\nPriority. If not specified, this policy will be created in the Application\nTier right above the K8s NetworkPolicy which resides at the bottom."
                      type: "string"
                  required:
                    - "priority"
                  type: "object"
                endpoints:
                  description: "If exported resource is Endpoints."
                  properties:
                    subsets:
                      items:
                        description: "EndpointSubset is a group of addresses with a common set of ports. The\nexpanded set of endpoints is the Cartesian product of Addresses x Ports.\nFor example, given:\n\n\n\t{\n\t  Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n\t  Ports:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n\t}\n\n\nThe resulting set of endpoints can be viewed as:\n\n\n\ta: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n\tb: [ 10.10.1.1:309, 10.10.2.2:309 ]"
                        properties:
                          addresses:
                            description: "IP addresses which offer the related ports that are marked as ready. These endpoints\nshould be considered safe for load balancers and clients to utilize."
                            items:
                              description: "EndpointAddress is a tuple that describes single IP address."
                              properties:
                                hostname:
                                  description: "The Hostname of this endpoint"
                                  type: "string"
                                ip:
                                  description: "The IP of this endpoint.\nMay not be loopback (127.0.0.0/8 or ::1), link-local (169.254.0.0/16 or fe80::/10),\nor link-local multicast (224.0.0.0/24 or ff02::/16)."
                                  type: "string"
                                nodeName:
                                  description: "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node."
                                  type: "string"
                                targetRef:
                                  description: "Reference to object providing the endpoint."
                                  properties:
                                    apiVersion:
                                      description: "API version of the referent."
                                      type: "string"
                                    fieldPath:
                                      description: "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future."
                                      type: "string"
                                    kind:
                                      description: "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                      type: "string"
                                    namespace:
                                      description: "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                                      type: "string"
                                    resourceVersion:
                                      description: "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                                      type: "string"
                                    uid:
                                      description: "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                                      type: "string"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              required:
                                - "ip"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            type: "array"
                          notReadyAddresses:
                            description: "IP addresses which offer the related ports but are not currently marked as ready\nbecause they have not yet finished starting, have recently failed a readiness check,\nor have recently failed a liveness check."
                            items:
                              description: "EndpointAddress is a tuple that describes single IP address."
                              properties:
                                hostname:
                                  description: "The Hostname of this endpoint"
                                  type: "string"
                                ip:
                                  description: "The IP of this endpoint.\nMay not be loopback (127.0.0.0/8 or ::1), link-local (169.254.0.0/16 or fe80::/10),\nor link-local multicast (224.0.0.0/24 or ff02::/16)."
                                  type: "string"
                                nodeName:
                                  description: "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node."
                                  type: "string"
                                targetRef:
                                  description: "Reference to object providing the endpoint."
                                  properties:
                                    apiVersion:
                                      description: "API version of the referent."
                                      type: "string"
                                    fieldPath:
                                      description: "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future."
                                      type: "string"
                                    kind:
                                      description: "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                      type: "string"
                                    namespace:
                                      description: "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                                      type: "string"
                                    resourceVersion:
                                      description: "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                                      type: "string"
                                    uid:
                                      description: "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                                      type: "string"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              required:
                                - "ip"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            type: "array"
                          ports:
                            description: "Port numbers available on the related IP addresses."
                            items:
                              description: "EndpointPort is a tuple that describes a single port."
                              properties:
                                appProtocol:
                                  description: "The application protocol for this port.\nThis is used as a hint for implementations to offer richer behavior for protocols that they understand.\nThis field follows standard Kubernetes label syntax.\nValid values are either:\n\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per\nRFC-6335 and https://www.iana.org/assignments/service-names).\n\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n\n* Other protocols should use implementation-defined prefixed names such as\nmycompany.com/my-custom-protocol."
                                  type: "string"
                                name:
                                  description: "The name of this port.  This must match the 'name' field in the\ncorresponding ServicePort.\nMust be a DNS_LABEL.\nOptional only if one port is defined."
                                  type: "string"
                                port:
                                  description: "The port number of the endpoint."
                                  format: "int32"
                                  type: "integer"
                                protocol:
                                  default: "TCP"
                                  description: "The IP protocol for this port.\nMust be UDP, TCP, or SCTP.\nDefault is TCP."
                                  type: "string"
                              required:
                                - "port"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            type: "array"
                        type: "object"
                      type: "array"
                  type: "object"
                externalEntity:
                  description: "If exported resource is ExternalEntity."
                  properties:
                    externalEntitySpec:
                      description: "ExternalEntitySpec defines the desired state for ExternalEntity."
                      properties:
                        endpoints:
                          description: "Endpoints is a list of external endpoints associated with this entity."
                          items:
                            description: "Endpoint refers to an endpoint associated with the ExternalEntity."
                            properties:
                              ip:
                                description: "IP associated with this endpoint."
                                type: "string"
                              name:
                                description: "Name identifies this endpoint. Could be the network interface name in case of VMs."
                                type: "string"
                            type: "object"
                          type: "array"
                        externalNode:
                          description: "ExternalNode is the opaque identifier of the agent/controller responsible\nfor additional processing or handling of this external entity."
                          type: "string"
                        ports:
                          description: "Ports maintain the list of named ports."
                          items:
                            description: "NamedPort describes the port and protocol to match in a rule."
                            properties:
                              name:
                                description: "Name associated with the Port."
                                type: "string"
                              port:
                                description: "The port on the given protocol."
                                format: "int32"
                                type: "integer"
                              protocol:
                                default: "TCP"
                                description: "The protocol (TCP, UDP, or SCTP) which traffic must match.\nIf not specified, this field defaults to TCP."
                                type: "string"
                            type: "object"
                          type: "array"
                      type: "object"
                  type: "object"
                kind:
                  description: "Kind of exported resource."
                  type: "string"
                labelIdentity:
                  description: "If exported resource is LabelIdentity of a cluster."
                  properties:
                    normalizedLabel:
                      type: "string"
                  type: "object"
                name:
                  description: "Name of exported resource."
                  type: "string"
                namespace:
                  description: "Namespace of exported resource."
                  type: "string"
                raw:
                  description: "If exported resource kind is unknown."
                  properties:
                    data:
                      format: "byte"
                      type: "string"
                  type: "object"
                service:
                  description: "If exported resource is Service."
                  properties:
                    serviceSpec:
                      description: "ServiceSpec describes the attributes that a user creates on a service."
                      properties:
                        allocateLoadBalancerNodePorts:
                          description: "allocateLoadBalancerNodePorts defines if NodePorts will be automatically\nallocated for services with type LoadBalancer.  Default is \"true\". It\nmay be set to \"false\" if the cluster load-balancer does not rely on\nNodePorts.  If the caller requests specific NodePorts (by specifying a\nvalue), those requests will be respected, regardless of this field.\nThis field may only be set for services with type LoadBalancer and will\nbe cleared if the type is changed to any other type."
                          type: "boolean"
                        clusterIP:
                          description: "clusterIP is the IP address of the service and is usually assigned\nrandomly. If an address is specified manually, is in-range (as per\nsystem configuration), and is not in use, it will be allocated to the\nservice; otherwise creation of the service will fail. This field may not\nbe changed through updates unless the type field is also being changed\nto ExternalName (which requires this field to be blank) or the type\nfield is being changed from ExternalName (in which case this field may\noptionally be specified, as describe above).  Valid values are \"None\",\nempty string (\"\"), or a valid IP address. Setting this to \"None\" makes a\n\"headless service\" (no virtual IP), which is useful when direct endpoint\nconnections are preferred and proxying is not required.  Only applies to\ntypes ClusterIP, NodePort, and LoadBalancer. If this field is specified\nwhen creating a Service of type ExternalName, creation will fail. This\nfield will be wiped when updating a Service to type ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                          type: "string"
                        clusterIPs:
                          description: "ClusterIPs is a list of IP addresses assigned to this service, and are\nusually assigned randomly.  If an address is specified manually, is\nin-range (as per system configuration), and is not in use, it will be\nallocated to the service; otherwise creation of the service will fail.\nThis field may not be changed through updates unless the type field is\nalso being changed to ExternalName (which requires this field to be\nempty) or the type field is being changed from ExternalName (in which\ncase this field may optionally be specified, as describe above).  Valid\nvalues are \"None\", empty string (\"\"), or a valid IP address.  Setting\nthis to \"None\" makes a \"headless service\" (no virtual IP), which is\nuseful when direct endpoint connections are preferred and proxying is\nnot required.  Only applies to types ClusterIP, NodePort, and\nLoadBalancer. If this field is specified when creating a Service of type\nExternalName, creation will fail. This field will be wiped when updating\na Service to type ExternalName.  If this field is not specified, it will\nbe initialized from the clusterIP field.  If this field is specified,\nclients must ensure that clusterIPs[0] and clusterIP have the same\nvalue.\n\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order).\nThese IPs must correspond to the values of the ipFamilies field. Both\nclusterIPs and ipFamilies are governed by the ipFamilyPolicy field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                          items:
                            type: "string"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                        externalIPs:
                          description: "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system."
                          items:
                            type: "string"
                          type: "array"
                        externalName:
                          description: "externalName is the external reference that discovery mechanisms will\nreturn as an alias for this service (e.g. a DNS CNAME record). No\nproxying will be involved.  Must be a lowercase RFC-1123 hostname\n(https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\"."
                          type: "string"
                        externalTrafficPolicy:
                          description: "externalTrafficPolicy describes how nodes distribute service traffic they\nreceive on one of the Service's \"externally-facing\" addresses (NodePorts,\nExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure\nthe service in a way that assumes that external load balancers will take care\nof balancing the service traffic between nodes, and so each node will deliver\ntraffic only to the node-local endpoints of the service, without masquerading\nthe client source IP. (Traffic mistakenly sent to a node with no endpoints will\nbe dropped.) The default value, \"Cluster\", uses the standard behavior of\nrouting to all endpoints evenly (possibly modified by topology and other\nfeatures). Note that traffic sent to an External IP or LoadBalancer IP from\nwithin the cluster will always get \"Cluster\" semantics, but clients sending to\na NodePort from within the cluster may need to take traffic policy into account\nwhen picking a node."
                          type: "string"
                        healthCheckNodePort:
                          description: "healthCheckNodePort specifies the healthcheck nodePort for the service.\nThis only applies when type is set to LoadBalancer and\nexternalTrafficPolicy is set to Local. If a value is specified, is\nin-range, and is not in use, it will be used.  If not specified, a value\nwill be automatically allocated.  External systems (e.g. load-balancers)\ncan use this port to determine if a given node holds endpoints for this\nservice or not.  If this field is specified when creating a Service\nwhich does not need it, creation will fail. This field will be wiped\nwhen updating a Service to no longer need it (e.g. changing type).\nThis field cannot be updated once set."
                          format: "int32"
                          type: "integer"
                        internalTrafficPolicy:
                          description: "InternalTrafficPolicy describes how nodes distribute service traffic they\nreceive on the ClusterIP. If set to \"Local\", the proxy will assume that pods\nonly want to talk to endpoints of the service on the same node as the pod,\ndropping the traffic if there are no local endpoints. The default value,\n\"Cluster\", uses the standard behavior of routing to all endpoints evenly\n(possibly modified by topology and other features)."
                          type: "string"
                        ipFamilies:
                          description: "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\nservice. This field is usually assigned automatically based on cluster\nconfiguration and the ipFamilyPolicy field. If this field is specified\nmanually, the requested family is available in the cluster,\nand ipFamilyPolicy allows it, it will be used; otherwise creation of\nthe service will fail. This field is conditionally mutable: it allows\nfor adding or removing a secondary IP family, but it does not allow\nchanging the primary IP family of the Service. Valid values are \"IPv4\"\nand \"IPv6\".  This field only applies to Services of types ClusterIP,\nNodePort, and LoadBalancer, and does apply to \"headless\" services.\nThis field will be wiped when updating a Service to type ExternalName.\n\n\nThis field may hold a maximum of two entries (dual-stack families, in\neither order).  These families must correspond to the values of the\nclusterIPs field, if specified. Both clusterIPs and ipFamilies are\ngoverned by the ipFamilyPolicy field."
                          items:
                            description: "IPFamily represents the IP Family (IPv4 or IPv6). This type is used\nto express the family of an IP expressed by a type (e.g. service.spec.ipFamilies)."
                            type: "string"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                        ipFamilyPolicy:
                          description: "IPFamilyPolicy represents the dual-stack-ness requested or required by\nthis Service. If there is no value provided, then this field will be set\nto SingleStack. Services can be \"SingleStack\" (a single IP family),\n\"PreferDualStack\" (two IP families on dual-stack configured clusters or\na single IP family on single-stack clusters), or \"RequireDualStack\"\n(two IP families on dual-stack configured clusters, otherwise fail). The\nipFamilies and clusterIPs fields depend on the value of this field. This\nfield will be wiped when updating a service to type ExternalName."
                          type: "string"
                        loadBalancerClass:
                          description: "loadBalancerClass is the class of the load balancer implementation this Service belongs to.\nIf specified, the value of this field must be a label-style identifier, with an optional prefix,\ne.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users.\nThis field can only be set when the Service type is 'LoadBalancer'. If not set, the default load\nbalancer implementation is used, today this is typically done through the cloud provider integration,\nbut should apply for any default implementation. If set, it is assumed that a load balancer\nimplementation is watching for Services with a matching class. Any default load balancer\nimplementation (e.g. cloud providers) should ignore Services that set this field.\nThis field can only be set when creating or updating a Service to type 'LoadBalancer'.\nOnce set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type."
                          type: "string"
                        loadBalancerIP:
                          description: "Only applies to Service Type: LoadBalancer.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.\nDeprecated: This field was under-specified and its meaning varies across implementations.\nUsing it is non-portable and it may not support dual-stack.\nUsers are encouraged to use implementation-specific annotations when available."
                          type: "string"
                        loadBalancerSourceRanges:
                          description: "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
                          items:
                            type: "string"
                          type: "array"
                        ports:
                          description: "The list of ports that are exposed by this service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                          items:
                            description: "ServicePort contains information on service's port."
                            properties:
                              appProtocol:
                                description: "The application protocol for this port.\nThis is used as a hint for implementations to offer richer behavior for protocols that they understand.\nThis field follows standard Kubernetes label syntax.\nValid values are either:\n\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per\nRFC-6335 and https://www.iana.org/assignments/service-names).\n\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n\n* Other protocols should use implementation-defined prefixed names such as\nmycompany.com/my-custom-protocol."
                                type: "string"
                              name:
                                description: "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. When considering\nthe endpoints for a Service, this must match the 'name' field in the\nEndpointPort.\nOptional if only one ServicePort is defined on this service."
                                type: "string"
                              nodePort:
                                description: "The port on each node on which this service is exposed when type is\nNodePort or LoadBalancer.  Usually assigned by the system. If a value is\nspecified, in-range, and not in use it will be used, otherwise the\noperation will fail.  If not specified, a port will be allocated if this\nService requires one.  If this field is specified when creating a\nService which does not need it, creation will fail. This field will be\nwiped when updating a Service to no longer need it (e.g. changing type\nfrom NodePort to ClusterIP).\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"
                                format: "int32"
                                type: "integer"
                              port:
                                description: "The port that will be exposed by this service."
                                format: "int32"
                                type: "integer"
                              protocol:
                                default: "TCP"
                                description: "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP."
                                type: "string"
                              targetPort:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Number or name of the port to access on the pods targeted by the service.\nNumber must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\nIf this is a string, it will be looked up as a named port in the\ntarget Pod's container ports. If this is not specified, the value\nof the 'port' field is used (an identity map).\nThis field is ignored for services with clusterIP=None, and should be\nomitted or set equal to the 'port' field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service"
                                x-kubernetes-int-or-string: true
                            required:
                              - "port"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "port"
                            - "protocol"
                          x-kubernetes-list-type: "map"
                        publishNotReadyAddresses:
                          description: "publishNotReadyAddresses indicates that any agent which deals with endpoints for this\nService should disregard any indications of ready/not-ready.\nThe primary use case for setting this field is for a StatefulSet's Headless Service to\npropagate SRV DNS records for its Pods for the purpose of peer discovery.\nThe Kubernetes controllers that generate Endpoints and EndpointSlice resources for\nServices interpret this to mean that all endpoints are considered \"ready\" even if the\nPods themselves are not. Agents which consume only Kubernetes generated endpoints\nthrough the Endpoints or EndpointSlice resources can safely assume this behavior."
                          type: "boolean"
                        selector:
                          additionalProperties:
                            type: "string"
                          description: "Route service traffic to pods with label keys and values matching this\nselector. If empty or not present, the service is assumed to have an\nexternal process managing its endpoints, which Kubernetes will not\nmodify. Only applies to types ClusterIP, NodePort, and LoadBalancer.\nIgnored if type is ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        sessionAffinity:
                          description: "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                          type: "string"
                        sessionAffinityConfig:
                          description: "sessionAffinityConfig contains the configurations of session affinity."
                          properties:
                            clientIP:
                              description: "clientIP contains the configurations of Client IP based session affinity."
                              properties:
                                timeoutSeconds:
                                  description: "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours)."
                                  format: "int32"
                                  type: "integer"
                              type: "object"
                          type: "object"
                        type:
                          description: "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing\nto endpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object or\nEndpointSlice objects. If clusterIP is \"None\", no virtual IP is\nallocated and the endpoints are published as a set of endpoints rather\nthan a virtual IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the same endpoints as the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an external load-balancer\n(if supported in the current cloud) which routes to the same endpoints\nas the clusterIP.\n\"ExternalName\" aliases this service to the specified externalName.\nSeveral other fields do not apply to ExternalName services.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types"
                          type: "string"
                      type: "object"
                  type: "object"
              type: "object"
            status:
              description: "ResourceExportStatus defines the observed state of ResourceExport."
              properties:
                conditions:
                  items:
                    description: "ResourceExportCondition indicates the readiness condition of the ResourceExport."
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transited from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "Unique, one-word, CamelCase reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        type: "string"
                    type: "object"
                  type: "array"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
