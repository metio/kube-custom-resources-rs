apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "agents.instana.io"
spec:
  group: "instana.io"
  names:
    categories:
      - "monitoring"
      - "openshift-optional"
    kind: "InstanaAgent"
    listKind: "InstanaAgentList"
    plural: "agents"
    shortNames:
      - "ia"
    singular: "agent"
  scope: "Namespaced"
  versions:
    - name: "v1"
      schema:
        openAPIV3Schema:
          description: "InstanaAgent is the Schema for the agents API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "InstanaAgentSpec defines the desired state of the Instana Agent"
              properties:
                agent:
                  description: "Agent deployment specific fields."
                  properties:
                    additionalBackends:
                      description: "These are additional backends the Instana agent will report to besides\nthe one configured via the `agent.endpointHost`, `agent.endpointPort` and `agent.key` setting."
                      items:
                        properties:
                          endpointHost:
                            type: "string"
                          endpointPort:
                            type: "string"
                          key:
                            type: "string"
                        required:
                          - "endpointHost"
                          - "endpointPort"
                        type: "object"
                      type: "array"
                    agentReleaseRepoMirrorPassword:
                      description: "Sets the AGENT_RELEASE_REPOSITORY_MIRROR_PASSWORD environment variable"
                      type: "string"
                    agentReleaseRepoMirrorUrl:
                      description: "Sets the AGENT_RELEASE_REPOSITORY_MIRROR_URL environment variable"
                      type: "string"
                    agentReleaseRepoMirrorUsername:
                      description: "Sets the AGENT_RELEASE_REPOSITORY_MIRROR_USERNAME environment variable"
                      type: "string"
                    configuration_yaml:
                      description: "Supply Agent configuration e.g. for configuring certain Sensors."
                      type: "string"
                    downloadKey:
                      description: "The DownloadKey, sometimes known as \"sales key\", that allows you to download software from Instana. It might be needed to\nspecify this in addition to the Key."
                      type: "string"
                    endpointHost:
                      description: "EndpointHost is the hostname of the Instana server your agents will connect to."
                      type: "string"
                    endpointPort:
                      description: "EndpointPort is the port number (as a String) of the Instana server your agents will connect to."
                      type: "string"
                    env:
                      additionalProperties:
                        type: "string"
                      description: "Use the `env` field to set additional environment variables for the Instana Agent, for example:\nenv:\n  INSTANA_AGENT_TAGS: dev"
                      type: "object"
                    host:
                      description: "Host sets a host path to be mounted as the Agent Maven repository (mainly for debugging or development purposes)"
                      properties:
                        repository:
                          type: "string"
                      type: "object"
                    image:
                      description: "Override the container image used for the Instana Agent pods."
                      properties:
                        digest:
                          description: "Digest (a.k.a. Image ID) of the agent container image. If specified, it has priority over `agent.image.tag`,\nwhich will then be ignored."
                          type: "string"
                        name:
                          description: "Name is the name of the container image of the Instana agent."
                          type: "string"
                        pullPolicy:
                          description: "PullPolicy specifies when to pull the image container."
                          type: "string"
                        pullSecrets:
                          description: "PullSecrets allows you to override the default pull secret that is created when `agent.image.name` starts with\n\"containers.instana.io\". Setting `agent.image.pullSecrets` prevents the creation of the default \"containers-instana-io\" secret."
                          items:
                            description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                            properties:
                              name:
                                default: ""
                                description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          type: "array"
                        tag:
                          description: "Tag is the name of the agent container image; if `agent.image.digest` is specified, this property is ignored."
                          type: "string"
                      type: "object"
                    instanaMvnRepoFeaturesPath:
                      description: "Sets the INSTANA_MVN_REPOSITORY_FEATURES_PATH environment variable"
                      type: "string"
                    instanaMvnRepoSharedPath:
                      description: "Sets the INSTANA_MVN_REPOSITORY_SHARED_PATH environment variable"
                      type: "string"
                    instanaMvnRepoUrl:
                      description: "Override for the Maven repository URL when the Agent needs to connect to a locally provided Maven repository 'proxy'\nAlternative to `Host` for referencing a different Maven repo."
                      type: "string"
                    instanaSharedRepoMirrorPassword:
                      description: "Sets the INSTANA_SHARED_REPOSITORY_MIRROR_PASSWORD environment variable"
                      type: "string"
                    instanaSharedRepoMirrorUrl:
                      description: "Sets the INSTANA_SHARED_REPOSITORY_MIRROR_URL environment variable"
                      type: "string"
                    instanaSharedRepoMirrorUsername:
                      description: "Sets the INSTANA_SHARED_REPOSITORY_MIRROR_USERNAME environment variable"
                      type: "string"
                    key:
                      description: "Key is the secret token which your agent uses to authenticate to Instana's servers."
                      type: "string"
                    keysSecret:
                      description: "Rather than specifying the Key and optionally the DownloadKey, you can \"bring your\nown secret\" creating it in the namespace in which you install the `instana-agent` and\nspecify its name in the `KeysSecret` field. The secret you create must contain a field called `key` and optionally one\ncalled `downloadKey`, which contain, respectively, the values you'd otherwise set in `.agent.key` and `agent.downloadKey`."
                      type: "string"
                    listenAddress:
                      description: "ListenAddress is the IP addresses the Agent HTTP server will listen on. Normally this will just be localhost (`127.0.0.1`),\nthe pod public IP and any container runtime bridge interfaces. Set `listenAddress: *` for making the Agent listen on all\nnetwork interfaces."
                      type: "string"
                    minReadySeconds:
                      description: "The minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing, for it to be considered available"
                      type: "integer"
                    mode:
                      description: "Set agent mode, possible options are APM, INFRASTRUCTURE or AWS. KUBERNETES should not be used but instead enabled via\n`kubernetes.deployment.enabled: true`."
                      type: "string"
                    pod:
                      description: "Override Agent Pod specific settings such as annotations, labels and resources."
                      properties:
                        affinity:
                          description: "agent.pod.affinity are affinities to influence agent pod assignment.\nhttps://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"
                          properties:
                            nodeAffinity:
                              description: "Describes node affinity scheduling rules for the pod."
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                  items:
                                    description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                    properties:
                                      preference:
                                        description: "A node selector term, associated with the corresponding weight."
                                        properties:
                                          matchExpressions:
                                            description: "A list of node selector requirements by node's labels."
                                            items:
                                              description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                              properties:
                                                key:
                                                  description: "The label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                  type: "string"
                                                values:
                                                  description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchFields:
                                            description: "A list of node selector requirements by node's fields."
                                            items:
                                              description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                              properties:
                                                key:
                                                  description: "The label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                  type: "string"
                                                values:
                                                  description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      weight:
                                        description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                        format: "int32"
                                        type: "integer"
                                    required:
                                      - "preference"
                                      - "weight"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                  properties:
                                    nodeSelectorTerms:
                                      description: "Required. A list of node selector terms. The terms are ORed."
                                      items:
                                        description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                        properties:
                                          matchExpressions:
                                            description: "A list of node selector requirements by node's labels."
                                            items:
                                              description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                              properties:
                                                key:
                                                  description: "The label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                  type: "string"
                                                values:
                                                  description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchFields:
                                            description: "A list of node selector requirements by node's fields."
                                            items:
                                              description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                              properties:
                                                key:
                                                  description: "The label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                  type: "string"
                                                values:
                                                  description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                  required:
                                    - "nodeSelectorTerms"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                            podAffinity:
                              description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                  items:
                                    description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                    properties:
                                      podAffinityTerm:
                                        description: "Required. A pod affinity term, associated with the corresponding weight."
                                        properties:
                                          labelSelector:
                                            description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          matchLabelKeys:
                                            description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          mismatchLabelKeys:
                                            description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          namespaceSelector:
                                            description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          namespaces:
                                            description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          topologyKey:
                                            description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                            type: "string"
                                        required:
                                          - "topologyKey"
                                        type: "object"
                                      weight:
                                        description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                        format: "int32"
                                        type: "integer"
                                    required:
                                      - "podAffinityTerm"
                                      - "weight"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                  items:
                                    description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                              type: "object"
                            podAntiAffinity:
                              description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                  items:
                                    description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                    properties:
                                      podAffinityTerm:
                                        description: "Required. A pod affinity term, associated with the corresponding weight."
                                        properties:
                                          labelSelector:
                                            description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          matchLabelKeys:
                                            description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          mismatchLabelKeys:
                                            description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          namespaceSelector:
                                            description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          namespaces:
                                            description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          topologyKey:
                                            description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                            type: "string"
                                        required:
                                          - "topologyKey"
                                        type: "object"
                                      weight:
                                        description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                        format: "int32"
                                        type: "integer"
                                    required:
                                      - "podAffinityTerm"
                                      - "weight"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                  items:
                                    description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                              type: "object"
                          type: "object"
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "agent.pod.annotations are additional annotations to be added to the agent pods."
                          type: "object"
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        labels:
                          additionalProperties:
                            type: "string"
                          description: "agent.pod.labels are additional labels to be added to the agent pods."
                          type: "object"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        nodeSelector:
                          additionalProperties:
                            type: "string"
                          type: "object"
                        priorityClassName:
                          description: "agent.pod.priorityClassName is the name of an existing PriorityClass that should be set on the agent pods\nhttps://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/"
                          type: "string"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        tolerations:
                          description: "agent.pod.tolerations are tolerations to influence agent pod assignment."
                          items:
                            description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                            properties:
                              effect:
                                description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                type: "string"
                              key:
                                description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                type: "string"
                              operator:
                                description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                type: "string"
                              tolerationSeconds:
                                description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                format: "int64"
                                type: "integer"
                              value:
                                description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                type: "string"
                            type: "object"
                          type: "array"
                        volumeMounts:
                          description: "Set additional volume mounts for the agent pod."
                          items:
                            description: "VolumeMount describes a mounting of a Volume within a container."
                            properties:
                              mountPath:
                                description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                                type: "string"
                              mountPropagation:
                                description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None)."
                                type: "string"
                              name:
                                description: "This must match the Name of a Volume."
                                type: "string"
                              readOnly:
                                description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                                type: "boolean"
                              recursiveReadOnly:
                                description: "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\n\nIf this field is not specified, it is treated as an equivalent of Disabled."
                                type: "string"
                              subPath:
                                description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                                type: "string"
                              subPathExpr:
                                description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                                type: "string"
                            required:
                              - "mountPath"
                              - "name"
                            type: "object"
                          type: "array"
                        volumes:
                          description: "Set additional volumes for the agent pod."
                          items:
                            description: "Volume represents a named volume in a pod that may be accessed by any container in the pod."
                            properties:
                              awsElasticBlockStore:
                                description: "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                properties:
                                  fsType:
                                    description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                    type: "string"
                                  partition:
                                    description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                    format: "int32"
                                    type: "integer"
                                  readOnly:
                                    description: "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                    type: "boolean"
                                  volumeID:
                                    description: "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                    type: "string"
                                required:
                                  - "volumeID"
                                type: "object"
                              azureDisk:
                                description: "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
                                properties:
                                  cachingMode:
                                    description: "cachingMode is the Host Caching mode: None, Read Only, Read Write."
                                    type: "string"
                                  diskName:
                                    description: "diskName is the Name of the data disk in the blob storage"
                                    type: "string"
                                  diskURI:
                                    description: "diskURI is the URI of data disk in the blob storage"
                                    type: "string"
                                  fsType:
                                    description: "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    type: "string"
                                  kind:
                                    description: "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                    type: "boolean"
                                required:
                                  - "diskName"
                                  - "diskURI"
                                type: "object"
                              azureFile:
                                description: "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
                                properties:
                                  readOnly:
                                    description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                    type: "boolean"
                                  secretName:
                                    description: "secretName is the  name of secret that contains Azure Storage Account Name and Key"
                                    type: "string"
                                  shareName:
                                    description: "shareName is the azure share Name"
                                    type: "string"
                                required:
                                  - "secretName"
                                  - "shareName"
                                type: "object"
                              cephfs:
                                description: "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
                                properties:
                                  monitors:
                                    description: "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  path:
                                    description: "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                    type: "boolean"
                                  secretFile:
                                    description: "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                    type: "string"
                                  secretRef:
                                    description: "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  user:
                                    description: "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                    type: "string"
                                required:
                                  - "monitors"
                                type: "object"
                              cinder:
                                description: "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                properties:
                                  fsType:
                                    description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                    type: "boolean"
                                  secretRef:
                                    description: "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack."
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  volumeID:
                                    description: "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                    type: "string"
                                required:
                                  - "volumeID"
                                type: "object"
                              configMap:
                                description: "configMap represents a configMap that should populate this volume"
                                properties:
                                  defaultMode:
                                    description: "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                    format: "int32"
                                    type: "integer"
                                  items:
                                    description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                    items:
                                      description: "Maps a string key to a path within a volume."
                                      properties:
                                        key:
                                          description: "key is the key to project."
                                          type: "string"
                                        mode:
                                          description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                          format: "int32"
                                          type: "integer"
                                        path:
                                          description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                          type: "string"
                                      required:
                                        - "key"
                                        - "path"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  name:
                                    default: ""
                                    description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                    type: "string"
                                  optional:
                                    description: "optional specify whether the ConfigMap or its keys must be defined"
                                    type: "boolean"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              csi:
                                description: "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
                                properties:
                                  driver:
                                    description: "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
                                    type: "string"
                                  fsType:
                                    description: "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply."
                                    type: "string"
                                  nodePublishSecretRef:
                                    description: "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed."
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  readOnly:
                                    description: "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write)."
                                    type: "boolean"
                                  volumeAttributes:
                                    additionalProperties:
                                      type: "string"
                                    description: "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values."
                                    type: "object"
                                required:
                                  - "driver"
                                type: "object"
                              downwardAPI:
                                description: "downwardAPI represents downward API about the pod that should populate this volume"
                                properties:
                                  defaultMode:
                                    description: "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                    format: "int32"
                                    type: "integer"
                                  items:
                                    description: "Items is a list of downward API volume file"
                                    items:
                                      description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                      properties:
                                        fieldRef:
                                          description: "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported."
                                          properties:
                                            apiVersion:
                                              description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                              type: "string"
                                            fieldPath:
                                              description: "Path of the field to select in the specified API version."
                                              type: "string"
                                          required:
                                            - "fieldPath"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        mode:
                                          description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                          format: "int32"
                                          type: "integer"
                                        path:
                                          description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                          type: "string"
                                        resourceFieldRef:
                                          description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                          properties:
                                            containerName:
                                              description: "Container name: required for volumes, optional for env vars"
                                              type: "string"
                                            divisor:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: "Required: resource to select"
                                              type: "string"
                                          required:
                                            - "resource"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                      required:
                                        - "path"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                type: "object"
                              emptyDir:
                                description: "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                properties:
                                  medium:
                                    description: "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                    type: "string"
                                  sizeLimit:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                type: "object"
                              ephemeral:
                                description: "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time."
                                properties:
                                  volumeClaimTemplate:
                                    description: "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\n\nRequired, must not be nil."
                                    properties:
                                      metadata:
                                        description: "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation."
                                        type: "object"
                                      spec:
                                        description: "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
                                        properties:
                                          accessModes:
                                            description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          dataSource:
                                            description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                                            properties:
                                              apiGroup:
                                                description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                                type: "string"
                                              kind:
                                                description: "Kind is the type of resource being referenced"
                                                type: "string"
                                              name:
                                                description: "Name is the name of resource being referenced"
                                                type: "string"
                                            required:
                                              - "kind"
                                              - "name"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          dataSourceRef:
                                            description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                            properties:
                                              apiGroup:
                                                description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                                type: "string"
                                              kind:
                                                description: "Kind is the type of resource being referenced"
                                                type: "string"
                                              name:
                                                description: "Name is the name of resource being referenced"
                                                type: "string"
                                              namespace:
                                                description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                                type: "string"
                                            required:
                                              - "kind"
                                              - "name"
                                            type: "object"
                                          resources:
                                            description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                            properties:
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                    - type: "integer"
                                                    - type: "string"
                                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                  x-kubernetes-int-or-string: true
                                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                                type: "object"
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                    - type: "integer"
                                                    - type: "string"
                                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                  x-kubernetes-int-or-string: true
                                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                                type: "object"
                                            type: "object"
                                          selector:
                                            description: "selector is a label query over volumes to consider for binding."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          storageClassName:
                                            description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                            type: "string"
                                          volumeAttributesClassName:
                                            description: "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled."
                                            type: "string"
                                          volumeMode:
                                            description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                                            type: "string"
                                          volumeName:
                                            description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                                            type: "string"
                                        type: "object"
                                    required:
                                      - "spec"
                                    type: "object"
                                type: "object"
                              fc:
                                description: "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
                                properties:
                                  fsType:
                                    description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                    type: "string"
                                  lun:
                                    description: "lun is Optional: FC target lun number"
                                    format: "int32"
                                    type: "integer"
                                  readOnly:
                                    description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                    type: "boolean"
                                  targetWWNs:
                                    description: "targetWWNs is Optional: FC target worldwide names (WWNs)"
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  wwids:
                                    description: "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                type: "object"
                              flexVolume:
                                description: "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
                                properties:
                                  driver:
                                    description: "driver is the name of the driver to use for this volume."
                                    type: "string"
                                  fsType:
                                    description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                    type: "string"
                                  options:
                                    additionalProperties:
                                      type: "string"
                                    description: "options is Optional: this field holds extra command options if any."
                                    type: "object"
                                  readOnly:
                                    description: "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                    type: "boolean"
                                  secretRef:
                                    description: "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts."
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                required:
                                  - "driver"
                                type: "object"
                              flocker:
                                description: "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
                                properties:
                                  datasetName:
                                    description: "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated"
                                    type: "string"
                                  datasetUUID:
                                    description: "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset"
                                    type: "string"
                                type: "object"
                              gcePersistentDisk:
                                description: "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                properties:
                                  fsType:
                                    description: "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                    type: "string"
                                  partition:
                                    description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                    format: "int32"
                                    type: "integer"
                                  pdName:
                                    description: "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                    type: "boolean"
                                required:
                                  - "pdName"
                                type: "object"
                              gitRepo:
                                description: "gitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
                                properties:
                                  directory:
                                    description: "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name."
                                    type: "string"
                                  repository:
                                    description: "repository is the URL"
                                    type: "string"
                                  revision:
                                    description: "revision is the commit hash for the specified revision."
                                    type: "string"
                                required:
                                  - "repository"
                                type: "object"
                              glusterfs:
                                description: "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md"
                                properties:
                                  endpoints:
                                    description: "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                    type: "string"
                                  path:
                                    description: "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                    type: "boolean"
                                required:
                                  - "endpoints"
                                  - "path"
                                type: "object"
                              hostPath:
                                description: "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write."
                                properties:
                                  path:
                                    description: "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                    type: "string"
                                  type:
                                    description: "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                    type: "string"
                                required:
                                  - "path"
                                type: "object"
                              iscsi:
                                description: "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md"
                                properties:
                                  chapAuthDiscovery:
                                    description: "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication"
                                    type: "boolean"
                                  chapAuthSession:
                                    description: "chapAuthSession defines whether support iSCSI Session CHAP authentication"
                                    type: "boolean"
                                  fsType:
                                    description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                    type: "string"
                                  initiatorName:
                                    description: "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection."
                                    type: "string"
                                  iqn:
                                    description: "iqn is the target iSCSI Qualified Name."
                                    type: "string"
                                  iscsiInterface:
                                    description: "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp)."
                                    type: "string"
                                  lun:
                                    description: "lun represents iSCSI Target Lun number."
                                    format: "int32"
                                    type: "integer"
                                  portals:
                                    description: "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  readOnly:
                                    description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false."
                                    type: "boolean"
                                  secretRef:
                                    description: "secretRef is the CHAP Secret for iSCSI target and initiator authentication"
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  targetPortal:
                                    description: "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                    type: "string"
                                required:
                                  - "iqn"
                                  - "lun"
                                  - "targetPortal"
                                type: "object"
                              name:
                                description: "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: "string"
                              nfs:
                                description: "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                properties:
                                  path:
                                    description: "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                    type: "boolean"
                                  server:
                                    description: "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                    type: "string"
                                required:
                                  - "path"
                                  - "server"
                                type: "object"
                              persistentVolumeClaim:
                                description: "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                                properties:
                                  claimName:
                                    description: "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false."
                                    type: "boolean"
                                required:
                                  - "claimName"
                                type: "object"
                              photonPersistentDisk:
                                description: "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
                                properties:
                                  fsType:
                                    description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    type: "string"
                                  pdID:
                                    description: "pdID is the ID that identifies Photon Controller persistent disk"
                                    type: "string"
                                required:
                                  - "pdID"
                                type: "object"
                              portworxVolume:
                                description: "portworxVolume represents a portworx volume attached and mounted on kubelets host machine"
                                properties:
                                  fsType:
                                    description: "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    type: "string"
                                  readOnly:
                                    description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                    type: "boolean"
                                  volumeID:
                                    description: "volumeID uniquely identifies a Portworx volume"
                                    type: "string"
                                required:
                                  - "volumeID"
                                type: "object"
                              projected:
                                description: "projected items for all in one resources secrets, configmaps, and downward API"
                                properties:
                                  defaultMode:
                                    description: "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                    format: "int32"
                                    type: "integer"
                                  sources:
                                    description: "sources is the list of volume projections"
                                    items:
                                      description: "Projection that may be projected along with other supported volume types"
                                      properties:
                                        clusterTrustBundle:
                                          description: "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time."
                                          properties:
                                            labelSelector:
                                              description: "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\"."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            name:
                                              description: "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector."
                                              type: "string"
                                            optional:
                                              description: "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles."
                                              type: "boolean"
                                            path:
                                              description: "Relative path from the volume root to write the bundle."
                                              type: "string"
                                            signerName:
                                              description: "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated."
                                              type: "string"
                                          required:
                                            - "path"
                                          type: "object"
                                        configMap:
                                          description: "configMap information about the configMap data to project"
                                          properties:
                                            items:
                                              description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                              items:
                                                description: "Maps a string key to a path within a volume."
                                                properties:
                                                  key:
                                                    description: "key is the key to project."
                                                    type: "string"
                                                  mode:
                                                    description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                    format: "int32"
                                                    type: "integer"
                                                  path:
                                                    description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                    type: "string"
                                                required:
                                                  - "key"
                                                  - "path"
                                                type: "object"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            name:
                                              default: ""
                                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                              type: "string"
                                            optional:
                                              description: "optional specify whether the ConfigMap or its keys must be defined"
                                              type: "boolean"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        downwardAPI:
                                          description: "downwardAPI information about the downwardAPI data to project"
                                          properties:
                                            items:
                                              description: "Items is a list of DownwardAPIVolume file"
                                              items:
                                                description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                                properties:
                                                  fieldRef:
                                                    description: "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported."
                                                    properties:
                                                      apiVersion:
                                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                        type: "string"
                                                      fieldPath:
                                                        description: "Path of the field to select in the specified API version."
                                                        type: "string"
                                                    required:
                                                      - "fieldPath"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  mode:
                                                    description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                    format: "int32"
                                                    type: "integer"
                                                  path:
                                                    description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                                    type: "string"
                                                  resourceFieldRef:
                                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                                    properties:
                                                      containerName:
                                                        description: "Container name: required for volumes, optional for env vars"
                                                        type: "string"
                                                      divisor:
                                                        anyOf:
                                                          - type: "integer"
                                                          - type: "string"
                                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                        x-kubernetes-int-or-string: true
                                                      resource:
                                                        description: "Required: resource to select"
                                                        type: "string"
                                                    required:
                                                      - "resource"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                required:
                                                  - "path"
                                                type: "object"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                          type: "object"
                                        secret:
                                          description: "secret information about the secret data to project"
                                          properties:
                                            items:
                                              description: "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                              items:
                                                description: "Maps a string key to a path within a volume."
                                                properties:
                                                  key:
                                                    description: "key is the key to project."
                                                    type: "string"
                                                  mode:
                                                    description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                    format: "int32"
                                                    type: "integer"
                                                  path:
                                                    description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                    type: "string"
                                                required:
                                                  - "key"
                                                  - "path"
                                                type: "object"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            name:
                                              default: ""
                                              description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                              type: "string"
                                            optional:
                                              description: "optional field specify whether the Secret or its key must be defined"
                                              type: "boolean"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        serviceAccountToken:
                                          description: "serviceAccountToken is information about the serviceAccountToken data to project"
                                          properties:
                                            audience:
                                              description: "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver."
                                              type: "string"
                                            expirationSeconds:
                                              description: "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes."
                                              format: "int64"
                                              type: "integer"
                                            path:
                                              description: "path is the path relative to the mount point of the file to project the\ntoken into."
                                              type: "string"
                                          required:
                                            - "path"
                                          type: "object"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                type: "object"
                              quobyte:
                                description: "quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
                                properties:
                                  group:
                                    description: "group to map volume access to\nDefault is no group"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false."
                                    type: "boolean"
                                  registry:
                                    description: "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
                                    type: "string"
                                  tenant:
                                    description: "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin"
                                    type: "string"
                                  user:
                                    description: "user to map volume access to\nDefaults to serivceaccount user"
                                    type: "string"
                                  volume:
                                    description: "volume is a string that references an already created Quobyte volume by name."
                                    type: "string"
                                required:
                                  - "registry"
                                  - "volume"
                                type: "object"
                              rbd:
                                description: "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md"
                                properties:
                                  fsType:
                                    description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                    type: "string"
                                  image:
                                    description: "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                    type: "string"
                                  keyring:
                                    description: "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                    type: "string"
                                  monitors:
                                    description: "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  pool:
                                    description: "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                    type: "string"
                                  readOnly:
                                    description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                    type: "boolean"
                                  secretRef:
                                    description: "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  user:
                                    description: "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                    type: "string"
                                required:
                                  - "image"
                                  - "monitors"
                                type: "object"
                              scaleIO:
                                description: "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
                                properties:
                                  fsType:
                                    description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\"."
                                    type: "string"
                                  gateway:
                                    description: "gateway is the host address of the ScaleIO API Gateway."
                                    type: "string"
                                  protectionDomain:
                                    description: "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage."
                                    type: "string"
                                  readOnly:
                                    description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                    type: "boolean"
                                  secretRef:
                                    description: "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  sslEnabled:
                                    description: "sslEnabled Flag enable/disable SSL communication with Gateway, default false"
                                    type: "boolean"
                                  storageMode:
                                    description: "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned."
                                    type: "string"
                                  storagePool:
                                    description: "storagePool is the ScaleIO Storage Pool associated with the protection domain."
                                    type: "string"
                                  system:
                                    description: "system is the name of the storage system as configured in ScaleIO."
                                    type: "string"
                                  volumeName:
                                    description: "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
                                    type: "string"
                                required:
                                  - "gateway"
                                  - "secretRef"
                                  - "system"
                                type: "object"
                              secret:
                                description: "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                properties:
                                  defaultMode:
                                    description: "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                    format: "int32"
                                    type: "integer"
                                  items:
                                    description: "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                    items:
                                      description: "Maps a string key to a path within a volume."
                                      properties:
                                        key:
                                          description: "key is the key to project."
                                          type: "string"
                                        mode:
                                          description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                          format: "int32"
                                          type: "integer"
                                        path:
                                          description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                          type: "string"
                                      required:
                                        - "key"
                                        - "path"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  optional:
                                    description: "optional field specify whether the Secret or its keys must be defined"
                                    type: "boolean"
                                  secretName:
                                    description: "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                    type: "string"
                                type: "object"
                              storageos:
                                description: "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
                                properties:
                                  fsType:
                                    description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    type: "string"
                                  readOnly:
                                    description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                    type: "boolean"
                                  secretRef:
                                    description: "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted."
                                    properties:
                                      name:
                                        default: ""
                                        description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                        type: "string"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  volumeName:
                                    description: "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
                                    type: "string"
                                  volumeNamespace:
                                    description: "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created."
                                    type: "string"
                                type: "object"
                              vsphereVolume:
                                description: "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
                                properties:
                                  fsType:
                                    description: "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    type: "string"
                                  storagePolicyID:
                                    description: "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
                                    type: "string"
                                  storagePolicyName:
                                    description: "storagePolicyName is the storage Policy Based Management (SPBM) profile name."
                                    type: "string"
                                  volumePath:
                                    description: "volumePath is the path that identifies vSphere volume vmdk"
                                    type: "string"
                                required:
                                  - "volumePath"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                      type: "object"
                    proxyHost:
                      description: "proxyHost sets the INSTANA_AGENT_PROXY_HOST environment variable."
                      type: "string"
                    proxyPassword:
                      description: "proxyPassword sets the INSTANA_AGENT_PROXY_PASSWORD environment variable."
                      type: "string"
                    proxyPort:
                      description: "proxyPort sets the INSTANA_AGENT_PROXY_PORT environment variable."
                      type: "string"
                    proxyProtocol:
                      description: "proxyProtocol sets the INSTANA_AGENT_PROXY_PROTOCOL environment variable."
                      type: "string"
                    proxyUseDNS:
                      description: "proxyUseDNS sets the INSTANA_AGENT_PROXY_USE_DNS environment variable."
                      type: "boolean"
                    proxyUser:
                      description: "proxyUser sets the INSTANA_AGENT_PROXY_USER environment variable."
                      type: "string"
                    redactKubernetesSecrets:
                      description: "RedactKubernetesSecrets sets the INSTANA_KUBERNETES_REDACT_SECRETS environment variable."
                      type: "string"
                    serviceMesh:
                      description: "ServiceMesh sets the ENABLE_AGENT_SOCKET environment variable."
                      properties:
                        enabled:
                          type: "boolean"
                      type: "object"
                    tls:
                      description: "TLS for end-to-end encryption between the Instana Agent and clients accessing the Agent.\nThe Instana Agent does not yet allow enforcing TLS encryption, enabling makes it possible for clients to 'opt-in'.\nSo TLS is only enabled on a connection when requested by the client."
                      properties:
                        certificate:
                          description: "certificate (together with key) is the alternative to an existing Secret. Must be base64 encoded."
                          format: "byte"
                          type: "string"
                        key:
                          description: "key (together with certificate) is the alternative to an existing Secret. Must be base64 encoded."
                          format: "byte"
                          type: "string"
                        secretName:
                          description: "secretName is the name of the secret that has the relevant files."
                          type: "string"
                      type: "object"
                    updateStrategy:
                      description: "Control how to update the Agent DaemonSet"
                      properties:
                        rollingUpdate:
                          description: "Rolling update config params. Present only if type = \"RollingUpdate\".\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be. Same as Deployment `strategy.rollingUpdate`.\nSee https://github.com/kubernetes/kubernetes/issues/35345"
                          properties:
                            maxSurge:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of nodes with an existing available DaemonSet pod that\ncan have an updated DaemonSet pod during during an update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up to a minimum of 1.\nDefault value is 0.\nExample: when this is set to 30%, at most 30% of the total number of nodes\nthat should be running the daemon pod (i.e. status.desiredNumberScheduled)\ncan have their a new pod created before the old pod is marked as deleted.\nThe update starts by launching new pods on 30% of nodes. Once an updated\npod is available (Ready for at least minReadySeconds) the old DaemonSet pod\non that node is marked deleted. If the old pod becomes unavailable for any\nreason (Ready transitions to false, is evicted, or is drained) an updated\npod is immediatedly created on that node without considering surge limits.\nAllowing surge implies the possibility that the resources consumed by the\ndaemonset on any given node can double if the readiness check fails, and\nso resource intensive daemonsets should take into account that they may\ncause evictions during disruption."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of DaemonSet pods that can be unavailable during the\nupdate. Value can be an absolute number (ex: 5) or a percentage of total\nnumber of DaemonSet pods at the start of the update (ex: 10%). Absolute\nnumber is calculated from percentage by rounding up.\nThis cannot be 0 if MaxSurge is 0\nDefault value is 1.\nExample: when this is set to 30%, at most 30% of the total number of nodes\nthat should be running the daemon pod (i.e. status.desiredNumberScheduled)\ncan have their pods stopped for an update at any given time. The update\nstarts by stopping at most 30% of those DaemonSet pods and then brings\nup new DaemonSet pods in their place. Once the new pods are available,\nit then proceeds onto other DaemonSet pods, thus ensuring that at least\n70% of original number of DaemonSet pods are available at all times during\nthe update."
                              x-kubernetes-int-or-string: true
                          type: "object"
                        type:
                          description: "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate."
                          type: "string"
                      type: "object"
                  required:
                    - "endpointHost"
                    - "endpointPort"
                  type: "object"
                cluster:
                  description: "Name of the cluster, that will be assigned to this cluster in Instana. Either specifying the 'cluster.name' or 'zone.name'\nis mandatory."
                  properties:
                    name:
                      type: "string"
                  type: "object"
                k8s_sensor:
                  properties:
                    deployment:
                      properties:
                        enabled:
                          type: "boolean"
                        minReadySeconds:
                          description: "The minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing, for it to be considered available"
                          type: "integer"
                        pod:
                          description: "Override pod resource requirements for the Kubernetes Sensor pods."
                          properties:
                            affinity:
                              description: "agent.pod.affinity are affinities to influence agent pod assignment.\nhttps://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"
                              properties:
                                nodeAffinity:
                                  description: "Describes node affinity scheduling rules for the pod."
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                      items:
                                        description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                        properties:
                                          preference:
                                            description: "A node selector term, associated with the corresponding weight."
                                            properties:
                                              matchExpressions:
                                                description: "A list of node selector requirements by node's labels."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchFields:
                                                description: "A list of node selector requirements by node's fields."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          weight:
                                            description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                            format: "int32"
                                            type: "integer"
                                        required:
                                          - "preference"
                                          - "weight"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                      properties:
                                        nodeSelectorTerms:
                                          description: "Required. A list of node selector terms. The terms are ORed."
                                          items:
                                            description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                            properties:
                                              matchExpressions:
                                                description: "A list of node selector requirements by node's labels."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchFields:
                                                description: "A list of node selector requirements by node's fields."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "nodeSelectorTerms"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                                podAffinity:
                                  description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                      items:
                                        description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                        properties:
                                          podAffinityTerm:
                                            description: "Required. A pod affinity term, associated with the corresponding weight."
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          weight:
                                            description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                            format: "int32"
                                            type: "integer"
                                        required:
                                          - "podAffinityTerm"
                                          - "weight"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                      items:
                                        description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                        properties:
                                          labelSelector:
                                            description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          matchLabelKeys:
                                            description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          mismatchLabelKeys:
                                            description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          namespaceSelector:
                                            description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          namespaces:
                                            description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          topologyKey:
                                            description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                            type: "string"
                                        required:
                                          - "topologyKey"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                  type: "object"
                                podAntiAffinity:
                                  description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                      items:
                                        description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                        properties:
                                          podAffinityTerm:
                                            description: "Required. A pod affinity term, associated with the corresponding weight."
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          weight:
                                            description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                            format: "int32"
                                            type: "integer"
                                        required:
                                          - "podAffinityTerm"
                                          - "weight"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                      items:
                                        description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                        properties:
                                          labelSelector:
                                            description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          matchLabelKeys:
                                            description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          mismatchLabelKeys:
                                            description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          namespaceSelector:
                                            description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          namespaces:
                                            description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          topologyKey:
                                            description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                            type: "string"
                                        required:
                                          - "topologyKey"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                  type: "object"
                              type: "object"
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            nodeSelector:
                              additionalProperties:
                                type: "string"
                              type: "object"
                            priorityClassName:
                              type: "string"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            tolerations:
                              description: "agent.pod.tolerations are tolerations to influence agent pod assignment."
                              items:
                                description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                                properties:
                                  effect:
                                    description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                    type: "string"
                                  key:
                                    description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                    type: "string"
                                  operator:
                                    description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                    type: "string"
                                  tolerationSeconds:
                                    description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                    format: "int64"
                                    type: "integer"
                                  value:
                                    description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                    type: "string"
                                type: "object"
                              type: "array"
                          type: "object"
                        replicas:
                          description: "Specify the number of replicas for the Kubernetes Sensor."
                          type: "integer"
                      type: "object"
                    image:
                      properties:
                        digest:
                          description: "Digest (a.k.a. Image ID) of the agent container image. If specified, it has priority over `agent.image.tag`,\nwhich will then be ignored."
                          type: "string"
                        name:
                          description: "Name is the name of the container image of the Instana agent."
                          type: "string"
                        pullPolicy:
                          description: "PullPolicy specifies when to pull the image container."
                          type: "string"
                        tag:
                          description: "Tag is the name of the agent container image; if `agent.image.digest` is specified, this property is ignored."
                          type: "string"
                      type: "object"
                    podDisruptionBudget:
                      description: "Toggles the PDB for the K8s Sensor"
                      properties:
                        enabled:
                          type: "boolean"
                      type: "object"
                  type: "object"
                kubernetes:
                  description: "Allows for installment of the Kubernetes Sensor as separate pod. Which allows for better tailored resource settings\n(mainly memory) both for the Agent pods and the Kubernetes Sensor pod."
                  properties:
                    deployment:
                      properties:
                        enabled:
                          type: "boolean"
                        minReadySeconds:
                          description: "The minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing, for it to be considered available"
                          type: "integer"
                        pod:
                          description: "Override pod resource requirements for the Kubernetes Sensor pods."
                          properties:
                            affinity:
                              description: "agent.pod.affinity are affinities to influence agent pod assignment.\nhttps://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"
                              properties:
                                nodeAffinity:
                                  description: "Describes node affinity scheduling rules for the pod."
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                      items:
                                        description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                        properties:
                                          preference:
                                            description: "A node selector term, associated with the corresponding weight."
                                            properties:
                                              matchExpressions:
                                                description: "A list of node selector requirements by node's labels."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchFields:
                                                description: "A list of node selector requirements by node's fields."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          weight:
                                            description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                            format: "int32"
                                            type: "integer"
                                        required:
                                          - "preference"
                                          - "weight"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                      properties:
                                        nodeSelectorTerms:
                                          description: "Required. A list of node selector terms. The terms are ORed."
                                          items:
                                            description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                            properties:
                                              matchExpressions:
                                                description: "A list of node selector requirements by node's labels."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchFields:
                                                description: "A list of node selector requirements by node's fields."
                                                items:
                                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                  properties:
                                                    key:
                                                      description: "The label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                      type: "string"
                                                    values:
                                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "nodeSelectorTerms"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                                podAffinity:
                                  description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                      items:
                                        description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                        properties:
                                          podAffinityTerm:
                                            description: "Required. A pod affinity term, associated with the corresponding weight."
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          weight:
                                            description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                            format: "int32"
                                            type: "integer"
                                        required:
                                          - "podAffinityTerm"
                                          - "weight"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                      items:
                                        description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                        properties:
                                          labelSelector:
                                            description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          matchLabelKeys:
                                            description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          mismatchLabelKeys:
                                            description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          namespaceSelector:
                                            description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          namespaces:
                                            description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          topologyKey:
                                            description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                            type: "string"
                                        required:
                                          - "topologyKey"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                  type: "object"
                                podAntiAffinity:
                                  description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                      items:
                                        description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                        properties:
                                          podAffinityTerm:
                                            description: "Required. A pod affinity term, associated with the corresponding weight."
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          weight:
                                            description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                            format: "int32"
                                            type: "integer"
                                        required:
                                          - "podAffinityTerm"
                                          - "weight"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                      items:
                                        description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                        properties:
                                          labelSelector:
                                            description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          matchLabelKeys:
                                            description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          mismatchLabelKeys:
                                            description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          namespaceSelector:
                                            description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                            properties:
                                              matchExpressions:
                                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                items:
                                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                  properties:
                                                    key:
                                                      description: "key is the label key that the selector applies to."
                                                      type: "string"
                                                    operator:
                                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                      type: "string"
                                                    values:
                                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                  required:
                                                    - "key"
                                                    - "operator"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              matchLabels:
                                                additionalProperties:
                                                  type: "string"
                                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                type: "object"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          namespaces:
                                            description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                            items:
                                              type: "string"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          topologyKey:
                                            description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                            type: "string"
                                        required:
                                          - "topologyKey"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                  type: "object"
                              type: "object"
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            nodeSelector:
                              additionalProperties:
                                type: "string"
                              type: "object"
                            priorityClassName:
                              type: "string"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            tolerations:
                              description: "agent.pod.tolerations are tolerations to influence agent pod assignment."
                              items:
                                description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                                properties:
                                  effect:
                                    description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                    type: "string"
                                  key:
                                    description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                    type: "string"
                                  operator:
                                    description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                    type: "string"
                                  tolerationSeconds:
                                    description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                    format: "int64"
                                    type: "integer"
                                  value:
                                    description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                    type: "string"
                                type: "object"
                              type: "array"
                          type: "object"
                        replicas:
                          description: "Specify the number of replicas for the Kubernetes Sensor."
                          type: "integer"
                      type: "object"
                  type: "object"
                openshift:
                  description: "Set to `True` to indicate the Operator is being deployed in a OpenShift cluster. Provides a hint so that RBAC etc is\nconfigured correctly. Will attempt to auto-detect if unset."
                  type: "boolean"
                opentelemetry:
                  description: "Enables the OpenTelemetry gRPC endpoint on the Agent. If true, it will also apply `service.create: true`."
                  properties:
                    enabled:
                      type: "boolean"
                    grpc:
                      properties:
                        enabled:
                          type: "boolean"
                      type: "object"
                    http:
                      properties:
                        enabled:
                          type: "boolean"
                      type: "object"
                  type: "object"
                pinnedChartVersion:
                  description: "Specifying the PinnedChartVersion allows for 'pinning' the Helm Chart used by the Operator for installing the Agent\nDaemonSet. Normally the Operator will always install and update to the latest Helm Chart version.\nThe Operator will check and make sure no 'unsupported' Chart versions can be selected."
                  type: "string"
                podSecurityPolicy:
                  description: "Specify a PodSecurityPolicy for the Instana Agent Pods. If enabled requires `rbac.create: true`."
                  properties:
                    enabled:
                      type: "boolean"
                    name:
                      type: "string"
                  type: "object"
                prometheus:
                  description: "Enables the Prometheus endpoint on the Agent. If true, it will also apply `service.create: true`."
                  properties:
                    remoteWrite:
                      properties:
                        enabled:
                          type: "boolean"
                      type: "object"
                  type: "object"
                rbac:
                  description: "Specifies whether RBAC resources should be created."
                  properties:
                    create:
                      type: "boolean"
                  type: "object"
                service:
                  description: "Specifies whether to create the instana-agent `Service` to expose within the cluster. The Service can then be used e.g.\nfor the Prometheus remote-write, OpenTelemetry GRCP endpoint and other APIs.\nNote: Requires Kubernetes 1.17+, as it uses topologyKeys."
                  properties:
                    create:
                      type: "boolean"
                  type: "object"
                serviceAccount:
                  description: "Specifies whether a ServiceAccount should be created (default `true`), and possibly the name to use."
                  properties:
                    annotations:
                      additionalProperties:
                        type: "string"
                      type: "object"
                    create:
                      type: "boolean"
                    name:
                      type: "string"
                  type: "object"
                serviceMesh:
                  properties:
                    enabled:
                      type: "boolean"
                  type: "object"
                zone:
                  description: "Name of the zone in which the host(s) will be displayed on the map. Optional, but then 'cluster.name' must be specified."
                  properties:
                    name:
                      type: "string"
                  type: "object"
                zones:
                  description: "Zones can be used to specify agents in multiple zones split across different nodes in the cluster"
                  items:
                    properties:
                      affinity:
                        description: "Affinity is a group of affinity scheduling rules."
                        properties:
                          nodeAffinity:
                            description: "Describes node affinity scheduling rules for the pod."
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                items:
                                  description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                  properties:
                                    preference:
                                      description: "A node selector term, associated with the corresponding weight."
                                      properties:
                                        matchExpressions:
                                          description: "A list of node selector requirements by node's labels."
                                          items:
                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                            properties:
                                              key:
                                                description: "The label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                type: "string"
                                              values:
                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchFields:
                                          description: "A list of node selector requirements by node's fields."
                                          items:
                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                            properties:
                                              key:
                                                description: "The label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                type: "string"
                                              values:
                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    weight:
                                      description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                      format: "int32"
                                      type: "integer"
                                  required:
                                    - "preference"
                                    - "weight"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                properties:
                                  nodeSelectorTerms:
                                    description: "Required. A list of node selector terms. The terms are ORed."
                                    items:
                                      description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                      properties:
                                        matchExpressions:
                                          description: "A list of node selector requirements by node's labels."
                                          items:
                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                            properties:
                                              key:
                                                description: "The label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                type: "string"
                                              values:
                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchFields:
                                          description: "A list of node selector requirements by node's fields."
                                          items:
                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                            properties:
                                              key:
                                                description: "The label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                type: "string"
                                              values:
                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                required:
                                  - "nodeSelectorTerms"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                          podAffinity:
                            description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                items:
                                  description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                  properties:
                                    podAffinityTerm:
                                      description: "Required. A pod affinity term, associated with the corresponding weight."
                                      properties:
                                        labelSelector:
                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        matchLabelKeys:
                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        mismatchLabelKeys:
                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        namespaceSelector:
                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaces:
                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        topologyKey:
                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                          type: "string"
                                      required:
                                        - "topologyKey"
                                      type: "object"
                                    weight:
                                      description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                      format: "int32"
                                      type: "integer"
                                  required:
                                    - "podAffinityTerm"
                                    - "weight"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                items:
                                  description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                  properties:
                                    labelSelector:
                                      description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    matchLabelKeys:
                                      description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    mismatchLabelKeys:
                                      description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    namespaceSelector:
                                      description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    namespaces:
                                      description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    topologyKey:
                                      description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                      type: "string"
                                  required:
                                    - "topologyKey"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                            type: "object"
                          podAntiAffinity:
                            description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                items:
                                  description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                  properties:
                                    podAffinityTerm:
                                      description: "Required. A pod affinity term, associated with the corresponding weight."
                                      properties:
                                        labelSelector:
                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        matchLabelKeys:
                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        mismatchLabelKeys:
                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        namespaceSelector:
                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaces:
                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        topologyKey:
                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                          type: "string"
                                      required:
                                        - "topologyKey"
                                      type: "object"
                                    weight:
                                      description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                      format: "int32"
                                      type: "integer"
                                  required:
                                    - "podAffinityTerm"
                                    - "weight"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                items:
                                  description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                  properties:
                                    labelSelector:
                                      description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    matchLabelKeys:
                                      description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    mismatchLabelKeys:
                                      description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    namespaceSelector:
                                      description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                      properties:
                                        matchExpressions:
                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                          items:
                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                            properties:
                                              key:
                                                description: "key is the label key that the selector applies to."
                                                type: "string"
                                              operator:
                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                type: "string"
                                              values:
                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            required:
                                              - "key"
                                              - "operator"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        matchLabels:
                                          additionalProperties:
                                            type: "string"
                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                          type: "object"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    namespaces:
                                      description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                    topologyKey:
                                      description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                      type: "string"
                                  required:
                                    - "topologyKey"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                            type: "object"
                        type: "object"
                      mode:
                        type: "string"
                      name:
                        type: "string"
                      tolerations:
                        items:
                          description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                          properties:
                            effect:
                              description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                              type: "string"
                            key:
                              description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                              type: "string"
                            operator:
                              description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                              type: "string"
                            tolerationSeconds:
                              description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                              format: "int64"
                              type: "integer"
                            value:
                              description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                              type: "string"
                          type: "object"
                        type: "array"
                    type: "object"
                  type: "array"
              required:
                - "agent"
              type: "object"
            status:
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "type"
                  x-kubernetes-list-type: "map"
                configmap:
                  description: "ResourceInfo holds Name and UID to given object"
                  properties:
                    name:
                      type: "string"
                    uid:
                      type: "string"
                  required:
                    - "name"
                    - "uid"
                  type: "object"
                configsecret:
                  description: "ResourceInfo holds Name and UID to given object"
                  properties:
                    name:
                      type: "string"
                    uid:
                      type: "string"
                  required:
                    - "name"
                    - "uid"
                  type: "object"
                daemonset:
                  description: "ResourceInfo holds Name and UID to given object"
                  properties:
                    name:
                      type: "string"
                    uid:
                      type: "string"
                  required:
                    - "name"
                    - "uid"
                  type: "object"
                lastUpdate:
                  format: "date-time"
                  type: "string"
                leadingAgentPod:
                  additionalProperties:
                    description: "ResourceInfo holds Name and UID to given object"
                    properties:
                      name:
                        type: "string"
                      uid:
                        type: "string"
                    required:
                      - "name"
                      - "uid"
                    type: "object"
                  type: "object"
                observedGeneration:
                  format: "int64"
                  minimum: 0.0
                  type: "integer"
                oldVersionsUpdated:
                  type: "boolean"
                operatorVersion:
                  pattern: "^v?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
                  type: "string"
                reason:
                  type: "string"
                status:
                  description: "AgentOperatorState type representing the running state of the Agent Operator itself."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
