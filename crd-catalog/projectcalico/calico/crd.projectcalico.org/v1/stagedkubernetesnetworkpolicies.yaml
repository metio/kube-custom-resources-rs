apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.17.3"
  name: "stagedkubernetesnetworkpolicies.crd.projectcalico.org"
spec:
  group: "crd.projectcalico.org"
  names:
    kind: "StagedKubernetesNetworkPolicy"
    listKind: "StagedKubernetesNetworkPolicyList"
    plural: "stagedkubernetesnetworkpolicies"
    singular: "stagedkubernetesnetworkpolicy"
  preserveUnknownFields: false
  scope: "Namespaced"
  versions:
    - name: "v1"
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              properties:
                egress:
                  description: "List of egress rules to be applied to the selected pods. Outgoing traffic is\nallowed if there are no NetworkPolicies selecting the pod (and cluster policy\notherwise allows the traffic), OR if the traffic matches at least one egress rule\nacross all of the NetworkPolicy objects whose podSelector matches the pod. If\nthis field is empty then this NetworkPolicy limits all outgoing traffic (and serves\nsolely to ensure that the pods it selects are isolated by default).\nThis field is beta-level in 1.8"
                  items:
                    description: "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods\nmatched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to.\nThis type is beta-level in 1.8"
                    properties:
                      ports:
                        description: "ports is a list of destination ports for outgoing traffic.\nEach item in this list is combined using a logical OR. If this field is\nempty or missing, this rule matches all ports (traffic not restricted by port).\nIf this field is present and contains at least one item, then this rule allows\ntraffic only if the traffic matches at least one port in the list."
                        items:
                          description: "NetworkPolicyPort describes a port to allow traffic on"
                          properties:
                            endPort:
                              description: "endPort indicates that the range of ports from port to endPort if set, inclusive,\nshould be allowed by the policy. This field cannot be defined if the port field\nis not defined or if the port field is defined as a named (string) port.\nThe endPort must be equal or greater than port."
                              format: "int32"
                              type: "integer"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "port represents the port on the given protocol. This can either be a numerical or named\nport on a pod. If this field is not provided, this matches all port names and\nnumbers.\nIf present, only traffic on the specified protocol AND port will be matched."
                              x-kubernetes-int-or-string: true
                            protocol:
                              description: "protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.\nIf not specified, this field defaults to TCP."
                              type: "string"
                          type: "object"
                        type: "array"
                        x-kubernetes-list-type: "atomic"
                      to:
                        description: "to is a list of destinations for outgoing traffic of pods selected for this rule.\nItems in this list are combined using a logical OR operation. If this field is\nempty or missing, this rule matches all destinations (traffic not restricted by\ndestination). If this field is present and contains at least one item, this rule\nallows traffic only if the traffic matches at least one item in the to list."
                        items:
                          description: "NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of\nfields are allowed"
                          properties:
                            ipBlock:
                              description: "ipBlock defines policy on a particular IPBlock. If this field is set then\nneither of the other fields can be."
                              properties:
                                cidr:
                                  description: "cidr is a string representing the IPBlock\nValid examples are \"192.168.1.0/24\" or \"2001:db8::/64\""
                                  type: "string"
                                except:
                                  description: "except is a slice of CIDRs that should not be included within an IPBlock\nValid examples are \"192.168.1.0/24\" or \"2001:db8::/64\"\nExcept values will be rejected if they are outside the cidr range"
                                  items:
                                    type: "string"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                              required:
                                - "cidr"
                              type: "object"
                            namespaceSelector:
                              description: "namespaceSelector selects namespaces using cluster-scoped labels. This field follows\nstandard label selector semantics; if present but empty, it selects all namespaces.\n\nIf podSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe pods matching podSelector in the namespaces selected by namespaceSelector.\nOtherwise it selects all pods in the namespaces selected by namespaceSelector."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector applies to."
                                        type: "string"
                                      operator:
                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                        type: "string"
                                      values:
                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                    required:
                                      - "key"
                                      - "operator"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                matchLabels:
                                  additionalProperties:
                                    type: "string"
                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                  type: "object"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            podSelector:
                              description: "podSelector is a label selector which selects pods. This field follows standard label\nselector semantics; if present but empty, it selects all pods.\n\nIf namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe pods matching podSelector in the Namespaces selected by NamespaceSelector.\nOtherwise it selects the pods matching podSelector in the policy's own namespace."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector applies to."
                                        type: "string"
                                      operator:
                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                        type: "string"
                                      values:
                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                    required:
                                      - "key"
                                      - "operator"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                matchLabels:
                                  additionalProperties:
                                    type: "string"
                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                  type: "object"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        type: "array"
                        x-kubernetes-list-type: "atomic"
                    type: "object"
                  type: "array"
                ingress:
                  description: "List of ingress rules to be applied to the selected pods. Traffic is allowed to\na pod if there are no NetworkPolicies selecting the pod\n(and cluster policy otherwise allows the traffic), OR if the traffic source is\nthe pod's local node, OR if the traffic matches at least one ingress rule\nacross all of the NetworkPolicy objects whose podSelector matches the pod. If\nthis field is empty then this NetworkPolicy does not allow any traffic (and serves\nsolely to ensure that the pods it selects are isolated by default)"
                  items:
                    description: "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods\nmatched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from."
                    properties:
                      from:
                        description: "from is a list of sources which should be able to access the pods selected for this rule.\nItems in this list are combined using a logical OR operation. If this field is\nempty or missing, this rule matches all sources (traffic not restricted by\nsource). If this field is present and contains at least one item, this rule\nallows traffic only if the traffic matches at least one item in the from list."
                        items:
                          description: "NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of\nfields are allowed"
                          properties:
                            ipBlock:
                              description: "ipBlock defines policy on a particular IPBlock. If this field is set then\nneither of the other fields can be."
                              properties:
                                cidr:
                                  description: "cidr is a string representing the IPBlock\nValid examples are \"192.168.1.0/24\" or \"2001:db8::/64\""
                                  type: "string"
                                except:
                                  description: "except is a slice of CIDRs that should not be included within an IPBlock\nValid examples are \"192.168.1.0/24\" or \"2001:db8::/64\"\nExcept values will be rejected if they are outside the cidr range"
                                  items:
                                    type: "string"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                              required:
                                - "cidr"
                              type: "object"
                            namespaceSelector:
                              description: "namespaceSelector selects namespaces using cluster-scoped labels. This field follows\nstandard label selector semantics; if present but empty, it selects all namespaces.\n\nIf podSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe pods matching podSelector in the namespaces selected by namespaceSelector.\nOtherwise it selects all pods in the namespaces selected by namespaceSelector."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector applies to."
                                        type: "string"
                                      operator:
                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                        type: "string"
                                      values:
                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                    required:
                                      - "key"
                                      - "operator"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                matchLabels:
                                  additionalProperties:
                                    type: "string"
                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                  type: "object"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            podSelector:
                              description: "podSelector is a label selector which selects pods. This field follows standard label\nselector semantics; if present but empty, it selects all pods.\n\nIf namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe pods matching podSelector in the Namespaces selected by NamespaceSelector.\nOtherwise it selects the pods matching podSelector in the policy's own namespace."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector applies to."
                                        type: "string"
                                      operator:
                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                        type: "string"
                                      values:
                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                    required:
                                      - "key"
                                      - "operator"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                matchLabels:
                                  additionalProperties:
                                    type: "string"
                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                  type: "object"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        type: "array"
                        x-kubernetes-list-type: "atomic"
                      ports:
                        description: "ports is a list of ports which should be made accessible on the pods selected for\nthis rule. Each item in this list is combined using a logical OR. If this field is\nempty or missing, this rule matches all ports (traffic not restricted by port).\nIf this field is present and contains at least one item, then this rule allows\ntraffic only if the traffic matches at least one port in the list."
                        items:
                          description: "NetworkPolicyPort describes a port to allow traffic on"
                          properties:
                            endPort:
                              description: "endPort indicates that the range of ports from port to endPort if set, inclusive,\nshould be allowed by the policy. This field cannot be defined if the port field\nis not defined or if the port field is defined as a named (string) port.\nThe endPort must be equal or greater than port."
                              format: "int32"
                              type: "integer"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "port represents the port on the given protocol. This can either be a numerical or named\nport on a pod. If this field is not provided, this matches all port names and\nnumbers.\nIf present, only traffic on the specified protocol AND port will be matched."
                              x-kubernetes-int-or-string: true
                            protocol:
                              description: "protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.\nIf not specified, this field defaults to TCP."
                              type: "string"
                          type: "object"
                        type: "array"
                        x-kubernetes-list-type: "atomic"
                    type: "object"
                  type: "array"
                podSelector:
                  description: "Selects the pods to which this NetworkPolicy object applies. The array of\ningress rules is applied to any pods selected by this field. Multiple network\npolicies can select the same set of pods. In this case, the ingress rules for\neach are combined additively. This field is NOT optional and follows standard\nlabel selector semantics. An empty podSelector matches all pods in this\nnamespace."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                policyTypes:
                  description: "List of rule types that the NetworkPolicy relates to.\nValid options are Ingress, Egress, or Ingress,Egress.\nIf this field is not specified, it will default based on the existence of Ingress or Egress rules;\npolicies that contain an Egress section are assumed to affect Egress, and all policies\n(whether or not they contain an Ingress section) are assumed to affect Ingress.\nIf you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ].\nLikewise, if you want to write a policy that specifies that no egress is allowed,\nyou must specify a policyTypes value that include \"Egress\" (since such a policy would not include\nan Egress section and would otherwise default to just [ \"Ingress\" ]).\nThis field is beta-level in 1.8"
                  items:
                    description: "PolicyType string describes the NetworkPolicy type\nThis type is beta-level in 1.8"
                    type: "string"
                  type: "array"
                stagedAction:
                  description: "The staged action. If this is omitted, the default is Set."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
