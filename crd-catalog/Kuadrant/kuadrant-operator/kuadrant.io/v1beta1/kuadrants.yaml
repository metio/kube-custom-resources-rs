apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "kuadrants.kuadrant.io"
spec:
  group: "kuadrant.io"
  names:
    kind: "Kuadrant"
    listKind: "KuadrantList"
    plural: "kuadrants"
    singular: "kuadrant"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".status.conditions[0].reason"
          name: "Status"
          priority: 2
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1beta1"
      schema:
        openAPIV3Schema:
          description: "Kuadrant configures installations of Kuadrant Service Protection components"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "KuadrantSpec defines the desired state of Kuadrant"
              properties:
                limitador:
                  properties:
                    affinity:
                      description: "Affinity is a group of affinity scheduling rules."
                      properties:
                        nodeAffinity:
                          description: "Describes node affinity scheduling rules for the pod."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                properties:
                                  preference:
                                    description: "A node selector term, associated with the corresponding weight."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  weight:
                                    description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "preference"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                              properties:
                                nodeSelectorTerms:
                                  description: "Required. A list of node selector terms. The terms are ORed."
                                  items:
                                    description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  type: "array"
                              required:
                                - "nodeSelectorTerms"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        podAffinity:
                          description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                        podAntiAffinity:
                          description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                      type: "object"
                    pdb:
                      properties:
                        maxUnavailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at most \"maxUnavailable\" limitador pods\nare unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
                          x-kubernetes-int-or-string: true
                        minAvailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at least \"minAvailable\" limitador pods will\nstill be available after the eviction, i.e. even in the absence of\nthe evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\"."
                          x-kubernetes-int-or-string: true
                      type: "object"
                    replicas:
                      type: "integer"
                    resourceRequirements:
                      description: "ResourceRequirements describes the compute resource requirements."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    storage:
                      description: "Storage contains the options for Limitador counters database or in-memory data storage"
                      properties:
                        disk:
                          properties:
                            optimize:
                              description: "DiskOptimizeType defines the valid options for \"optimize\" option of the disk persistence type"
                              enum:
                                - "throughput"
                                - "disk"
                              type: "string"
                            persistentVolumeClaim:
                              properties:
                                resources:
                                  description: "Resources represents the minimum resources the volume should have.\nIgnored when VolumeName field is set"
                                  properties:
                                    requests:
                                      anyOf:
                                        - type: "integer"
                                        - type: "string"
                                      description: "Storage Resource requests to be used on the PersistentVolumeClaim.\nTo learn more about resource requests see:\nhttps://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                      x-kubernetes-int-or-string: true
                                  required:
                                    - "requests"
                                  type: "object"
                                storageClassName:
                                  type: "string"
                                volumeName:
                                  description: "VolumeName is the binding reference to the PersistentVolume backing this claim."
                                  type: "string"
                              type: "object"
                          type: "object"
                        redis:
                          properties:
                            configSecretRef:
                              description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        redis-cached:
                          properties:
                            configSecretRef:
                              description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            options:
                              properties:
                                flush-period:
                                  description: "FlushPeriod for counters in milliseconds [default: 1000]"
                                  type: "integer"
                                max-cached:
                                  description: "MaxCached refers to the maximum amount of counters cached [default: 10000]"
                                  type: "integer"
                                ratio:
                                  description: "Ratio to apply to the TTL from Redis on cached counters [default: 10]"
                                  type: "integer"
                                ttl:
                                  description: "TTL for cached counters in milliseconds [default: 5000]"
                                  type: "integer"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
              type: "object"
            status:
              description: "KuadrantStatus defines the observed state of Kuadrant"
              properties:
                conditions:
                  description: "Represents the observations of a foo's current state.\nKnown .status.conditions.type are: \"Available\""
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "type"
                  x-kubernetes-list-type: "map"
                observedGeneration:
                  description: "ObservedGeneration reflects the generation of the most recently observed spec."
                  format: "int64"
                  type: "integer"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
