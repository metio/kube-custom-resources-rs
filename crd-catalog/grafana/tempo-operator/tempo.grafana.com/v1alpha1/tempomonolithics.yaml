apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.15.0"
  name: "tempomonolithics.tempo.grafana.com"
spec:
  group: "tempo.grafana.com"
  names:
    kind: "TempoMonolithic"
    listKind: "TempoMonolithicList"
    plural: "tempomonolithics"
    singular: "tempomonolithic"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
        - description: "Tempo Version"
          jsonPath: ".status.tempoVersion"
          name: "Tempo Version"
          type: "string"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "TempoMonolithic manages a Tempo deployment in monolithic mode."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "TempoMonolithicSpec defines the desired state of TempoMonolithic."
              properties:
                affinity:
                  description: "Affinity defines the Affinity rules for scheduling pods."
                  properties:
                    nodeAffinity:
                      description: "Describes node affinity scheduling rules for the pod."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                            properties:
                              preference:
                                description: "A node selector term, associated with the corresponding weight."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              weight:
                                description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "preference"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                          properties:
                            nodeSelectorTerms:
                              description: "Required. A list of node selector terms. The terms are ORed."
                              items:
                                description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              type: "array"
                          required:
                            - "nodeSelectorTerms"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    podAffinity:
                      description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              matchLabelKeys:
                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              mismatchLabelKeys:
                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                      type: "object"
                    podAntiAffinity:
                      description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              matchLabelKeys:
                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              mismatchLabelKeys:
                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                      type: "object"
                  type: "object"
                extraConfig:
                  description: "ExtraConfig defines any extra (overlay) configuration of components."
                  properties:
                    tempo:
                      description: "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                      x-kubernetes-preserve-unknown-fields: true
                  type: "object"
                ingestion:
                  description: "Ingestion defines the trace ingestion configuration."
                  properties:
                    otlp:
                      description: "OTLP defines the ingestion configuration for the OTLP protocol."
                      properties:
                        grpc:
                          description: "GRPC defines the OTLP over gRPC configuration."
                          properties:
                            enabled:
                              default: true
                              description: "Enabled defines if OTLP over gRPC is enabled.\nDefault: enabled."
                              type: "boolean"
                            tls:
                              description: "TLS defines the TLS configuration for OTLP/gRPC ingestion.\n\n\nOn OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName`\nare provided it will use OpenShift serving certificate service."
                              properties:
                                caName:
                                  description: "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).\nIt needs to be in the same namespace as the Tempo custom resource."
                                  type: "string"
                                certName:
                                  description: "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).\nIt needs to be in the same namespace as the Tempo custom resource."
                                  type: "string"
                                enabled:
                                  description: "Enabled defines if TLS is enabled."
                                  type: "boolean"
                                minVersion:
                                  description: "MinVersion defines the minimum acceptable TLS version."
                                  type: "string"
                              type: "object"
                          required:
                            - "enabled"
                          type: "object"
                        http:
                          description: "HTTP defines the OTLP over HTTP configuration."
                          properties:
                            enabled:
                              default: true
                              description: "Enabled defines if OTLP over HTTP is enabled.\nDefault: enabled."
                              type: "boolean"
                            tls:
                              description: "TLS defines the TLS configuration for OTLP/HTTP ingestion.\n\n\nOn OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName`\nare provided it will use OpenShift serving certificate service."
                              properties:
                                caName:
                                  description: "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).\nIt needs to be in the same namespace as the Tempo custom resource."
                                  type: "string"
                                certName:
                                  description: "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).\nIt needs to be in the same namespace as the Tempo custom resource."
                                  type: "string"
                                enabled:
                                  description: "Enabled defines if TLS is enabled."
                                  type: "boolean"
                                minVersion:
                                  description: "MinVersion defines the minimum acceptable TLS version."
                                  type: "string"
                              type: "object"
                          required:
                            - "enabled"
                          type: "object"
                      type: "object"
                  type: "object"
                jaegerui:
                  description: "JaegerUI defines the Jaeger UI configuration."
                  properties:
                    authentication:
                      description: "Authentication defines the options for the oauth proxy used to protect jaeger UI"
                      properties:
                        enabled:
                          description: "Defines if the authentication will be enabled for jaeger UI."
                          type: "boolean"
                        resources:
                          description: "Resources defines the compute resource requirements of the OAuth Proxy container.\nThe OAuth Proxy performs authentication and authorization of incoming requests to Jaeger UI when multi-tenancy is disabled."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                        sar:
                          description: "SAR defines the SAR to be used in the oauth-proxy\ndefault is \"{\"namespace\": \"<tempo_stack_namespace>\", \"resource\": \"pods\", \"verb\": \"get\"}"
                          type: "string"
                      type: "object"
                    enabled:
                      description: "Enabled defines if the Jaeger UI component should be created."
                      type: "boolean"
                    ingress:
                      description: "Ingress defines the Ingress configuration for the Jaeger UI."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations defines the annotations of the Ingress object."
                          type: "object"
                        enabled:
                          description: "Enabled defines if an Ingress object should be created for Jaeger UI."
                          type: "boolean"
                        host:
                          description: "Host defines the hostname of the Ingress object."
                          type: "string"
                        ingressClassName:
                          description: "IngressClassName defines the name of an IngressClass cluster resource.\nDefines which ingress controller serves this ingress resource."
                          type: "string"
                      required:
                        - "enabled"
                      type: "object"
                    resources:
                      description: "Resources defines the compute resource requirements of the Jaeger UI container."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    route:
                      description: "Route defines the OpenShift route configuration for the Jaeger UI."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations defines the annotations of the Route object."
                          type: "object"
                        enabled:
                          description: "Enabled defines if a Route object should be created for Jaeger UI."
                          type: "boolean"
                        host:
                          description: "Host defines the hostname of the Route object."
                          type: "string"
                        termination:
                          description: "Termination specifies the termination type."
                          enum:
                            - "insecure"
                            - "edge"
                            - "passthrough"
                            - "reencrypt"
                          type: "string"
                      required:
                        - "enabled"
                      type: "object"
                    servicesQueryDuration:
                      description: "ServicesQueryDuration defines how long the services will be available in the services list"
                      type: "string"
                  required:
                    - "enabled"
                  type: "object"
                management:
                  description: "ManagementState defines whether this instance is managed by the operator or self-managed.\nDefault: Managed."
                  enum:
                    - "Managed"
                    - "Unmanaged"
                  type: "string"
                multitenancy:
                  description: "Multitenancy defines the multi-tenancy configuration."
                  properties:
                    authentication:
                      description: "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                      items:
                        description: "AuthenticationSpec defines the oidc configuration per tenant for tempo Gateway component."
                        properties:
                          oidc:
                            description: "OIDC defines the spec for the OIDC tenant's authentication."
                            properties:
                              groupClaim:
                                description: "Group claim field from ID Token"
                                type: "string"
                              issuerURL:
                                description: "IssuerURL defines the URL for issuer."
                                type: "string"
                              redirectURL:
                                description: "RedirectURL defines the URL for redirect."
                                type: "string"
                              secret:
                                description: "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                                properties:
                                  name:
                                    description: "Name of a secret in the namespace configured for tenant secrets."
                                    type: "string"
                                type: "object"
                              usernameClaim:
                                description: "User claim field from ID Token"
                                type: "string"
                            type: "object"
                          tenantId:
                            description: "TenantID defines a universally unique identifier of the tenant.\nUnlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment.\nTempo uses this ID to prefix objects in the object storage."
                            type: "string"
                          tenantName:
                            description: "TenantName defines a human readable, unique name of the tenant.\nThe value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                            type: "string"
                        required:
                          - "tenantId"
                          - "tenantName"
                        type: "object"
                      type: "array"
                    authorization:
                      description: "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                      properties:
                        roleBindings:
                          description: "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                          items:
                            description: "RoleBindingsSpec binds a set of roles to a set of subjects."
                            properties:
                              name:
                                type: "string"
                              roles:
                                items:
                                  type: "string"
                                type: "array"
                              subjects:
                                items:
                                  description: "Subject represents a subject that has been bound to a role."
                                  properties:
                                    kind:
                                      description: "SubjectKind is a kind of Tempo Gateway RBAC subject."
                                      enum:
                                        - "user"
                                        - "group"
                                      type: "string"
                                    name:
                                      type: "string"
                                  required:
                                    - "kind"
                                    - "name"
                                  type: "object"
                                type: "array"
                            required:
                              - "name"
                              - "roles"
                              - "subjects"
                            type: "object"
                          type: "array"
                        roles:
                          description: "Roles defines a set of permissions to interact with a tenant."
                          items:
                            description: "RoleSpec describes a set of permissions to interact with a tenant."
                            properties:
                              name:
                                type: "string"
                              permissions:
                                items:
                                  description: "PermissionType is a Tempo Gateway RBAC permission."
                                  enum:
                                    - "read"
                                    - "write"
                                  type: "string"
                                type: "array"
                              resources:
                                items:
                                  type: "string"
                                type: "array"
                              tenants:
                                items:
                                  type: "string"
                                type: "array"
                            required:
                              - "name"
                              - "permissions"
                              - "resources"
                              - "tenants"
                            type: "object"
                          type: "array"
                      type: "object"
                    enabled:
                      description: "Enabled defines if multi-tenancy is enabled."
                      type: "boolean"
                    mode:
                      default: "static"
                      description: "Mode defines the multitenancy mode."
                      enum:
                        - "static"
                        - "openshift"
                      type: "string"
                    resources:
                      description: "Resources defines the compute resource requirements of the gateway container.\nThe gateway performs authentication and authorization of incoming requests when multi-tenancy is enabled."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                  required:
                    - "enabled"
                    - "mode"
                  type: "object"
                nodeSelector:
                  additionalProperties:
                    type: "string"
                  description: "NodeSelector defines which labels are required by a node to schedule the pod onto it."
                  type: "object"
                observability:
                  description: "Observability defines the observability configuration of the Tempo deployment."
                  properties:
                    grafana:
                      description: "Grafana defines the Grafana configuration of the Tempo deployment."
                      properties:
                        dataSource:
                          description: "DataSource defines the Grafana data source configuration."
                          properties:
                            enabled:
                              description: "Enabled defines if a Grafana data source should be created for this Tempo deployment."
                              type: "boolean"
                            instanceSelector:
                              description: "InstanceSelector defines the Grafana instance where the data source should be created."
                              properties:
                                matchExpressions:
                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                  items:
                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                    properties:
                                      key:
                                        description: "key is the label key that the selector applies to."
                                        type: "string"
                                      operator:
                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                        type: "string"
                                      values:
                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                        items:
                                          type: "string"
                                        type: "array"
                                    required:
                                      - "key"
                                      - "operator"
                                    type: "object"
                                  type: "array"
                                matchLabels:
                                  additionalProperties:
                                    type: "string"
                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                  type: "object"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          required:
                            - "enabled"
                          type: "object"
                      type: "object"
                    metrics:
                      description: "Metrics defines the metric configuration of the Tempo deployment."
                      properties:
                        prometheusRules:
                          description: "ServiceMonitors defines the PrometheusRule configuration."
                          properties:
                            enabled:
                              description: "Enabled defines if PrometheusRule objects should be created for this Tempo deployment."
                              type: "boolean"
                          required:
                            - "enabled"
                          type: "object"
                        serviceMonitors:
                          description: "ServiceMonitors defines the ServiceMonitor configuration."
                          properties:
                            enabled:
                              description: "Enabled defines if ServiceMonitor objects should be created for this Tempo deployment."
                              type: "boolean"
                          required:
                            - "enabled"
                          type: "object"
                      type: "object"
                  type: "object"
                resources:
                  description: "Resources defines the compute resource requirements of the Tempo container."
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                      items:
                        description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                        properties:
                          name:
                            description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "name"
                      x-kubernetes-list-type: "map"
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                  type: "object"
                serviceAccount:
                  description: "ServiceAccount defines the Service Account to use for all Tempo components."
                  type: "string"
                storage:
                  description: "Storage defines the storage configuration."
                  properties:
                    traces:
                      description: "Traces defines the storage configuration for traces."
                      properties:
                        azure:
                          description: "Azure defines the configuration for Azure Storage."
                          properties:
                            secret:
                              description: "Secret is the name of a Secret containing credentials for accessing object storage.\nIt needs to be in the same namespace as the TempoMonolithic custom resource."
                              minLength: 1
                              type: "string"
                          required:
                            - "secret"
                          type: "object"
                        backend:
                          default: "memory"
                          description: "Backend defines the backend for storing traces.\nDefault: memory."
                          enum:
                            - "memory"
                            - "pv"
                            - "azure"
                            - "gcs"
                            - "s3"
                          type: "string"
                        gcs:
                          description: "GCP defines the configuration for Google Cloud Storage."
                          properties:
                            secret:
                              description: "Secret is the name of a Secret containing credentials for accessing object storage.\nIt needs to be in the same namespace as the TempoMonolithic custom resource."
                              minLength: 1
                              type: "string"
                          required:
                            - "secret"
                          type: "object"
                        s3:
                          description: "S3 defines the configuration for Amazon S3."
                          properties:
                            secret:
                              description: "Secret is the name of a Secret containing credentials for accessing object storage.\nIt needs to be in the same namespace as the TempoMonolithic custom resource."
                              minLength: 1
                              type: "string"
                            tls:
                              description: "TLS defines the TLS configuration for Amazon S3."
                              properties:
                                caName:
                                  description: "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).\nIt needs to be in the same namespace as the Tempo custom resource."
                                  type: "string"
                                certName:
                                  description: "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).\nIt needs to be in the same namespace as the Tempo custom resource."
                                  type: "string"
                                enabled:
                                  description: "Enabled defines if TLS is enabled."
                                  type: "boolean"
                                minVersion:
                                  description: "MinVersion defines the minimum acceptable TLS version."
                                  type: "string"
                              type: "object"
                          required:
                            - "secret"
                          type: "object"
                        size:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "Size defines the size of the volume where traces are stored.\nFor in-memory storage, this defines the size of the tmpfs volume.\nFor persistent volume storage, this defines the size of the persistent volume.\nFor object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo.\nDefault: 2Gi for memory, 10Gi for all other backends."
                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          x-kubernetes-int-or-string: true
                      required:
                        - "backend"
                      type: "object"
                  required:
                    - "traces"
                  type: "object"
                tolerations:
                  description: "Tolerations defines the tolerations of a node to schedule the pod onto it."
                  items:
                    description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                    properties:
                      effect:
                        description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                        type: "string"
                      key:
                        description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                        type: "string"
                      operator:
                        description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                        type: "string"
                      tolerationSeconds:
                        description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                        format: "int64"
                        type: "integer"
                      value:
                        description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                        type: "string"
                    type: "object"
                  type: "array"
              type: "object"
            status:
              description: "TempoMonolithicStatus defines the observed state of TempoMonolithic."
              properties:
                components:
                  description: "Components provides summary of all Tempo pod status, grouped per component."
                  properties:
                    tempo:
                      additionalProperties:
                        items:
                          type: "string"
                        type: "array"
                      description: "Tempo is a map of the pod status of the Tempo pods."
                      type: "object"
                  type: "object"
                conditions:
                  description: "Conditions of the Tempo deployment health."
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                operatorVersion:
                  description: "Version of the Tempo Operator."
                  type: "string"
                tempoVersion:
                  description: "Version of the managed Tempo instance."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
