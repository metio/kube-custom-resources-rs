apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "reservations.scheduling.koordinator.sh"
spec:
  group: "scheduling.koordinator.sh"
  names:
    kind: "Reservation"
    listKind: "ReservationList"
    plural: "reservations"
    singular: "reservation"
  scope: "Cluster"
  versions:
    - additionalPrinterColumns:
        - description: "The phase of reservation"
          jsonPath: ".status.phase"
          name: "Phase"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
        - jsonPath: ".status.nodeName"
          name: "Node"
          type: "string"
        - jsonPath: ".spec.ttl"
          name: "TTL"
          type: "string"
        - jsonPath: ".spec.expires"
          name: "Expires"
          type: "string"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Reservation is the Schema for the reservation API.\nA Reservation object is non-namespaced.\nAny namespaced affinity/anti-affinity of reservation scheduling can be specified in the spec.template."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              properties:
                allocateOnce:
                  default: true
                  description: "When `AllocateOnce` is set, the reserved resources are only available for the first owner who allocates successfully\nand are not allocatable to other owners anymore. Defaults to true."
                  type: "boolean"
                allocatePolicy:
                  description: "AllocatePolicy represents the allocation policy of reserved resources that Reservation expects."
                  enum:
                    - "Aligned"
                    - "Restricted"
                  type: "string"
                expires:
                  description: "Expired timestamp when the reservation is expected to expire.\nIf both `expires` and `ttl` are set, `expires` is checked first.\n`expires` and `ttl` are mutually exclusive. Defaults to being set dynamically at runtime based on the `ttl`."
                  format: "date-time"
                  type: "string"
                owners:
                  description: "Specify the owners who can allocate the reserved resources.\nMultiple owner selectors and ORed."
                  items:
                    description: "ReservationOwner indicates the owner specification which can allocate reserved resources."
                    minProperties: 1
                    properties:
                      controller:
                        properties:
                          apiVersion:
                            description: "API version of the referent."
                            type: "string"
                          blockOwnerDeletion:
                            description: "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned."
                            type: "boolean"
                          controller:
                            description: "If true, this reference points to the managing controller."
                            type: "boolean"
                          kind:
                            description: "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            type: "string"
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
                            type: "string"
                          namespace:
                            type: "string"
                          uid:
                            description: "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
                            type: "string"
                        required:
                          - "apiVersion"
                          - "kind"
                          - "name"
                          - "uid"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      labelSelector:
                        description: "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects."
                        properties:
                          matchExpressions:
                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                            items:
                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                              properties:
                                key:
                                  description: "key is the label key that the selector applies to."
                                  type: "string"
                                operator:
                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                  type: "string"
                                values:
                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                  items:
                                    type: "string"
                                  type: "array"
                              required:
                                - "key"
                                - "operator"
                              type: "object"
                            type: "array"
                          matchLabels:
                            additionalProperties:
                              type: "string"
                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            type: "object"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      object:
                        description: "Multiple field selectors are ANDed."
                        properties:
                          apiVersion:
                            description: "API version of the referent."
                            type: "string"
                          fieldPath:
                            description: "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future."
                            type: "string"
                          kind:
                            description: "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            type: "string"
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: "string"
                          namespace:
                            description: "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                            type: "string"
                          resourceVersion:
                            description: "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                            type: "string"
                          uid:
                            description: "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                            type: "string"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                    type: "object"
                  minItems: 1
                  type: "array"
                preAllocation:
                  description: "By default, the resources requirements of reservation (specified in `template.spec`) is filtered by whether the\nnode has sufficient free resources (i.e. Reservation Request <  Node Free).\nWhen `preAllocation` is set, the scheduler will skip this validation and allow overcommitment. The scheduled\nreservation would be waiting to be available until free resources are sufficient."
                  type: "boolean"
                taints:
                  description: "Specifies the reservation's taints. This can be toleranted by the reservation tolerance.\nEviction is not supported for NoExecute taints"
                  items:
                    description: "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint."
                    properties:
                      effect:
                        description: "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute."
                        type: "string"
                      key:
                        description: "Required. The taint key to be applied to a node."
                        type: "string"
                      timeAdded:
                        description: "TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints."
                        format: "date-time"
                        type: "string"
                      value:
                        description: "The taint value corresponding to the taint key."
                        type: "string"
                    required:
                      - "effect"
                      - "key"
                    type: "object"
                  type: "array"
                template:
                  description: "Template defines the scheduling requirements (resources, affinities, images, ...) processed by the scheduler just\nlike a normal pod.\nIf the `template.spec.nodeName` is specified, the scheduler will not choose another node but reserve resources on\nthe specified node."
                  x-kubernetes-preserve-unknown-fields: true
                ttl:
                  default: "24h"
                  description: "Time-to-Live period for the reservation.\n`expires` and `ttl` are mutually exclusive. Defaults to 24h. Set 0 to disable expiration."
                  type: "string"
                unschedulable:
                  description: "Unschedulable controls reservation schedulability of new pods. By default, reservation is schedulable."
                  type: "boolean"
              required:
                - "owners"
                - "template"
              type: "object"
            status:
              properties:
                allocatable:
                  additionalProperties:
                    anyOf:
                      - type: "integer"
                      - type: "string"
                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                    x-kubernetes-int-or-string: true
                  description: "Resource reserved and allocatable for owners."
                  type: "object"
                allocated:
                  additionalProperties:
                    anyOf:
                      - type: "integer"
                      - type: "string"
                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                    x-kubernetes-int-or-string: true
                  description: "Resource allocated by current owners."
                  type: "object"
                conditions:
                  description: "The `conditions` indicate the messages of reason why the reservation is still pending."
                  items:
                    properties:
                      lastProbeTime:
                        format: "date-time"
                        type: "string"
                      lastTransitionTime:
                        format: "date-time"
                        type: "string"
                      message:
                        type: "string"
                      reason:
                        type: "string"
                      status:
                        type: "string"
                      type:
                        type: "string"
                    type: "object"
                  type: "array"
                currentOwners:
                  description: "Current resource owners which allocated the reservation resources."
                  items:
                    description: "ObjectReference contains enough information to let you inspect or modify the referred object.\n---\nNew uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.\n 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.\n 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular\n    restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\".\n    Those cannot be well described when embedded.\n 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.\n 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity\n    during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple\n    and the version of the actual struct is irrelevant.\n 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type\n    will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.\n\n\nInstead of using this type, create a locally provided and used type that is well-focused on your reference.\nFor example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                    properties:
                      apiVersion:
                        description: "API version of the referent."
                        type: "string"
                      fieldPath:
                        description: "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future."
                        type: "string"
                      kind:
                        description: "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                        type: "string"
                      name:
                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                        type: "string"
                      namespace:
                        description: "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                        type: "string"
                      resourceVersion:
                        description: "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                        type: "string"
                      uid:
                        description: "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                        type: "string"
                    type: "object"
                    x-kubernetes-map-type: "atomic"
                  type: "array"
                nodeName:
                  description: "Name of node the reservation is scheduled on."
                  type: "string"
                phase:
                  description: "The `phase` indicates whether is reservation is waiting for process, available to allocate or failed/expired to\nget cleanup."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
