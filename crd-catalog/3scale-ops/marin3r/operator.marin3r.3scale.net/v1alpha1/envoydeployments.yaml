apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.17.1"
  name: "envoydeployments.operator.marin3r.3scale.net"
spec:
  group: "operator.marin3r.3scale.net"
  names:
    kind: "EnvoyDeployment"
    listKind: "EnvoyDeploymentList"
    plural: "envoydeployments"
    singular: "envoydeployment"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "EnvoyDeployment is a resource to deploy and manage a Kubernetes Deployment\nof Envoy Pods."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "EnvoyDeploymentSpec defines the desired state of EnvoyDeployment"
              properties:
                adminAccessLogPath:
                  description: "Configures envoy's admin access log path. Defaults to /dev/null."
                  type: "string"
                adminPort:
                  description: "Configures envoy's admin port. Defaults to 9901."
                  format: "int32"
                  type: "integer"
                affinity:
                  description: "Affinity configuration for the envoy pods"
                  properties:
                    nodeAffinity:
                      description: "Describes node affinity scheduling rules for the pod."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                            properties:
                              preference:
                                description: "A node selector term, associated with the corresponding weight."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              weight:
                                description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "preference"
                              - "weight"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                          properties:
                            nodeSelectorTerms:
                              description: "Required. A list of node selector terms. The terms are ORed."
                              items:
                                description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              type: "array"
                              x-kubernetes-list-type: "atomic"
                          required:
                            - "nodeSelectorTerms"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    podAffinity:
                      description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              matchLabelKeys:
                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              mismatchLabelKeys:
                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                      type: "object"
                    podAntiAffinity:
                      description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              matchLabelKeys:
                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              mismatchLabelKeys:
                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-type: "atomic"
                      type: "object"
                  type: "object"
                clusterID:
                  description: "Defines the local service cluster name where Envoy is running. Defaults\nto the NodeID in the EnvoyConfig if unset"
                  type: "string"
                discoveryServiceRef:
                  description: "DiscoveryServiceRef points to a DiscoveryService in the same\nnamespace"
                  type: "string"
                duration:
                  description: "Defines the duration of the client certificate that is used to authenticate\nwith the DiscoveryService"
                  type: "string"
                envoyConfigRef:
                  description: "EnvoyConfigRef points to an EnvoyConfig in the same namespace\nthat holds the envoy resources for this Deployment"
                  type: "string"
                extraArgs:
                  description: "Allows the user to define extra command line arguments for the Envoy process"
                  items:
                    type: "string"
                  type: "array"
                image:
                  description: "Image is the envoy image and tag to use"
                  type: "string"
                initManager:
                  description: "InitManager defines configuration for Envoy's init\nmanager, which handles initialization for Envoy pods"
                  properties:
                    image:
                      description: "Image is the init manager image and tag to use"
                      type: "string"
                  type: "object"
                livenessProbe:
                  description: "Liveness probe for the envoy pods"
                  properties:
                    failureThreshold:
                      description: "Minimum consecutive failures for the probe to be considered failed after having succeeded"
                      format: "int32"
                      type: "integer"
                    initialDelaySeconds:
                      description: "Number of seconds after the container has started before liveness probes are initiated"
                      format: "int32"
                      type: "integer"
                    periodSeconds:
                      description: "How often (in seconds) to perform the probe"
                      format: "int32"
                      type: "integer"
                    successThreshold:
                      description: "Minimum consecutive successes for the probe to be considered successful after having failed"
                      format: "int32"
                      type: "integer"
                    timeoutSeconds:
                      description: "Number of seconds after which the probe times out"
                      format: "int32"
                      type: "integer"
                  required:
                    - "failureThreshold"
                    - "initialDelaySeconds"
                    - "periodSeconds"
                    - "successThreshold"
                    - "timeoutSeconds"
                  type: "object"
                podDisruptionBudget:
                  description: "Configures PodDisruptionBudget for the envoy Pods"
                  properties:
                    maxUnavailable:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      description: "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
                      x-kubernetes-int-or-string: true
                    minAvailable:
                      anyOf:
                        - type: "integer"
                        - type: "string"
                      description: "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\"."
                      x-kubernetes-int-or-string: true
                  type: "object"
                ports:
                  description: "Ports exposed by the Envoy container"
                  items:
                    description: "ContainerPort defines port for the Marin3r sidecar container"
                    properties:
                      name:
                        description: "Port name"
                        type: "string"
                      port:
                        description: "Port value"
                        format: "int32"
                        type: "integer"
                      protocol:
                        description: "Protocol. Defaults to TCP."
                        type: "string"
                    required:
                      - "name"
                      - "port"
                    type: "object"
                  type: "array"
                readinessProbe:
                  description: "Readiness probe for the envoy pods"
                  properties:
                    failureThreshold:
                      description: "Minimum consecutive failures for the probe to be considered failed after having succeeded"
                      format: "int32"
                      type: "integer"
                    initialDelaySeconds:
                      description: "Number of seconds after the container has started before liveness probes are initiated"
                      format: "int32"
                      type: "integer"
                    periodSeconds:
                      description: "How often (in seconds) to perform the probe"
                      format: "int32"
                      type: "integer"
                    successThreshold:
                      description: "Minimum consecutive successes for the probe to be considered successful after having failed"
                      format: "int32"
                      type: "integer"
                    timeoutSeconds:
                      description: "Number of seconds after which the probe times out"
                      format: "int32"
                      type: "integer"
                  required:
                    - "failureThreshold"
                    - "initialDelaySeconds"
                    - "periodSeconds"
                    - "successThreshold"
                    - "timeoutSeconds"
                  type: "object"
                replicas:
                  description: "Replicas configures the number of replicas in the Deployment. One of\n'static', 'dynamic' can be set. If both are set, static has precedence."
                  properties:
                    dynamic:
                      description: "Configure a min and max value for the number of pods to autoscale dynamically."
                      properties:
                        behavior:
                          description: "behavior configures the scaling behavior of the target\nin both Up and Down directions (scaleUp and scaleDown fields respectively).\nIf not set, the default HPAScalingRules for scale up and scale down are used."
                          properties:
                            scaleDown:
                              description: "scaleDown is scaling policy for scaling Down.\nIf not set, the default value is to allow to scale down to minReplicas pods, with a\n300 second stabilization window (i.e., the highest recommendation for\nthe last 300sec is used)."
                              properties:
                                policies:
                                  description: "policies is a list of potential scaling polices which can be used during scaling.\nAt least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid"
                                  items:
                                    description: "HPAScalingPolicy is a single policy which must hold true for a specified past interval."
                                    properties:
                                      periodSeconds:
                                        description: "periodSeconds specifies the window of time for which the policy should hold true.\nPeriodSeconds must be greater than zero and less than or equal to 1800 (30 min)."
                                        format: "int32"
                                        type: "integer"
                                      type:
                                        description: "type is used to specify the scaling policy."
                                        type: "string"
                                      value:
                                        description: "value contains the amount of change which is permitted by the policy.\nIt must be greater than zero"
                                        format: "int32"
                                        type: "integer"
                                    required:
                                      - "periodSeconds"
                                      - "type"
                                      - "value"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                selectPolicy:
                                  description: "selectPolicy is used to specify which policy should be used.\nIf not set, the default value Max is used."
                                  type: "string"
                                stabilizationWindowSeconds:
                                  description: "stabilizationWindowSeconds is the number of seconds for which past recommendations should be\nconsidered while scaling up or scaling down.\nStabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).\nIf not set, use the default values:\n- For scale up: 0 (i.e. no stabilization is done).\n- For scale down: 300 (i.e. the stabilization window is 300 seconds long)."
                                  format: "int32"
                                  type: "integer"
                              type: "object"
                            scaleUp:
                              description: "scaleUp is scaling policy for scaling Up.\nIf not set, the default value is the higher of:\n  * increase no more than 4 pods per 60 seconds\n  * double the number of pods per 60 seconds\nNo stabilization is used."
                              properties:
                                policies:
                                  description: "policies is a list of potential scaling polices which can be used during scaling.\nAt least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid"
                                  items:
                                    description: "HPAScalingPolicy is a single policy which must hold true for a specified past interval."
                                    properties:
                                      periodSeconds:
                                        description: "periodSeconds specifies the window of time for which the policy should hold true.\nPeriodSeconds must be greater than zero and less than or equal to 1800 (30 min)."
                                        format: "int32"
                                        type: "integer"
                                      type:
                                        description: "type is used to specify the scaling policy."
                                        type: "string"
                                      value:
                                        description: "value contains the amount of change which is permitted by the policy.\nIt must be greater than zero"
                                        format: "int32"
                                        type: "integer"
                                    required:
                                      - "periodSeconds"
                                      - "type"
                                      - "value"
                                    type: "object"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                                selectPolicy:
                                  description: "selectPolicy is used to specify which policy should be used.\nIf not set, the default value Max is used."
                                  type: "string"
                                stabilizationWindowSeconds:
                                  description: "stabilizationWindowSeconds is the number of seconds for which past recommendations should be\nconsidered while scaling up or scaling down.\nStabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).\nIf not set, use the default values:\n- For scale up: 0 (i.e. no stabilization is done).\n- For scale down: 300 (i.e. the stabilization window is 300 seconds long)."
                                  format: "int32"
                                  type: "integer"
                              type: "object"
                          type: "object"
                        maxReplicas:
                          description: "maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.\nIt cannot be less that minReplicas."
                          format: "int32"
                          type: "integer"
                        metrics:
                          description: "metrics contains the specifications for which to use to calculate the\ndesired replica count (the maximum replica count across all metrics will\nbe used).  The desired replica count is calculated multiplying the\nratio between the target value and the current value by the current\nnumber of pods.  Ergo, metrics used must decrease as the pod count is\nincreased, and vice-versa.  See the individual metric source types for\nmore information about how each type of metric must respond.\nIf not set, the default metric will be set to 80% average CPU utilization."
                          items:
                            description: "MetricSpec specifies how to scale based on a single metric\n(only `type` and one other matching field should be set at once)."
                            properties:
                              containerResource:
                                description: "containerResource refers to a resource metric (such as those specified in\nrequests and limits) known to Kubernetes describing a single container in\neach pod of the current scale target (e.g. CPU or memory). Such metrics are\nbuilt in to Kubernetes, and have special scaling options on top of those\navailable to normal per-pod metrics using the \"pods\" source."
                                properties:
                                  container:
                                    description: "container is the name of the container in the pods of the scaling target"
                                    type: "string"
                                  name:
                                    description: "name is the name of the resource in question."
                                    type: "string"
                                  target:
                                    description: "target specifies the target value for the given metric"
                                    properties:
                                      averageUtilization:
                                        description: "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type"
                                        format: "int32"
                                        type: "integer"
                                      averageValue:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: "type represents whether the metric type is Utilization, Value, or AverageValue"
                                        type: "string"
                                      value:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "value is the target value of the metric (as a quantity)."
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "type"
                                    type: "object"
                                required:
                                  - "container"
                                  - "name"
                                  - "target"
                                type: "object"
                              external:
                                description: "external refers to a global metric that is not associated\nwith any Kubernetes object. It allows autoscaling based on information\ncoming from components running outside of cluster\n(for example length of queue in cloud messaging service, or\nQPS from loadbalancer running outside of cluster)."
                                properties:
                                  metric:
                                    description: "metric identifies the target metric by name and selector"
                                    properties:
                                      name:
                                        description: "name is the name of the given metric"
                                        type: "string"
                                      selector:
                                        description: "selector is the string-encoded form of a standard kubernetes label selector for the given metric\nWhen set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.\nWhen unset, just the metricName will be used to gather metrics."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                    required:
                                      - "name"
                                    type: "object"
                                  target:
                                    description: "target specifies the target value for the given metric"
                                    properties:
                                      averageUtilization:
                                        description: "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type"
                                        format: "int32"
                                        type: "integer"
                                      averageValue:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: "type represents whether the metric type is Utilization, Value, or AverageValue"
                                        type: "string"
                                      value:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "value is the target value of the metric (as a quantity)."
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "type"
                                    type: "object"
                                required:
                                  - "metric"
                                  - "target"
                                type: "object"
                              object:
                                description: "object refers to a metric describing a single kubernetes object\n(for example, hits-per-second on an Ingress object)."
                                properties:
                                  describedObject:
                                    description: "describedObject specifies the descriptions of a object,such as kind,name apiVersion"
                                    properties:
                                      apiVersion:
                                        description: "apiVersion is the API version of the referent"
                                        type: "string"
                                      kind:
                                        description: "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                        type: "string"
                                      name:
                                        description: "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                        type: "string"
                                    required:
                                      - "kind"
                                      - "name"
                                    type: "object"
                                  metric:
                                    description: "metric identifies the target metric by name and selector"
                                    properties:
                                      name:
                                        description: "name is the name of the given metric"
                                        type: "string"
                                      selector:
                                        description: "selector is the string-encoded form of a standard kubernetes label selector for the given metric\nWhen set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.\nWhen unset, just the metricName will be used to gather metrics."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                    required:
                                      - "name"
                                    type: "object"
                                  target:
                                    description: "target specifies the target value for the given metric"
                                    properties:
                                      averageUtilization:
                                        description: "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type"
                                        format: "int32"
                                        type: "integer"
                                      averageValue:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: "type represents whether the metric type is Utilization, Value, or AverageValue"
                                        type: "string"
                                      value:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "value is the target value of the metric (as a quantity)."
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "type"
                                    type: "object"
                                required:
                                  - "describedObject"
                                  - "metric"
                                  - "target"
                                type: "object"
                              pods:
                                description: "pods refers to a metric describing each pod in the current scale target\n(for example, transactions-processed-per-second).  The values will be\naveraged together before being compared to the target value."
                                properties:
                                  metric:
                                    description: "metric identifies the target metric by name and selector"
                                    properties:
                                      name:
                                        description: "name is the name of the given metric"
                                        type: "string"
                                      selector:
                                        description: "selector is the string-encoded form of a standard kubernetes label selector for the given metric\nWhen set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.\nWhen unset, just the metricName will be used to gather metrics."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                    required:
                                      - "name"
                                    type: "object"
                                  target:
                                    description: "target specifies the target value for the given metric"
                                    properties:
                                      averageUtilization:
                                        description: "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type"
                                        format: "int32"
                                        type: "integer"
                                      averageValue:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: "type represents whether the metric type is Utilization, Value, or AverageValue"
                                        type: "string"
                                      value:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "value is the target value of the metric (as a quantity)."
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "type"
                                    type: "object"
                                required:
                                  - "metric"
                                  - "target"
                                type: "object"
                              resource:
                                description: "resource refers to a resource metric (such as those specified in\nrequests and limits) known to Kubernetes describing each pod in the\ncurrent scale target (e.g. CPU or memory). Such metrics are built in to\nKubernetes, and have special scaling options on top of those available\nto normal per-pod metrics using the \"pods\" source."
                                properties:
                                  name:
                                    description: "name is the name of the resource in question."
                                    type: "string"
                                  target:
                                    description: "target specifies the target value for the given metric"
                                    properties:
                                      averageUtilization:
                                        description: "averageUtilization is the target value of the average of the\nresource metric across all relevant pods, represented as a percentage of\nthe requested value of the resource for the pods.\nCurrently only valid for Resource metric source type"
                                        format: "int32"
                                        type: "integer"
                                      averageValue:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "averageValue is the target value of the average of the\nmetric across all relevant pods (as a quantity)"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: "type represents whether the metric type is Utilization, Value, or AverageValue"
                                        type: "string"
                                      value:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "value is the target value of the metric (as a quantity)."
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "type"
                                    type: "object"
                                required:
                                  - "name"
                                  - "target"
                                type: "object"
                              type:
                                description: "type is the type of metric source.  It should be one of \"ContainerResource\", \"External\",\n\"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object."
                                type: "string"
                            required:
                              - "type"
                            type: "object"
                          type: "array"
                        minReplicas:
                          description: "minReplicas is the lower limit for the number of replicas to which the autoscaler\ncan scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the\nalpha feature gate HPAScaleToZero is enabled and at least one Object or External\nmetric is configured.  Scaling is active as long as at least one metric value is\navailable."
                          format: "int32"
                          type: "integer"
                      required:
                        - "maxReplicas"
                      type: "object"
                    static:
                      description: "Configure a static number of replicas. Defaults to 1."
                      format: "int32"
                      type: "integer"
                  type: "object"
                resources:
                  description: "Resources holds the resource requirements to use for the Envoy\nDeployment. Defaults to no resource requests nor limits."
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers."
                      items:
                        description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                        properties:
                          name:
                            description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                            type: "string"
                          request:
                            description: "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "name"
                      x-kubernetes-list-type: "map"
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                  type: "object"
                shutdownManager:
                  description: "ShutdownManager defines configuration for Envoy's shutdown\nmanager, which handles graceful termination of Envoy pods"
                  properties:
                    drainStrategy:
                      description: "The drain strategy for the graceful shutdown. It also affects\ndrain when listeners are modified or removed via LDS."
                      enum:
                        - "gradual"
                        - "immediate"
                      type: "string"
                    drainTime:
                      description: "The time in seconds that Envoy will drain connections during shutdown.\nIt also affects drain behaviour when listeners are modified or removed via LDS."
                      format: "int64"
                      type: "integer"
                    image:
                      description: "Image is the shutdown manager image and tag to use"
                      type: "string"
                    serverPort:
                      description: "Configures the sutdown manager's server port. Defaults to 8090."
                      format: "int32"
                      type: "integer"
                  type: "object"
              required:
                - "discoveryServiceRef"
                - "envoyConfigRef"
              type: "object"
            status:
              description: "EnvoyDeploymentStatus defines the observed state of EnvoyDeployment"
              properties:
                deploymentName:
                  type: "string"
                deploymentStatus:
                  description: "DeploymentStatus is the most recently observed status of the Deployment."
                  properties:
                    availableReplicas:
                      description: "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
                      format: "int32"
                      type: "integer"
                    collisionCount:
                      description: "Count of hash collisions for the Deployment. The Deployment controller uses this\nfield as a collision avoidance mechanism when it needs to create the name for the\nnewest ReplicaSet."
                      format: "int32"
                      type: "integer"
                    conditions:
                      description: "Represents the latest available observations of a deployment's current state."
                      items:
                        description: "DeploymentCondition describes the state of a deployment at a certain point."
                        properties:
                          lastTransitionTime:
                            description: "Last time the condition transitioned from one status to another."
                            format: "date-time"
                            type: "string"
                          lastUpdateTime:
                            description: "The last time this condition was updated."
                            format: "date-time"
                            type: "string"
                          message:
                            description: "A human readable message indicating details about the transition."
                            type: "string"
                          reason:
                            description: "The reason for the condition's last transition."
                            type: "string"
                          status:
                            description: "Status of the condition, one of True, False, Unknown."
                            type: "string"
                          type:
                            description: "Type of deployment condition."
                            type: "string"
                        required:
                          - "status"
                          - "type"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "type"
                      x-kubernetes-list-type: "map"
                    observedGeneration:
                      description: "The generation observed by the deployment controller."
                      format: "int64"
                      type: "integer"
                    readyReplicas:
                      description: "readyReplicas is the number of pods targeted by this Deployment with a Ready Condition."
                      format: "int32"
                      type: "integer"
                    replicas:
                      description: "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
                      format: "int32"
                      type: "integer"
                    unavailableReplicas:
                      description: "Total number of unavailable pods targeted by this deployment. This is the total number of\npods that are still required for the deployment to have 100% available capacity. They may\neither be pods that are running but not yet available or pods that still have not been created."
                      format: "int32"
                      type: "integer"
                    updatedReplicas:
                      description: "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
                      format: "int32"
                      type: "integer"
                  type: "object"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
