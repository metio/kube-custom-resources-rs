apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "quayregistries.quay.redhat.com"
spec:
  group: "quay.redhat.com"
  names:
    kind: "QuayRegistry"
    listKind: "QuayRegistryList"
    plural: "quayregistries"
    singular: "quayregistry"
  scope: "Namespaced"
  versions:
    - name: "v1"
      schema:
        openAPIV3Schema:
          description: "QuayRegistry is the Schema for the quayregistries API."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "QuayRegistrySpec defines the desired state of QuayRegistry."
              properties:
                components:
                  description: "Components declare how the Operator should handle backing Quay services."
                  items:
                    description: "Component describes how the Operator should handle a backing Quay service."
                    properties:
                      kind:
                        description: "Kind is the unique name of this type of component."
                        type: "string"
                      managed:
                        description: "Managed indicates whether or not the Operator is responsible for the lifecycle of this component.\nDefault is true."
                        type: "boolean"
                      overrides:
                        description: "Overrides holds information regarding component specific configurations."
                        properties:
                          affinity:
                            description: "Affinity is a group of affinity scheduling rules."
                            properties:
                              nodeAffinity:
                                description: "Describes node affinity scheduling rules for the pod."
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                    items:
                                      description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                      properties:
                                        preference:
                                          description: "A node selector term, associated with the corresponding weight."
                                          properties:
                                            matchExpressions:
                                              description: "A list of node selector requirements by node's labels."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchFields:
                                              description: "A list of node selector requirements by node's fields."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        weight:
                                          description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                          format: "int32"
                                          type: "integer"
                                      required:
                                        - "preference"
                                        - "weight"
                                      type: "object"
                                    type: "array"
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                    properties:
                                      nodeSelectorTerms:
                                        description: "Required. A list of node selector terms. The terms are ORed."
                                        items:
                                          description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                          properties:
                                            matchExpressions:
                                              description: "A list of node selector requirements by node's labels."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchFields:
                                              description: "A list of node selector requirements by node's fields."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        type: "array"
                                    required:
                                      - "nodeSelectorTerms"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                              podAffinity:
                                description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                    items:
                                      description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                      properties:
                                        podAffinityTerm:
                                          description: "Required. A pod affinity term, associated with the corresponding weight."
                                          properties:
                                            labelSelector:
                                              description: "A label query over a set of resources, in this case pods."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaceSelector:
                                              description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaces:
                                              description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                              items:
                                                type: "string"
                                              type: "array"
                                            topologyKey:
                                              description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                              type: "string"
                                          required:
                                            - "topologyKey"
                                          type: "object"
                                        weight:
                                          description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                          format: "int32"
                                          type: "integer"
                                      required:
                                        - "podAffinityTerm"
                                        - "weight"
                                      type: "object"
                                    type: "array"
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                    items:
                                      description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                      properties:
                                        labelSelector:
                                          description: "A label query over a set of resources, in this case pods."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaceSelector:
                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaces:
                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                          items:
                                            type: "string"
                                          type: "array"
                                        topologyKey:
                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                          type: "string"
                                      required:
                                        - "topologyKey"
                                      type: "object"
                                    type: "array"
                                type: "object"
                              podAntiAffinity:
                                description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                    items:
                                      description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                      properties:
                                        podAffinityTerm:
                                          description: "Required. A pod affinity term, associated with the corresponding weight."
                                          properties:
                                            labelSelector:
                                              description: "A label query over a set of resources, in this case pods."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaceSelector:
                                              description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaces:
                                              description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                              items:
                                                type: "string"
                                              type: "array"
                                            topologyKey:
                                              description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                              type: "string"
                                          required:
                                            - "topologyKey"
                                          type: "object"
                                        weight:
                                          description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                          format: "int32"
                                          type: "integer"
                                      required:
                                        - "podAffinityTerm"
                                        - "weight"
                                      type: "object"
                                    type: "array"
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                    items:
                                      description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                      properties:
                                        labelSelector:
                                          description: "A label query over a set of resources, in this case pods."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaceSelector:
                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaces:
                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                          items:
                                            type: "string"
                                          type: "array"
                                        topologyKey:
                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                          type: "string"
                                      required:
                                        - "topologyKey"
                                      type: "object"
                                    type: "array"
                                type: "object"
                            type: "object"
                          annotations:
                            additionalProperties:
                              type: "string"
                            type: "object"
                          env:
                            items:
                              description: "EnvVar represents an environment variable present in a Container."
                              properties:
                                name:
                                  description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                  type: "string"
                                value:
                                  description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                  type: "string"
                                valueFrom:
                                  description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                  properties:
                                    configMapKeyRef:
                                      description: "Selects a key of a ConfigMap."
                                      properties:
                                        key:
                                          description: "The key to select."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the ConfigMap or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    fieldRef:
                                      description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    secretKeyRef:
                                      description: "Selects a key of a secret in the pod's namespace"
                                      properties:
                                        key:
                                          description: "The key of the secret to select from.  Must be a valid secret key."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          labels:
                            additionalProperties:
                              type: "string"
                            type: "object"
                          replicas:
                            format: "int32"
                            nullable: true
                            type: "integer"
                          resources:
                            description: "Resources describes the resource limits and requests for a component."
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "ResourceList is a set of (resource name, quantity) pairs."
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "ResourceList is a set of (resource name, quantity) pairs."
                                type: "object"
                            type: "object"
                          volumeSize:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                        type: "object"
                    required:
                      - "kind"
                      - "managed"
                    type: "object"
                  type: "array"
                configBundleSecret:
                  description: "ConfigBundleSecret is the name of the Kubernetes `Secret` in the same namespace\nwhich contains the base Quay config and extra certs."
                  type: "string"
              type: "object"
            status:
              description: "QuayRegistryStatus defines the observed state of QuayRegistry."
              properties:
                conditions:
                  description: "Conditions represent the conditions that a QuayRegistry can have."
                  items:
                    description: "Condition is a single condition of a QuayRegistry.\nConditions should follow the \"abnormal-true\" principle in order to only bring the attention of users to \"broken\" states.\nExample: a condition of `type: \"Ready\", status: \"True\"“ is less useful and should be omitted whereas `type: \"NotReady\", status: \"True\"`\nis more useful when trying to monitor when something is wrong."
                    properties:
                      lastTransitionTime:
                        format: "date-time"
                        type: "string"
                      lastUpdateTime:
                        format: "date-time"
                        type: "string"
                      message:
                        type: "string"
                      reason:
                        type: "string"
                      status:
                        type: "string"
                      type:
                        type: "string"
                    type: "object"
                  type: "array"
                currentVersion:
                  description: "CurrentVersion is the actual version of Quay that is actively deployed."
                  type: "string"
                lastUpdated:
                  description: "LastUpdate is the timestamp when the Operator last processed this instance."
                  type: "string"
                registryEndpoint:
                  description: "RegistryEndpoint is the external access point for the Quay registry."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
