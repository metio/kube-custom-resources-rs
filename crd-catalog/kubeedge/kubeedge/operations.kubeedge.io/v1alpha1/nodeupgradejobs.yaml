apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.15.0"
  name: "nodeupgradejobs.operations.kubeedge.io"
spec:
  group: "operations.kubeedge.io"
  names:
    kind: "NodeUpgradeJob"
    listKind: "NodeUpgradeJobList"
    plural: "nodeupgradejobs"
    singular: "nodeupgradejob"
  scope: "Cluster"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "NodeUpgradeJob is used to upgrade edge node from cloud side."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Specification of the desired behavior of NodeUpgradeJob."
              properties:
                checkItems:
                  description: "CheckItems specifies the items need to be checked before the task is executed.\nThe default CheckItems value is nil."
                  items:
                    type: "string"
                  type: "array"
                concurrency:
                  description: "Concurrency specifies the max number of edge nodes that can be upgraded at the same time.\nThe default Concurrency value is 1."
                  format: "int32"
                  type: "integer"
                failureTolerate:
                  description: "FailureTolerate specifies the task tolerance failure ratio.\nThe default FailureTolerate value is 0.1."
                  type: "string"
                image:
                  description: "Image specifies a container image name, the image contains: keadm and edgecore.\nkeadm is used as upgradetool, to install the new version of edgecore.\nThe image name consists of registry hostname and repository name,\nif it includes the tag or digest, the tag or digest will be overwritten by Version field above.\nIf the registry hostname is empty, docker.io will be used as default.\nThe default image name is: kubeedge/installation-package."
                  type: "string"
                imageDigestGatter:
                  description: "ImageDigestGatter define registry v2 interface access configuration.\nAs a transition, it is not required at first, and the image digest is checked when this field is set."
                  properties:
                    registryAPI:
                      description: "RegistryAPI define registry v2 interface access configuration"
                      properties:
                        host:
                          type: "string"
                        token:
                          type: "string"
                      required:
                        - "host"
                        - "token"
                      type: "object"
                    value:
                      description: "Value used to directly set a value to check image"
                      type: "string"
                  type: "object"
                labelSelector:
                  description: "LabelSelector is a filter to select member clusters by labels.\nIt must match a node's labels for the NodeUpgradeJob to be operated on that node.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one."
                  properties:
                    matchExpressions:
                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                      items:
                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                        properties:
                          key:
                            description: "key is the label key that the selector applies to."
                            type: "string"
                          operator:
                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                            type: "string"
                          values:
                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                        required:
                          - "key"
                          - "operator"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    matchLabels:
                      additionalProperties:
                        type: "string"
                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                      type: "object"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                nodeNames:
                  description: "NodeNames is a request to select some specific nodes. If it is non-empty,\nthe upgrade job simply select these edge nodes to do upgrade operation.\nPlease note that sets of NodeNames and LabelSelector are ORed.\nUsers must set one and can only set one."
                  items:
                    type: "string"
                  type: "array"
                requireConfirmation:
                  description: "RequireConfirmation specifies whether you need to confirm the upgrade.\nThe default RequireConfirmation value is false."
                  type: "boolean"
                timeoutSeconds:
                  description: "TimeoutSeconds limits the duration of the node upgrade job.\nDefault to 300.\nIf set to 0, we'll use the default value 300."
                  format: "int32"
                  type: "integer"
                version:
                  type: "string"
              type: "object"
            status:
              description: "Most recently observed status of the NodeUpgradeJob."
              properties:
                action:
                  description: "Action represents for the action of the ImagePrePullJob.\nThere are two possible action values: Success, Failure."
                  type: "string"
                currentVersion:
                  description: "CurrentVersion represents for the current status of the EdgeCore."
                  type: "string"
                event:
                  description: "Event represents for the event of the ImagePrePullJob.\nThere are six possible event values: Init, Check, BackUp, Upgrade, TimeOut, Rollback."
                  type: "string"
                historicVersion:
                  description: "HistoricVersion represents for the historic status of the EdgeCore."
                  type: "string"
                nodeStatus:
                  description: "Status contains upgrade Status for each edge node."
                  items:
                    description: "TaskStatus stores the status of Upgrade for each edge node."
                    properties:
                      action:
                        description: "Action represents for the action of the ImagePrePullJob.\nThere are three possible action values: Success, Failure, TimeOut."
                        type: "string"
                      event:
                        description: "Event represents for the event of the ImagePrePullJob.\nThere are three possible event values: Init, Check, Pull."
                        type: "string"
                      nodeName:
                        description: "NodeName is the name of edge node."
                        type: "string"
                      reason:
                        description: "Reason represents for the reason of the ImagePrePullJob."
                        type: "string"
                      state:
                        description: "State represents for the upgrade state phase of the edge node.\nThere are several possible state values: \"\", Upgrading, BackingUp, RollingBack and Checking."
                        type: "string"
                      time:
                        description: "Time represents for the running time of the ImagePrePullJob."
                        type: "string"
                    type: "object"
                  type: "array"
                reason:
                  description: "Reason represents for the reason of the ImagePrePullJob."
                  type: "string"
                state:
                  description: "State represents for the state phase of the NodeUpgradeJob.\nThere are several possible state values: \"\", Upgrading, BackingUp, RollingBack and Checking."
                  type: "string"
                time:
                  description: "Time represents for the running time of the ImagePrePullJob."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
