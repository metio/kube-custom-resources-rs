apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.15.0"
  name: "edgeapplications.apps.kubeedge.io"
spec:
  group: "apps.kubeedge.io"
  names:
    kind: "EdgeApplication"
    listKind: "EdgeApplicationList"
    plural: "edgeapplications"
    shortNames:
      - "eapp"
    singular: "edgeapplication"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "EdgeApplication is the Schema for the edgeapplications API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Spec represents the desired behavior of EdgeApplication."
              properties:
                workloadScope:
                  description: "WorkloadScope represents which node groups the workload will be deployed in."
                  properties:
                    targetNodeGroups:
                      description: "TargetNodeGroups represents the target node groups of workload to be deployed."
                      items:
                        description: "TargetNodeGroup represents the target node group of workload to be deployed, including\noverride rules to apply for this node group."
                        properties:
                          name:
                            description: "Name represents the name of target node group"
                            type: "string"
                          overriders:
                            description: "Overriders represents the override rules that would apply on workload."
                            properties:
                              argsOverriders:
                                description: "ArgsOverriders represents the rules dedicated to handling container args"
                                items:
                                  description: "CommandArgsOverrider represents the rules dedicated to handling command/args overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the command/args."
                                      enum:
                                        - "add"
                                        - "remove"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to command/args.\nItems in Value which will be appended after command/args when Operator is 'add'.\nItems in Value which match in command/args will be deleted when Operator is 'remove'.\nIf Value is empty, then the command/args will remain the same."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "containerName"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              commandOverriders:
                                description: "CommandOverriders represents the rules dedicated to handling container command"
                                items:
                                  description: "CommandArgsOverrider represents the rules dedicated to handling command/args overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the command/args."
                                      enum:
                                        - "add"
                                        - "remove"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to command/args.\nItems in Value which will be appended after command/args when Operator is 'add'.\nItems in Value which match in command/args will be deleted when Operator is 'remove'.\nIf Value is empty, then the command/args will remain the same."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "containerName"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              envOverriders:
                                description: "EnvOverriders will override the env field of the container"
                                items:
                                  description: "EnvOverrider represents the rules dedicated to handling env overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the env."
                                      enum:
                                        - "add"
                                        - "remove"
                                        - "replace"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to env.\nMust not be empty when operator is 'add' or 'replace'.\nWhen the operator is 'remove', the matched value in env will be deleted\nand only the name of the value will be matched.\nIf Value is empty, then the env will remain the same."
                                      items:
                                        description: "EnvVar represents an environment variable present in a Container."
                                        properties:
                                          name:
                                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                            type: "string"
                                          value:
                                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                            type: "string"
                                          valueFrom:
                                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                            properties:
                                              configMapKeyRef:
                                                description: "Selects a key of a ConfigMap."
                                                properties:
                                                  key:
                                                    description: "The key to select."
                                                    type: "string"
                                                  name:
                                                    default: ""
                                                    description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                                    type: "string"
                                                  optional:
                                                    description: "Specify whether the ConfigMap or its key must be defined"
                                                    type: "boolean"
                                                required:
                                                  - "key"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              fieldRef:
                                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                                properties:
                                                  apiVersion:
                                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                    type: "string"
                                                  fieldPath:
                                                    description: "Path of the field to select in the specified API version."
                                                    type: "string"
                                                required:
                                                  - "fieldPath"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              resourceFieldRef:
                                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                                properties:
                                                  containerName:
                                                    description: "Container name: required for volumes, optional for env vars"
                                                    type: "string"
                                                  divisor:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: "Required: resource to select"
                                                    type: "string"
                                                required:
                                                  - "resource"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              secretKeyRef:
                                                description: "Selects a key of a secret in the pod's namespace"
                                                properties:
                                                  key:
                                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                                    type: "string"
                                                  name:
                                                    default: ""
                                                    description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                                    type: "string"
                                                  optional:
                                                    description: "Specify whether the Secret or its key must be defined"
                                                    type: "boolean"
                                                required:
                                                  - "key"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                            type: "object"
                                        required:
                                          - "name"
                                        type: "object"
                                      type: "array"
                                  required:
                                    - "containerName"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              imageOverriders:
                                description: "ImageOverriders represents the rules dedicated to handling image overrides."
                                items:
                                  description: "ImageOverrider represents the rules dedicated to handling image overrides."
                                  properties:
                                    component:
                                      description: "Component is part of image name.\nBasically we presume an image can be made of '[registry/]repository[:tag]'.\nThe registry could be:\n- k8s.gcr.io\n- fictional.registry.example:10443\nThe repository could be:\n- kube-apiserver\n- fictional/nginx\nThe tag cloud be:\n- latest\n- v1.19.1\n- @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c"
                                      enum:
                                        - "Registry"
                                        - "Repository"
                                        - "Tag"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the image."
                                      enum:
                                        - "add"
                                        - "remove"
                                        - "replace"
                                      type: "string"
                                    predicate:
                                      description: "Predicate filters images before applying the rule.\n\n\nDefaults to nil, in that case, the system will automatically detect image fields if the resource type is\nPod, ReplicaSet, Deployment or StatefulSet by following rule:\n  - Pod: /spec/containers/<N>/image\n  - ReplicaSet: /spec/template/spec/containers/<N>/image\n  - Deployment: /spec/template/spec/containers/<N>/image\n  - StatefulSet: /spec/template/spec/containers/<N>/image\nIn addition, all images will be processed if the resource object has more than one containers.\n\n\nIf not nil, only images matches the filters will be processed."
                                      properties:
                                        path:
                                          description: "Path indicates the path of target field"
                                          type: "string"
                                      required:
                                        - "path"
                                      type: "object"
                                    value:
                                      description: "Value to be applied to image.\nMust not be empty when operator is 'add' or 'replace'.\nDefaults to empty and ignored when operator is 'remove'."
                                      type: "string"
                                  required:
                                    - "component"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              replicas:
                                description: "Replicas will override the replicas field of deployment"
                                type: "integer"
                              resourcesOverriders:
                                description: "ResourcesOverriders will override the resources field of the container"
                                items:
                                  description: "ResourcesOverrider represents the rules dedicated to handling resources overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to resources.\nMust not be empty"
                                      properties:
                                        claims:
                                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                          items:
                                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                            properties:
                                              name:
                                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                type: "string"
                                            required:
                                              - "name"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-map-keys:
                                            - "name"
                                          x-kubernetes-list-type: "map"
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                              - type: "integer"
                                              - type: "string"
                                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                            x-kubernetes-int-or-string: true
                                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                          type: "object"
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                              - type: "integer"
                                              - type: "string"
                                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                            x-kubernetes-int-or-string: true
                                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                          type: "object"
                                      type: "object"
                                  required:
                                    - "containerName"
                                  type: "object"
                                type: "array"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    targetNodeLabels:
                      description: "TargetNodeLabels represents the target nodes with specified labels of workload to be deployed"
                      items:
                        description: "TargetNodeLabels represents the target nodes with specified labels of workload to be deployed, including\noverride rules to apply for the node."
                        properties:
                          labelSelector:
                            description: "LabelSelector represents the label selectors used to match nodes for workload deployment.\nIt defines the criteria for selecting the target nodes based on their labels."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                      x-kubernetes-list-type: "atomic"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          overriders:
                            description: "Overriders represents the override rules that would apply to the workload for the nodes\nselected by the label selector."
                            properties:
                              argsOverriders:
                                description: "ArgsOverriders represents the rules dedicated to handling container args"
                                items:
                                  description: "CommandArgsOverrider represents the rules dedicated to handling command/args overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the command/args."
                                      enum:
                                        - "add"
                                        - "remove"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to command/args.\nItems in Value which will be appended after command/args when Operator is 'add'.\nItems in Value which match in command/args will be deleted when Operator is 'remove'.\nIf Value is empty, then the command/args will remain the same."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "containerName"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              commandOverriders:
                                description: "CommandOverriders represents the rules dedicated to handling container command"
                                items:
                                  description: "CommandArgsOverrider represents the rules dedicated to handling command/args overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the command/args."
                                      enum:
                                        - "add"
                                        - "remove"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to command/args.\nItems in Value which will be appended after command/args when Operator is 'add'.\nItems in Value which match in command/args will be deleted when Operator is 'remove'.\nIf Value is empty, then the command/args will remain the same."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "containerName"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              envOverriders:
                                description: "EnvOverriders will override the env field of the container"
                                items:
                                  description: "EnvOverrider represents the rules dedicated to handling env overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the env."
                                      enum:
                                        - "add"
                                        - "remove"
                                        - "replace"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to env.\nMust not be empty when operator is 'add' or 'replace'.\nWhen the operator is 'remove', the matched value in env will be deleted\nand only the name of the value will be matched.\nIf Value is empty, then the env will remain the same."
                                      items:
                                        description: "EnvVar represents an environment variable present in a Container."
                                        properties:
                                          name:
                                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                            type: "string"
                                          value:
                                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                            type: "string"
                                          valueFrom:
                                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                            properties:
                                              configMapKeyRef:
                                                description: "Selects a key of a ConfigMap."
                                                properties:
                                                  key:
                                                    description: "The key to select."
                                                    type: "string"
                                                  name:
                                                    default: ""
                                                    description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                                    type: "string"
                                                  optional:
                                                    description: "Specify whether the ConfigMap or its key must be defined"
                                                    type: "boolean"
                                                required:
                                                  - "key"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              fieldRef:
                                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                                properties:
                                                  apiVersion:
                                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                    type: "string"
                                                  fieldPath:
                                                    description: "Path of the field to select in the specified API version."
                                                    type: "string"
                                                required:
                                                  - "fieldPath"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              resourceFieldRef:
                                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                                properties:
                                                  containerName:
                                                    description: "Container name: required for volumes, optional for env vars"
                                                    type: "string"
                                                  divisor:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: "Required: resource to select"
                                                    type: "string"
                                                required:
                                                  - "resource"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              secretKeyRef:
                                                description: "Selects a key of a secret in the pod's namespace"
                                                properties:
                                                  key:
                                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                                    type: "string"
                                                  name:
                                                    default: ""
                                                    description: "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                                                    type: "string"
                                                  optional:
                                                    description: "Specify whether the Secret or its key must be defined"
                                                    type: "boolean"
                                                required:
                                                  - "key"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                            type: "object"
                                        required:
                                          - "name"
                                        type: "object"
                                      type: "array"
                                  required:
                                    - "containerName"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              imageOverriders:
                                description: "ImageOverriders represents the rules dedicated to handling image overrides."
                                items:
                                  description: "ImageOverrider represents the rules dedicated to handling image overrides."
                                  properties:
                                    component:
                                      description: "Component is part of image name.\nBasically we presume an image can be made of '[registry/]repository[:tag]'.\nThe registry could be:\n- k8s.gcr.io\n- fictional.registry.example:10443\nThe repository could be:\n- kube-apiserver\n- fictional/nginx\nThe tag cloud be:\n- latest\n- v1.19.1\n- @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c"
                                      enum:
                                        - "Registry"
                                        - "Repository"
                                        - "Tag"
                                      type: "string"
                                    operator:
                                      description: "Operator represents the operator which will apply on the image."
                                      enum:
                                        - "add"
                                        - "remove"
                                        - "replace"
                                      type: "string"
                                    predicate:
                                      description: "Predicate filters images before applying the rule.\n\n\nDefaults to nil, in that case, the system will automatically detect image fields if the resource type is\nPod, ReplicaSet, Deployment or StatefulSet by following rule:\n  - Pod: /spec/containers/<N>/image\n  - ReplicaSet: /spec/template/spec/containers/<N>/image\n  - Deployment: /spec/template/spec/containers/<N>/image\n  - StatefulSet: /spec/template/spec/containers/<N>/image\nIn addition, all images will be processed if the resource object has more than one containers.\n\n\nIf not nil, only images matches the filters will be processed."
                                      properties:
                                        path:
                                          description: "Path indicates the path of target field"
                                          type: "string"
                                      required:
                                        - "path"
                                      type: "object"
                                    value:
                                      description: "Value to be applied to image.\nMust not be empty when operator is 'add' or 'replace'.\nDefaults to empty and ignored when operator is 'remove'."
                                      type: "string"
                                  required:
                                    - "component"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              replicas:
                                description: "Replicas will override the replicas field of deployment"
                                type: "integer"
                              resourcesOverriders:
                                description: "ResourcesOverriders will override the resources field of the container"
                                items:
                                  description: "ResourcesOverrider represents the rules dedicated to handling resources overrides."
                                  properties:
                                    containerName:
                                      description: "The name of container"
                                      type: "string"
                                    value:
                                      description: "Value to be applied to resources.\nMust not be empty"
                                      properties:
                                        claims:
                                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                          items:
                                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                            properties:
                                              name:
                                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                type: "string"
                                            required:
                                              - "name"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-map-keys:
                                            - "name"
                                          x-kubernetes-list-type: "map"
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                              - type: "integer"
                                              - type: "string"
                                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                            x-kubernetes-int-or-string: true
                                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                          type: "object"
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                              - type: "integer"
                                              - type: "string"
                                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                            x-kubernetes-int-or-string: true
                                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                          type: "object"
                                      type: "object"
                                  required:
                                    - "containerName"
                                  type: "object"
                                type: "array"
                            type: "object"
                        type: "object"
                      type: "array"
                  type: "object"
                workloadTemplate:
                  description: "WorkloadTemplate contains original templates of resources to be deployed\nas an EdgeApplication."
                  properties:
                    manifests:
                      description: "Manifests represent a list of Kubernetes resources to be deployed on the managed node groups."
                      items:
                        description: "Manifest represents a resource to be deployed on managed node groups."
                        type: "object"
                        x-kubernetes-preserve-unknown-fields: true
                      type: "array"
                  type: "object"
              required:
                - "workloadScope"
              type: "object"
            status:
              description: "Status represents the status of PropagationStatus."
              properties:
                workloadStatus:
                  description: "WorkloadStatus contains running statuses of generated resources."
                  items:
                    description: "ManifestStatus contains running status of a specific manifest in spec."
                    properties:
                      conditions:
                        description: "Conditions contain the different condition statuses for this manifest.\nValid condition types are:\n1. Processing: this workload is under processing and the current state of manifest does not match the desired.\n2. Available: the current status of this workload matches the desired."
                        enum:
                          - "Processing"
                          - "Available"
                        type: "string"
                      identifier:
                        description: "Identifier represents the identity of a resource linking to manifests in spec."
                        properties:
                          group:
                            description: "Group is the group of the resource."
                            type: "string"
                          kind:
                            description: "Kind is the kind of the resource."
                            type: "string"
                          name:
                            description: "Name is the name of the resource"
                            type: "string"
                          namespace:
                            description: "Namespace is the namespace of the resource"
                            type: "string"
                          ordinal:
                            description: "Ordinal represents an index in manifests list, so the condition can still be linked\nto a manifest even though manifest cannot be parsed successfully."
                            minimum: 0.0
                            type: "integer"
                          resource:
                            description: "Resource is the resource type of the resource"
                            type: "string"
                          version:
                            description: "Version is the version of the resource."
                            type: "string"
                        required:
                          - "ordinal"
                        type: "object"
                    required:
                      - "identifier"
                    type: "object"
                  type: "array"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
