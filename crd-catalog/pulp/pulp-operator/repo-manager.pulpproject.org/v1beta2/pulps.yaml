apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "pulps.repo-manager.pulpproject.org"
spec:
  group: "repo-manager.pulpproject.org"
  names:
    kind: "Pulp"
    listKind: "PulpList"
    plural: "pulps"
    singular: "pulp"
  scope: "Namespaced"
  versions:
    - name: "v1beta2"
      schema:
        openAPIV3Schema:
          description: "Pulp is the Schema for the pulps API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "PulpSpec defines the desired state of Pulp"
              properties:
                admin_password_job:
                  description: "Job to reset pulp admin password"
                  properties:
                    container:
                      description: "PulpContainer defines configuration of the \"auxiliary\" containers that run in pulpcore pods"
                      properties:
                        env_vars:
                          description: "Environment variables to add to the container"
                          items:
                            description: "EnvVar represents an environment variable present in a Container."
                            properties:
                              name:
                                description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                type: "string"
                              value:
                                description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                type: "string"
                              valueFrom:
                                description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                properties:
                                  configMapKeyRef:
                                    description: "Selects a key of a ConfigMap."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  fieldRef:
                                    description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    properties:
                                      apiVersion:
                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                        type: "string"
                                      fieldPath:
                                        description: "Path of the field to select in the specified API version."
                                        type: "string"
                                    required:
                                      - "fieldPath"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  resourceFieldRef:
                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                    properties:
                                      containerName:
                                        description: "Container name: required for volumes, optional for env vars"
                                        type: "string"
                                      divisor:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: "Required: resource to select"
                                        type: "string"
                                    required:
                                      - "resource"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secretKeyRef:
                                    description: "Selects a key of a secret in the pod's namespace"
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                        image:
                          description: "The image name for the container.\nBy default, if not provided, it will use the same image from .Spec.Image.\nWARN: defining a different image than the one used by API pods can cause unexpected behaviors!"
                          type: "string"
                        resource_requirements:
                          description: "Resource requirements for pulpcore aux container."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
                admin_password_secret:
                  description: "Secret where the administrator password can be found.\nDefault: <operator's name> + \"-admin-password\""
                  type: "string"
                allowed_content_checksums:
                  description: "List of allowed checksum algorithms used to verify repository's integrity.\nValid options: [\"md5\",\"sha1\",\"sha256\",\"sha512\"]."
                  items:
                    type: "string"
                  type: "array"
                api:
                  default:
                    replicas: 1
                  description: "Api defines desired state of pulpcore-api resources"
                  properties:
                    affinity:
                      description: "Affinity is a group of affinity scheduling rules."
                      properties:
                        nodeAffinity:
                          description: "Describes node affinity scheduling rules for the pod."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                properties:
                                  preference:
                                    description: "A node selector term, associated with the corresponding weight."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  weight:
                                    description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "preference"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                              properties:
                                nodeSelectorTerms:
                                  description: "Required. A list of node selector terms. The terms are ORed."
                                  items:
                                    description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  type: "array"
                              required:
                                - "nodeSelectorTerms"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        podAffinity:
                          description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                        podAntiAffinity:
                          description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                      type: "object"
                    deployment_annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations for the api deployment"
                      type: "object"
                    env_vars:
                      description: "Environment variables to add to pulpcore-api container"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    gunicorn_timeout:
                      default: 90
                      description: "The timeout for the gunicorn process.\nDefault: 90"
                      type: "integer"
                    gunicorn_workers:
                      default: 2
                      description: "The number of gunicorn workers to use for the api.\nDefault: 2"
                      type: "integer"
                    init_container:
                      description: "InitContainer defines configuration of the init-containers that run in pulpcore pods"
                      properties:
                        env_vars:
                          description: "Environment variables to add to the container"
                          items:
                            description: "EnvVar represents an environment variable present in a Container."
                            properties:
                              name:
                                description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                type: "string"
                              value:
                                description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                type: "string"
                              valueFrom:
                                description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                properties:
                                  configMapKeyRef:
                                    description: "Selects a key of a ConfigMap."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  fieldRef:
                                    description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    properties:
                                      apiVersion:
                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                        type: "string"
                                      fieldPath:
                                        description: "Path of the field to select in the specified API version."
                                        type: "string"
                                    required:
                                      - "fieldPath"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  resourceFieldRef:
                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                    properties:
                                      containerName:
                                        description: "Container name: required for volumes, optional for env vars"
                                        type: "string"
                                      divisor:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: "Required: resource to select"
                                        type: "string"
                                    required:
                                      - "resource"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secretKeyRef:
                                    description: "Selects a key of a secret in the pod's namespace"
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                        image:
                          description: "The image name for the container.\nBy default, if not provided, it will use the same image from .Spec.Image.\nWARN: defining a different image than the one used by API pods can cause unexpected behaviors!"
                          type: "string"
                        resource_requirements:
                          description: "Resource requirements for pulpcore aux container."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                      type: "object"
                    livenessProbe:
                      description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    node_selector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector for the Pulp pods."
                      type: "object"
                    pdb:
                      description: "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"
                      properties:
                        maxUnavailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
                          x-kubernetes-int-or-string: true
                        minAvailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\"."
                          x-kubernetes-int-or-string: true
                        selector:
                          description: "Label query over pods whose evictions are managed by the disruption\nbudget.\nA null selector will match no pods, while an empty ({}) selector will select\nall pods within the namespace."
                          properties:
                            matchExpressions:
                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              items:
                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                properties:
                                  key:
                                    description: "key is the label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                    type: "string"
                                  values:
                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                            matchLabels:
                              additionalProperties:
                                type: "string"
                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              type: "object"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        unhealthyPodEvictionPolicy:
                          description: "UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods\nshould be considered for eviction. Current implementation considers healthy pods,\nas pods that have status.conditions item with type=\"Ready\",status=\"True\".\n\n\nValid policies are IfHealthyBudget and AlwaysAllow.\nIf no policy is specified, the default behavior will be used,\nwhich corresponds to the IfHealthyBudget policy.\n\n\nIfHealthyBudget policy means that running pods (status.phase=\"Running\"),\nbut not yet healthy can be evicted only if the guarded application is not\ndisrupted (status.currentHealthy is at least equal to status.desiredHealthy).\nHealthy pods will be subject to the PDB for eviction.\n\n\nAlwaysAllow policy means that all running pods (status.phase=\"Running\"),\nbut not yet healthy are considered disrupted and can be evicted regardless\nof whether the criteria in a PDB is met. This means perspective running\npods of a disrupted application might not get a chance to become healthy.\nHealthy pods will be subject to the PDB for eviction.\n\n\nAdditional policies may be added in the future.\nClients making eviction decisions should disallow eviction of unhealthy pods\nif they encounter an unrecognized policy in this field.\n\n\nThis field is beta-level. The eviction API uses this field when\nthe feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default)."
                          type: "string"
                      type: "object"
                    readinessProbe:
                      description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    replicas:
                      default: 1
                      description: "Size is the size of number of pulp-api replicas.\nDefault: 1"
                      format: "int32"
                      minimum: 0.0
                      nullable: true
                      type: "integer"
                    resource_requirements:
                      description: "Resource requirements for the pulp api container."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    strategy:
                      description: "The deployment strategy to use to replace existing pods with new ones."
                      properties:
                        rollingUpdate:
                          description: "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be."
                          properties:
                            maxSurge:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                              x-kubernetes-int-or-string: true
                          type: "object"
                        type:
                          description: "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
                          type: "string"
                      type: "object"
                    tolerations:
                      description: "Node tolerations for the Pulp pods."
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                    topology_spread_constraints:
                      description: "Topology rule(s) for the pods."
                      items:
                        description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                        properties:
                          labelSelector:
                            description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          matchLabelKeys:
                            description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          maxSkew:
                            description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                            format: "int32"
                            type: "integer"
                          minDomains:
                            description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default)."
                            format: "int32"
                            type: "integer"
                          nodeAffinityPolicy:
                            description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          nodeTaintsPolicy:
                            description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          topologyKey:
                            description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                            type: "string"
                          whenUnsatisfiable:
                            description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                            type: "string"
                        required:
                          - "maxSkew"
                          - "topologyKey"
                          - "whenUnsatisfiable"
                        type: "object"
                      type: "array"
                  type: "object"
                cache:
                  description: "Cache defines desired state of redis resources"
                  properties:
                    affinity:
                      description: "Affinity is a group of affinity scheduling rules."
                      properties:
                        nodeAffinity:
                          description: "Describes node affinity scheduling rules for the pod."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                properties:
                                  preference:
                                    description: "A node selector term, associated with the corresponding weight."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  weight:
                                    description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "preference"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                              properties:
                                nodeSelectorTerms:
                                  description: "Required. A list of node selector terms. The terms are ORed."
                                  items:
                                    description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  type: "array"
                              required:
                                - "nodeSelectorTerms"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        podAffinity:
                          description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                        podAntiAffinity:
                          description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                      type: "object"
                    deployment_annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations for the cache deployment"
                      type: "object"
                    enabled:
                      default: true
                      description: "Defines if cache should be enabled.\nDefault: true"
                      type: "boolean"
                    external_cache_secret:
                      description: "Name of the secret with the parameters to connect to an external Redis cluster"
                      type: "string"
                    livenessProbe:
                      description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    node_selector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector for the Pulp pods."
                      type: "object"
                    pvc:
                      description: "PersistenVolumeClaim name that will be used by Redis pods\nIf defined, the PVC must be provisioned by the user and the operator will only\nconfigure the deployment to use it"
                      type: "string"
                    readinessProbe:
                      description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    redis_image:
                      description: "The image name for the redis image.\nDefault: \"redis:latest\""
                      type: "string"
                    redis_port:
                      description: "The port that will be exposed by Redis Service. [default: 6379]"
                      type: "integer"
                    redis_resource_requirements:
                      description: "Resource requirements for the Redis container"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    redis_storage_class:
                      description: "Storage class to use for the Redis PVC"
                      type: "string"
                    strategy:
                      description: "The deployment strategy to use to replace existing pods with new ones."
                      properties:
                        rollingUpdate:
                          description: "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be."
                          properties:
                            maxSurge:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                              x-kubernetes-int-or-string: true
                          type: "object"
                        type:
                          description: "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
                          type: "string"
                      type: "object"
                    tolerations:
                      description: "Node tolerations for the Pulp pods."
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                  type: "object"
                container_auth_private_key_name:
                  default: "container_auth_private_key.pem"
                  description: "Private Key name from `<operator's name> + \"-container-auth-certs\"` Secret.\nDefault: \"container_auth_private_key.pem\""
                  type: "string"
                container_auth_public_key_name:
                  default: "container_auth_public_key.pem"
                  description: "Public Key name from `<operator's name> + \"-container-auth-certs\"` Secret.\nDefault: \"container_auth_public_key.pem\""
                  type: "string"
                container_token_secret:
                  description: "Secret where the container token certificates are stored.\nDefault: <operator's name> + \"-container-auth\""
                  type: "string"
                content:
                  description: "Content defines desired state of pulpcore-content resources"
                  properties:
                    affinity:
                      description: "Affinity is a group of affinity scheduling rules."
                      properties:
                        nodeAffinity:
                          description: "Describes node affinity scheduling rules for the pod."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                properties:
                                  preference:
                                    description: "A node selector term, associated with the corresponding weight."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  weight:
                                    description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "preference"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                              properties:
                                nodeSelectorTerms:
                                  description: "Required. A list of node selector terms. The terms are ORed."
                                  items:
                                    description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  type: "array"
                              required:
                                - "nodeSelectorTerms"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        podAffinity:
                          description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                        podAntiAffinity:
                          description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                      type: "object"
                    deployment_annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations for the content deployment"
                      type: "object"
                    env_vars:
                      description: "Environment variables to add to pulpcore-content container"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    gunicorn_timeout:
                      default: 90
                      description: "The timeout for the gunicorn process.\nDefault: 90"
                      type: "integer"
                    gunicorn_workers:
                      default: 2
                      description: "The number of gunicorn workers to use for the api.\nDefault: 2"
                      type: "integer"
                    init_container:
                      description: "InitContainer defines configuration of the init-containers that run in pulpcore pods"
                      properties:
                        env_vars:
                          description: "Environment variables to add to the container"
                          items:
                            description: "EnvVar represents an environment variable present in a Container."
                            properties:
                              name:
                                description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                type: "string"
                              value:
                                description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                type: "string"
                              valueFrom:
                                description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                properties:
                                  configMapKeyRef:
                                    description: "Selects a key of a ConfigMap."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  fieldRef:
                                    description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    properties:
                                      apiVersion:
                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                        type: "string"
                                      fieldPath:
                                        description: "Path of the field to select in the specified API version."
                                        type: "string"
                                    required:
                                      - "fieldPath"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  resourceFieldRef:
                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                    properties:
                                      containerName:
                                        description: "Container name: required for volumes, optional for env vars"
                                        type: "string"
                                      divisor:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: "Required: resource to select"
                                        type: "string"
                                    required:
                                      - "resource"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secretKeyRef:
                                    description: "Selects a key of a secret in the pod's namespace"
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                        image:
                          description: "The image name for the container.\nBy default, if not provided, it will use the same image from .Spec.Image.\nWARN: defining a different image than the one used by API pods can cause unexpected behaviors!"
                          type: "string"
                        resource_requirements:
                          description: "Resource requirements for pulpcore aux container."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                      type: "object"
                    livenessProbe:
                      description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    node_selector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector for the Pulp pods."
                      type: "object"
                    pdb:
                      description: "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"
                      properties:
                        maxUnavailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
                          x-kubernetes-int-or-string: true
                        minAvailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\"."
                          x-kubernetes-int-or-string: true
                        selector:
                          description: "Label query over pods whose evictions are managed by the disruption\nbudget.\nA null selector will match no pods, while an empty ({}) selector will select\nall pods within the namespace."
                          properties:
                            matchExpressions:
                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              items:
                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                properties:
                                  key:
                                    description: "key is the label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                    type: "string"
                                  values:
                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                            matchLabels:
                              additionalProperties:
                                type: "string"
                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              type: "object"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        unhealthyPodEvictionPolicy:
                          description: "UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods\nshould be considered for eviction. Current implementation considers healthy pods,\nas pods that have status.conditions item with type=\"Ready\",status=\"True\".\n\n\nValid policies are IfHealthyBudget and AlwaysAllow.\nIf no policy is specified, the default behavior will be used,\nwhich corresponds to the IfHealthyBudget policy.\n\n\nIfHealthyBudget policy means that running pods (status.phase=\"Running\"),\nbut not yet healthy can be evicted only if the guarded application is not\ndisrupted (status.currentHealthy is at least equal to status.desiredHealthy).\nHealthy pods will be subject to the PDB for eviction.\n\n\nAlwaysAllow policy means that all running pods (status.phase=\"Running\"),\nbut not yet healthy are considered disrupted and can be evicted regardless\nof whether the criteria in a PDB is met. This means perspective running\npods of a disrupted application might not get a chance to become healthy.\nHealthy pods will be subject to the PDB for eviction.\n\n\nAdditional policies may be added in the future.\nClients making eviction decisions should disallow eviction of unhealthy pods\nif they encounter an unrecognized policy in this field.\n\n\nThis field is beta-level. The eviction API uses this field when\nthe feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default)."
                          type: "string"
                      type: "object"
                    readinessProbe:
                      description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    replicas:
                      default: 2
                      description: "Size is the size of number of pulp-content replicas.\nDefault: 2"
                      format: "int32"
                      minimum: 0.0
                      nullable: true
                      type: "integer"
                    resource_requirements:
                      description: "Resource requirements for the pulp-content container"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    strategy:
                      description: "The deployment strategy to use to replace existing pods with new ones."
                      properties:
                        rollingUpdate:
                          description: "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be."
                          properties:
                            maxSurge:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                              x-kubernetes-int-or-string: true
                          type: "object"
                        type:
                          description: "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
                          type: "string"
                      type: "object"
                    tolerations:
                      description: "Node tolerations for the Pulp pods."
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                    topology_spread_constraints:
                      description: "Topology rule(s) for the pods."
                      items:
                        description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                        properties:
                          labelSelector:
                            description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          matchLabelKeys:
                            description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          maxSkew:
                            description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                            format: "int32"
                            type: "integer"
                          minDomains:
                            description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default)."
                            format: "int32"
                            type: "integer"
                          nodeAffinityPolicy:
                            description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          nodeTaintsPolicy:
                            description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          topologyKey:
                            description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                            type: "string"
                          whenUnsatisfiable:
                            description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                            type: "string"
                        required:
                          - "maxSkew"
                          - "topologyKey"
                          - "whenUnsatisfiable"
                        type: "object"
                      type: "array"
                  type: "object"
                custom_pulp_settings:
                  description: "Name of the ConfigMap to define Pulp configurations not available\nthrough this CR."
                  type: "string"
                database:
                  description: "Database defines desired state of postgres resources"
                  properties:
                    affinity:
                      description: "Affinity is a group of affinity scheduling rules."
                      properties:
                        nodeAffinity:
                          description: "Describes node affinity scheduling rules for the pod."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                properties:
                                  preference:
                                    description: "A node selector term, associated with the corresponding weight."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  weight:
                                    description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "preference"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                              properties:
                                nodeSelectorTerms:
                                  description: "Required. A list of node selector terms. The terms are ORed."
                                  items:
                                    description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  type: "array"
                              required:
                                - "nodeSelectorTerms"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        podAffinity:
                          description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                        podAntiAffinity:
                          description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                      type: "object"
                    external_db_secret:
                      description: "Secret name with the configuration to use an external database"
                      type: "string"
                    livenessProbe:
                      description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    node_selector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector for the database pod."
                      type: "object"
                    postgres_data_path:
                      description: "Registry path to the PostgreSQL container to use.\nDefault: \"/var/lib/postgresql/data/pgdata\""
                      type: "string"
                    postgres_extra_args:
                      description: "Arguments to pass to postgres process"
                      items:
                        type: "string"
                      type: "array"
                    postgres_host_auth_method:
                      description: "PostgreSQL host authentication method.\nDefault: \"scram-sha-256\""
                      type: "string"
                    postgres_image:
                      description: "PostgreSQL container image.\nDefault: \"postgres:13\""
                      type: "string"
                    postgres_initdb_args:
                      description: "Arguments to pass to PostgreSQL initdb command when creating a new cluster.\nDefault: \"--auth-host=scram-sha-256\""
                      type: "string"
                    postgres_port:
                      description: "PostgreSQL port.\nDefault: 5432"
                      type: "integer"
                    postgres_resource_requirements:
                      description: "Resource requirements for the database container."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    postgres_ssl_mode:
                      description: "Configure PostgreSQL connection sslmode option.\nDefault: \"prefer\""
                      type: "string"
                    postgres_storage_class:
                      description: "Name of the StorageClass required by the claim."
                      type: "string"
                    postgres_storage_requirements:
                      description: "Temporarily modifying it as a string to avoid an issue with backup and json.Unmarshal\nwhen set as resource.Quantity and no value passed on pulp CR, during backup steps\njson.Unmarshal is settings it with \"0\""
                      type: "string"
                    pvc:
                      description: "PersistenVolumeClaim name that will be used by database pods\nIf defined, the PVC must be provisioned by the user and the operator will only\nconfigure the deployment to use it"
                      type: "string"
                    readinessProbe:
                      description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    tolerations:
                      description: "Node tolerations for the database pod."
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                    version:
                      description: "PostgreSQL version [default: \"13\"]"
                      type: "string"
                  type: "object"
                db_fields_encryption_secret:
                  description: "Secret where the Fernet symmetric encryption key is stored.\nDefault: <operators's name>-\"-db-fields-encryption\""
                  type: "string"
                deploy_ee_defaults:
                  description: "Define if the operator should or should not deploy the default Execution Environments.\nDefault: false"
                  type: "boolean"
                deployment_type:
                  default: "pulp"
                  description: "Name of the deployment type.\nDefault: \"pulp\""
                  enum:
                    - "pulp"
                    - "galaxy"
                  type: "string"
                disable_migrations:
                  description: "Disable database migrations. Useful for situations in which we don't want\nto automatically run the database migrations, for example, during restore."
                  type: "boolean"
                ee_defaults:
                  description: "Name of the ConfigMap with the list of Execution Environments that should be synchronized.\nDefault: ee-default-images"
                  type: "string"
                enable_debugging:
                  description: "By default Pulp logs at INFO level, but enabling DEBUG logging can be a\nhelpful thing to get more insight when things don’t go as expected.\nDefault: false"
                  type: "boolean"
                file_storage_access_mode:
                  description: "The file storage access mode.\nThis field should be used only if file_storage_storage_class is provided"
                  enum:
                    - "ReadWriteMany"
                    - "ReadWriteOnce"
                  type: "string"
                file_storage_size:
                  description: "The size of the file storage; for example 100Gi.\nThis field should be used only if file_storage_storage_class is provided"
                  type: "string"
                file_storage_storage_class:
                  description: "Storage class to use for the file persistentVolumeClaim"
                  type: "string"
                haproxy_timeout:
                  description: "The timeout for HAProxy.\nDefault: \"180s\""
                  type: "string"
                image:
                  default: "quay.io/pulp/pulp-minimal"
                  description: "The image name (repo name) for the pulp image.\nDefault: \"quay.io/pulp/pulp-minimal:stable\""
                  type: "string"
                image_pull_policy:
                  default: "IfNotPresent"
                  description: "Image pull policy for container image.\nDefault: \"IfNotPresent\""
                  enum:
                    - "IfNotPresent"
                    - "Always"
                    - "Never"
                  type: "string"
                image_pull_secrets:
                  description: "Image pull secrets for container images.\nDefault: []"
                  items:
                    type: "string"
                  type: "array"
                image_version:
                  default: "stable"
                  description: "The image version for the pulp image.\nDefault: \"stable\""
                  type: "string"
                image_web:
                  default: "quay.io/pulp/pulp-web"
                  description: "The image name (repo name) for the pulp webserver image.\nDefault: \"quay.io/pulp/pulp-web\""
                  type: "string"
                image_web_version:
                  default: "stable"
                  description: "The image version for the pulp webserver image.\nDefault: \"stable\""
                  type: "string"
                ingress_annotations:
                  additionalProperties:
                    type: "string"
                  description: "Annotations for the Ingress"
                  type: "object"
                ingress_class_name:
                  description: "IngressClassName is used to inform the operator which ingressclass should be used to provision the ingress.\nDefault: \"\" (will use the default ingress class)"
                  type: "string"
                ingress_host:
                  description: "Ingress DNS host"
                  type: "string"
                ingress_tls_secret:
                  description: "Ingress TLS secret"
                  type: "string"
                ingress_type:
                  description: "The ingress type to use to reach the deployed instance.\nDefault: none (will not expose the service)"
                  enum:
                    - "none"
                    - "Ingress"
                    - "ingress"
                    - "Route"
                    - "route"
                    - "LoadBalancer"
                    - "loadbalancer"
                    - "NodePort"
                    - "nodeport"
                  type: "string"
                inhibit_version_constraint:
                  description: "Relax the check of image_version and image_web_version not matching.\nDefault: \"false\""
                  type: "boolean"
                is_nginx_ingress:
                  description: "Define if the IngressClass provided has Nginx as Ingress Controller.\nIf the Ingress Controller is not nginx the operator will automatically provision `pulp-web` pods to redirect the traffic.\nIf it is a nginx controller the traffic will be forwarded to api and content pods.\nThis variable is a workaround to avoid having to grant a ClusterRole (to do a get into the IngressClass and verify the controller).\nDefault: false"
                  type: "boolean"
                ldap:
                  description: "LDAP defines the ldap resources used by pulpcore containers to integrate Pulp with LDAP authentication"
                  properties:
                    ca:
                      description: "The name of the Secret with the CA chain to connect to ldap server."
                      type: "string"
                    config:
                      description: "The name of the Secret with ldap config."
                      type: "string"
                  type: "object"
                loadbalancer_port:
                  description: "Port exposed by pulp-web service when ingress_type==loadbalancer"
                  format: "int32"
                  type: "integer"
                loadbalancer_protocol:
                  description: "Protocol used by pulp-web service when ingress_type==loadbalancer"
                  enum:
                    - "http"
                    - "https"
                  type: "string"
                migration_job:
                  description: "Job to run django migrations"
                  properties:
                    container:
                      description: "PulpContainer defines configuration of the \"auxiliary\" containers that run in pulpcore pods"
                      properties:
                        env_vars:
                          description: "Environment variables to add to the container"
                          items:
                            description: "EnvVar represents an environment variable present in a Container."
                            properties:
                              name:
                                description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                type: "string"
                              value:
                                description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                type: "string"
                              valueFrom:
                                description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                properties:
                                  configMapKeyRef:
                                    description: "Selects a key of a ConfigMap."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  fieldRef:
                                    description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    properties:
                                      apiVersion:
                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                        type: "string"
                                      fieldPath:
                                        description: "Path of the field to select in the specified API version."
                                        type: "string"
                                    required:
                                      - "fieldPath"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  resourceFieldRef:
                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                    properties:
                                      containerName:
                                        description: "Container name: required for volumes, optional for env vars"
                                        type: "string"
                                      divisor:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: "Required: resource to select"
                                        type: "string"
                                    required:
                                      - "resource"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secretKeyRef:
                                    description: "Selects a key of a secret in the pod's namespace"
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                        image:
                          description: "The image name for the container.\nBy default, if not provided, it will use the same image from .Spec.Image.\nWARN: defining a different image than the one used by API pods can cause unexpected behaviors!"
                          type: "string"
                        resource_requirements:
                          description: "Resource requirements for pulpcore aux container."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
                mount_trusted_ca:
                  default: false
                  description: "Define if the operator should or should not mount the custom CA certificates added to the cluster via cluster-wide proxy config.\nDefault: false"
                  type: "boolean"
                nginx_client_max_body_size:
                  description: "The client max body size for Nginx Ingress.\nDefault: \"10m\""
                  type: "string"
                nginx_proxy_body_size:
                  description: "The proxy body size for Nginx Ingress.\nDefault: \"0\""
                  type: "string"
                nginx_proxy_connect_timeout:
                  description: "The proxy connect timeout for Nginx Ingress.\nDefault: \"120s\""
                  type: "string"
                nginx_proxy_read_timeout:
                  description: "The proxy read timeout for Nginx Ingress.\nDefault: \"120s\""
                  type: "string"
                nginx_proxy_send_timeout:
                  description: "The proxy send timeout for Nginx Ingress.\nDefault: \"120s\""
                  type: "string"
                nodeport_port:
                  description: "Provide requested port value"
                  format: "int32"
                  type: "integer"
                object_storage_azure_secret:
                  description: "The secret for Azure compliant object storage configuration."
                  type: "string"
                object_storage_s3_secret:
                  description: "The secret for S3 compliant object storage configuration."
                  type: "string"
                pulp_secret_key:
                  description: "Name of the Secret to provide Django cryptographic signing.\nDefault: \"pulp-secret-key\""
                  type: "string"
                pulp_settings:
                  description: "[DEPRECATED] Definition of /etc/pulp/settings.py config file.\nThis field is deprecated and will be removed in the future, use the\ncustom_pulp_settings field instead."
                  type: "object"
                  x-kubernetes-preserve-unknown-fields: true
                pvc:
                  description: "PersistenVolumeClaim name that will be used by Pulp pods.\nIf defined, the PVC must be provisioned by the user and the operator will only\nconfigure the deployment to use it"
                  type: "string"
                route_annotations:
                  additionalProperties:
                    type: "string"
                  description: "RouteAnnotations will append custom annotation(s) into routes (used by router shard routeSelector)."
                  type: "object"
                route_host:
                  description: "Route DNS host.\nDefault: <operator's name> + \".\" + ingress.Spec.Domain"
                  type: "string"
                route_labels:
                  additionalProperties:
                    type: "string"
                  description: "RouteLabels will append custom label(s) into routes (used by router shard routeSelector).\nDefault: {\"pulp_cr\": \"<operator's name>\", \"owner\": \"pulp-dev\" }"
                  type: "object"
                route_tls_secret:
                  description: "Name of the secret with the certificates/keys used by route encryption"
                  type: "string"
                sa_annotations:
                  additionalProperties:
                    type: "string"
                  description: "ServiceAccount.metadata.annotations that will be used in Pulp pods."
                  type: "object"
                sa_labels:
                  additionalProperties:
                    type: "string"
                  description: "ServiceAccount.metadata.labels that will be used in Pulp pods."
                  type: "object"
                signing_job:
                  description: "Job to store signing metadata scripts"
                  properties:
                    container:
                      description: "PulpContainer defines configuration of the \"auxiliary\" containers that run in pulpcore pods"
                      properties:
                        env_vars:
                          description: "Environment variables to add to the container"
                          items:
                            description: "EnvVar represents an environment variable present in a Container."
                            properties:
                              name:
                                description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                type: "string"
                              value:
                                description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                type: "string"
                              valueFrom:
                                description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                properties:
                                  configMapKeyRef:
                                    description: "Selects a key of a ConfigMap."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  fieldRef:
                                    description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    properties:
                                      apiVersion:
                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                        type: "string"
                                      fieldPath:
                                        description: "Path of the field to select in the specified API version."
                                        type: "string"
                                    required:
                                      - "fieldPath"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  resourceFieldRef:
                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                    properties:
                                      containerName:
                                        description: "Container name: required for volumes, optional for env vars"
                                        type: "string"
                                      divisor:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: "Required: resource to select"
                                        type: "string"
                                    required:
                                      - "resource"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secretKeyRef:
                                    description: "Selects a key of a secret in the pod's namespace"
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                        image:
                          description: "The image name for the container.\nBy default, if not provided, it will use the same image from .Spec.Image.\nWARN: defining a different image than the one used by API pods can cause unexpected behaviors!"
                          type: "string"
                        resource_requirements:
                          description: "Resource requirements for pulpcore aux container."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
                signing_scripts:
                  description: "Name of the Secret where the signing scripts are stored."
                  type: "string"
                signing_scripts_configmap:
                  description: "[DEPRECATED] ConfigMap where the signing scripts are stored.\nThis field is deprecated and will be removed in the future, use the\nsigning_scripts field instead."
                  type: "string"
                signing_secret:
                  description: "Name of the Secret where the gpg key is stored."
                  type: "string"
                sso_secret:
                  description: "Secret where Single Sign-on configuration can be found"
                  type: "string"
                telemetry:
                  description: "Telemetry defines the OpenTelemetry configuration"
                  properties:
                    enabled:
                      default: false
                      description: "Enable Pulp Telemetry\nDefault: false"
                      nullable: true
                      type: "boolean"
                    exporter_otlp_protocol:
                      default: "http/protobuf"
                      description: "Defines the protocol used by the instrumentator to comunicate with the collector\nDefault: http/protobuf"
                      type: "string"
                    otel_collector_image:
                      description: "Defines the image to be used as collector"
                      type: "string"
                    otel_collector_image_version:
                      description: "The image version for opentelemetry-collector image. Default: \\\"latest\\\""
                      type: "string"
                    resource_requirements:
                      description: "Resource requirements for the sidecar container."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                  type: "object"
                unmanaged:
                  description: "Define if the operator should stop managing Pulp resources.\nIf set to true, the operator will not execute any task (it will be \"disabled\").\nDefault: false"
                  type: "boolean"
                web:
                  description: "Web defines desired state of pulpcore-web (reverse-proxy) resources"
                  properties:
                    deployment_annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations for the web deployment"
                      type: "object"
                    env_vars:
                      description: "Environment variables to add to pulpcore-web container"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    livenessProbe:
                      description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    node_selector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector for the Web pods."
                      type: "object"
                    pdb:
                      description: "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"
                      properties:
                        maxUnavailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
                          x-kubernetes-int-or-string: true
                        minAvailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\"."
                          x-kubernetes-int-or-string: true
                        selector:
                          description: "Label query over pods whose evictions are managed by the disruption\nbudget.\nA null selector will match no pods, while an empty ({}) selector will select\nall pods within the namespace."
                          properties:
                            matchExpressions:
                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              items:
                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                properties:
                                  key:
                                    description: "key is the label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                    type: "string"
                                  values:
                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                            matchLabels:
                              additionalProperties:
                                type: "string"
                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              type: "object"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        unhealthyPodEvictionPolicy:
                          description: "UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods\nshould be considered for eviction. Current implementation considers healthy pods,\nas pods that have status.conditions item with type=\"Ready\",status=\"True\".\n\n\nValid policies are IfHealthyBudget and AlwaysAllow.\nIf no policy is specified, the default behavior will be used,\nwhich corresponds to the IfHealthyBudget policy.\n\n\nIfHealthyBudget policy means that running pods (status.phase=\"Running\"),\nbut not yet healthy can be evicted only if the guarded application is not\ndisrupted (status.currentHealthy is at least equal to status.desiredHealthy).\nHealthy pods will be subject to the PDB for eviction.\n\n\nAlwaysAllow policy means that all running pods (status.phase=\"Running\"),\nbut not yet healthy are considered disrupted and can be evicted regardless\nof whether the criteria in a PDB is met. This means perspective running\npods of a disrupted application might not get a chance to become healthy.\nHealthy pods will be subject to the PDB for eviction.\n\n\nAdditional policies may be added in the future.\nClients making eviction decisions should disallow eviction of unhealthy pods\nif they encounter an unrecognized policy in this field.\n\n\nThis field is beta-level. The eviction API uses this field when\nthe feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default)."
                          type: "string"
                      type: "object"
                    readinessProbe:
                      description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    replicas:
                      default: 1
                      description: "Size is the size of number of pulp-web replicas.\nDefault: 1"
                      format: "int32"
                      minimum: 0.0
                      nullable: true
                      type: "integer"
                    resource_requirements:
                      description: "Resource requirements for the pulp-web container"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    service_annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations for the service"
                      type: "object"
                    strategy:
                      description: "The deployment strategy to use to replace existing pods with new ones."
                      properties:
                        rollingUpdate:
                          description: "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be."
                          properties:
                            maxSurge:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                              x-kubernetes-int-or-string: true
                          type: "object"
                        type:
                          description: "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
                          type: "string"
                      type: "object"
                    tls_termination_mechanism:
                      description: "The secure TLS termination mechanism to use\nDefault: \"edge\""
                      enum:
                        - "edge"
                        - "Edge"
                        - "passthrough"
                        - "Passthrough"
                      type: "string"
                  type: "object"
                worker:
                  description: "Worker defines desired state of pulpcore-worker resources"
                  properties:
                    affinity:
                      description: "Affinity is a group of affinity scheduling rules."
                      properties:
                        nodeAffinity:
                          description: "Describes node affinity scheduling rules for the pod."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                properties:
                                  preference:
                                    description: "A node selector term, associated with the corresponding weight."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  weight:
                                    description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "preference"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                              properties:
                                nodeSelectorTerms:
                                  description: "Required. A list of node selector terms. The terms are ORed."
                                  items:
                                    description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                    properties:
                                      matchExpressions:
                                        description: "A list of node selector requirements by node's labels."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchFields:
                                        description: "A list of node selector requirements by node's fields."
                                        items:
                                          description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                          properties:
                                            key:
                                              description: "The label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                              type: "string"
                                            values:
                                              description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  type: "array"
                              required:
                                - "nodeSelectorTerms"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        podAffinity:
                          description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                        podAntiAffinity:
                          description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                              items:
                                description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                properties:
                                  podAffinityTerm:
                                    description: "Required. A pod affinity term, associated with the corresponding weight."
                                    properties:
                                      labelSelector:
                                        description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      mismatchLabelKeys:
                                        description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      namespaceSelector:
                                        description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      namespaces:
                                        description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                        items:
                                          type: "string"
                                        type: "array"
                                      topologyKey:
                                        description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                        type: "string"
                                    required:
                                      - "topologyKey"
                                    type: "object"
                                  weight:
                                    description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                    format: "int32"
                                    type: "integer"
                                required:
                                  - "podAffinityTerm"
                                  - "weight"
                                type: "object"
                              type: "array"
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                              items:
                                description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              type: "array"
                          type: "object"
                      type: "object"
                    deployment_annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations for the worker deployment"
                      type: "object"
                    env_vars:
                      description: "Environment variables to add to pulpcore-worker container"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    init_container:
                      description: "InitContainer defines configuration of the init-containers that run in pulpcore pods"
                      properties:
                        env_vars:
                          description: "Environment variables to add to the container"
                          items:
                            description: "EnvVar represents an environment variable present in a Container."
                            properties:
                              name:
                                description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                type: "string"
                              value:
                                description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                type: "string"
                              valueFrom:
                                description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                properties:
                                  configMapKeyRef:
                                    description: "Selects a key of a ConfigMap."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  fieldRef:
                                    description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    properties:
                                      apiVersion:
                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                        type: "string"
                                      fieldPath:
                                        description: "Path of the field to select in the specified API version."
                                        type: "string"
                                    required:
                                      - "fieldPath"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  resourceFieldRef:
                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                    properties:
                                      containerName:
                                        description: "Container name: required for volumes, optional for env vars"
                                        type: "string"
                                      divisor:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: "Required: resource to select"
                                        type: "string"
                                    required:
                                      - "resource"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secretKeyRef:
                                    description: "Selects a key of a secret in the pod's namespace"
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                        image:
                          description: "The image name for the container.\nBy default, if not provided, it will use the same image from .Spec.Image.\nWARN: defining a different image than the one used by API pods can cause unexpected behaviors!"
                          type: "string"
                        resource_requirements:
                          description: "Resource requirements for pulpcore aux container."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                      type: "object"
                    livenessProbe:
                      description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    node_selector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector for the Pulp pods."
                      type: "object"
                    pdb:
                      description: "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"
                      properties:
                        maxUnavailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
                          x-kubernetes-int-or-string: true
                        minAvailable:
                          anyOf:
                            - type: "integer"
                            - type: "string"
                          description: "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\"."
                          x-kubernetes-int-or-string: true
                        selector:
                          description: "Label query over pods whose evictions are managed by the disruption\nbudget.\nA null selector will match no pods, while an empty ({}) selector will select\nall pods within the namespace."
                          properties:
                            matchExpressions:
                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                              items:
                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                properties:
                                  key:
                                    description: "key is the label key that the selector applies to."
                                    type: "string"
                                  operator:
                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                    type: "string"
                                  values:
                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                    items:
                                      type: "string"
                                    type: "array"
                                required:
                                  - "key"
                                  - "operator"
                                type: "object"
                              type: "array"
                            matchLabels:
                              additionalProperties:
                                type: "string"
                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              type: "object"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                        unhealthyPodEvictionPolicy:
                          description: "UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods\nshould be considered for eviction. Current implementation considers healthy pods,\nas pods that have status.conditions item with type=\"Ready\",status=\"True\".\n\n\nValid policies are IfHealthyBudget and AlwaysAllow.\nIf no policy is specified, the default behavior will be used,\nwhich corresponds to the IfHealthyBudget policy.\n\n\nIfHealthyBudget policy means that running pods (status.phase=\"Running\"),\nbut not yet healthy can be evicted only if the guarded application is not\ndisrupted (status.currentHealthy is at least equal to status.desiredHealthy).\nHealthy pods will be subject to the PDB for eviction.\n\n\nAlwaysAllow policy means that all running pods (status.phase=\"Running\"),\nbut not yet healthy are considered disrupted and can be evicted regardless\nof whether the criteria in a PDB is met. This means perspective running\npods of a disrupted application might not get a chance to become healthy.\nHealthy pods will be subject to the PDB for eviction.\n\n\nAdditional policies may be added in the future.\nClients making eviction decisions should disallow eviction of unhealthy pods\nif they encounter an unrecognized policy in this field.\n\n\nThis field is beta-level. The eviction API uses this field when\nthe feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default)."
                          type: "string"
                      type: "object"
                    readinessProbe:
                      description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    replicas:
                      default: 2
                      description: "Size is the size of number of pulp-worker replicas.\nDefault: 2"
                      format: "int32"
                      minimum: 0.0
                      nullable: true
                      type: "integer"
                    resource_requirements:
                      description: "Resource requirements for the pulp-api container"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    strategy:
                      description: "The deployment strategy to use to replace existing pods with new ones."
                      properties:
                        rollingUpdate:
                          description: "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be."
                          properties:
                            maxSurge:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                              x-kubernetes-int-or-string: true
                          type: "object"
                        type:
                          description: "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
                          type: "string"
                      type: "object"
                    tolerations:
                      description: "Node tolerations for the Pulp pods."
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                    topology_spread_constraints:
                      description: "Topology rule(s) for the pods."
                      items:
                        description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                        properties:
                          labelSelector:
                            description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          matchLabelKeys:
                            description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          maxSkew:
                            description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                            format: "int32"
                            type: "integer"
                          minDomains:
                            description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default)."
                            format: "int32"
                            type: "integer"
                          nodeAffinityPolicy:
                            description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          nodeTaintsPolicy:
                            description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          topologyKey:
                            description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                            type: "string"
                          whenUnsatisfiable:
                            description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                            type: "string"
                        required:
                          - "maxSkew"
                          - "topologyKey"
                          - "whenUnsatisfiable"
                        type: "object"
                      type: "array"
                  type: "object"
              required:
                - "api"
              type: "object"
            status:
              description: "PulpStatus defines the observed state of Pulp"
              properties:
                admin_password_secret:
                  description: "Secret where the administrator password can be found"
                  type: "string"
                allowed_content_checksums:
                  description: "List of allowed checksum algorithms used to verify repository's integrity."
                  type: "string"
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                container_token_secret:
                  description: "Secret where the container token certificates are stored."
                  type: "string"
                db_fields_encryption_secret:
                  description: "Secret where the Fernet symmetric encryption key is stored."
                  type: "string"
                deployment_type:
                  description: "Name of the deployment type."
                  type: "string"
                external_cache_secret:
                  description: "Name of the secret with the parameters to connect to an external Redis cluster"
                  type: "string"
                image:
                  description: "Name of pulp image deployed."
                  type: "string"
                ingress_class_name:
                  description: "IngressClassName is used to inform the operator which ingressclass should be used to provision the ingress."
                  type: "string"
                ingress_type:
                  description: "The ingress type to use to reach the deployed instance"
                  type: "string"
                last_deployment_update:
                  description: "Controller status to keep tracking of deployment updates"
                  type: "string"
                managed_cache_enabled:
                  description: "Cache deployed by pulp-operator enabled"
                  type: "boolean"
                object_storage_azure_secret:
                  description: "The secret for Azure compliant object storage configuration."
                  type: "string"
                object_storage_s3_secret:
                  description: "The secret for S3 compliant object storage configuration."
                  type: "string"
                pulp_secret_key:
                  description: "Name of the Secret to provide Django cryptographic signing."
                  type: "string"
                storage_type:
                  description: "Type of storage in use by pulpcore pods"
                  type: "string"
                telemetry_enabled:
                  description: "Pulp metrics collection enabled"
                  type: "boolean"
              required:
                - "conditions"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
