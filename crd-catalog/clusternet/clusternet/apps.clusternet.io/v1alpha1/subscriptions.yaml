apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "subscriptions.apps.clusternet.io"
spec:
  group: "apps.clusternet.io"
  names:
    categories:
      - "clusternet"
    kind: "Subscription"
    listKind: "SubscriptionList"
    plural: "subscriptions"
    shortNames:
      - "sub"
      - "subs"
    singular: "subscription"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".metadata.creationTimestamp"
          name: "AGE"
          type: "date"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Subscription represents the policy that install a group of resources to one or more clusters."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "SubscriptionSpec defines the desired state of Subscription"
              properties:
                clusterTolerations:
                  description: "ClusterTolerations tolerates any matched taints of ManagedCluster."
                  items:
                    description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                    properties:
                      effect:
                        description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                        type: "string"
                      key:
                        description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                        type: "string"
                      operator:
                        description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                        type: "string"
                      tolerationSeconds:
                        description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                        format: "int64"
                        type: "integer"
                      value:
                        description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                        type: "string"
                    type: "object"
                  type: "array"
                dividingScheduling:
                  description: "Dividing scheduling config params. Present only if SchedulingStrategy = Dividing."
                  properties:
                    dynamicDividing:
                      description: "DynamicDividing describes how to divide replicas into target clusters dynamically."
                      properties:
                        maxClusters:
                          description: "MaxClusters describes the upper bound number of target clusters."
                          format: "int32"
                          type: "integer"
                        minClusters:
                          description: "MinClusters describes the lower bound number of target clusters."
                          format: "int32"
                          type: "integer"
                        preferredClusters:
                          description: "PreferredClusters describes the assigning preference. If we have a preference for cluster group A\ncompared to cluster group B (i.e., group A has a larger Weight), desired replicas will be assigned\nto cluster group A as many as possible, while the rest ones will be assigned to cluster group B."
                          items:
                            description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                            properties:
                              preference:
                                description: "A node selector term, associated with the corresponding weight."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              weight:
                                description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "preference"
                              - "weight"
                            type: "object"
                          type: "array"
                        strategy:
                          default: "Spread"
                          description: "Type of dynamic dividing replica strategy."
                          enum:
                            - "Spread"
                            - "Binpack"
                          type: "string"
                        topologySpreadConstraints:
                          description: "TopologySpreadConstraints describes how a group of replicas ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.\nPresent only for spread divided scheduling."
                          items:
                            description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                            properties:
                              labelSelector:
                                description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              matchLabelKeys:
                                description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              maxSkew:
                                description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                                format: "int32"
                                type: "integer"
                              minDomains:
                                description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew."
                                format: "int32"
                                type: "integer"
                              nodeAffinityPolicy:
                                description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                type: "string"
                              nodeTaintsPolicy:
                                description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                type: "string"
                              topologyKey:
                                description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                                type: "string"
                              whenUnsatisfiable:
                                description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                                type: "string"
                            required:
                              - "maxSkew"
                              - "topologyKey"
                              - "whenUnsatisfiable"
                            type: "object"
                          type: "array"
                      required:
                        - "strategy"
                      type: "object"
                    type:
                      default: "Static"
                      description: "Type of dividing replica scheduling."
                      enum:
                        - "Static"
                        - "Dynamic"
                      type: "string"
                  required:
                    - "type"
                  type: "object"
                feeds:
                  description: "Feeds"
                  items:
                    description: "Feed defines the resource to be selected."
                    properties:
                      apiVersion:
                        description: "APIVersion defines the versioned schema of this representation of an object."
                        type: "string"
                      kind:
                        description: "Kind is a string value representing the REST resource this object represents.\nIn CamelCase."
                        type: "string"
                      name:
                        description: "Name of the target resource."
                        type: "string"
                      namespace:
                        description: "Namespace of the target resource."
                        type: "string"
                    required:
                      - "apiVersion"
                      - "kind"
                      - "name"
                    type: "object"
                  type: "array"
                preemptionPolicy:
                  default: "PreemptLowerPriority"
                  description: "PreemptionPolicy is the Policy for preempting subscriptions with lower priority.\nOne of Never, PreemptLowerPriority.\nDefaults to PreemptLowerPriority if unset."
                  enum:
                    - "PreemptLowerPriority"
                    - "PreemptNever"
                  type: "string"
                priority:
                  description: "The priority value. clusternet-scheduler use this field to find the\npriority of the subscription.\nThe higher the value, the higher the priority."
                  format: "int32"
                  type: "integer"
                schedulerName:
                  default: "default"
                  description: "If specified, the Subscription will be handled by specified scheduler.\nIf not specified, the Subscription will be handled by default scheduler."
                  type: "string"
                schedulingBySubGroup:
                  description: "If specified, the Subscription will be handled with SchedulingBySubGroup.\nUsed together with SubGroupStrategy in every Subscriber.\nCan work with all supported SchedulingStrategy, such as Replication, Dividing."
                  type: "boolean"
                schedulingStrategy:
                  default: "Replication"
                  description: "If specified, the Subscription will be handled with specified SchedulingStrategy.\nOtherwise, with generic SchedulingStrategy."
                  enum:
                    - "Replication"
                    - "Dividing"
                  type: "string"
                subscribers:
                  description: "Subscribers subscribes"
                  items:
                    description: "Subscriber defines"
                    properties:
                      clusterAffinity:
                        description: "ClusterAffinity is a label query over managed clusters by labels."
                        properties:
                          matchExpressions:
                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                            items:
                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                              properties:
                                key:
                                  description: "key is the label key that the selector applies to."
                                  type: "string"
                                operator:
                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                  type: "string"
                                values:
                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                  items:
                                    type: "string"
                                  type: "array"
                                  x-kubernetes-list-type: "atomic"
                              required:
                                - "key"
                                - "operator"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          matchLabels:
                            additionalProperties:
                              type: "string"
                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            type: "object"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      subGroupStrategy:
                        description: "SubGroupStrategy defines the subgroup strategy for the clusters matched by this subscriber.\nDuring the scheduling, all the matching clusters will be treated as a subgroup instead of individual clusters.\nWith subgroup, we can describe clusters with different regions, zones, etc.\nPresent only when SchedulingBySubGroup is set."
                        properties:
                          minClusters:
                            description: "MinClusters is the minimum number of clusters to be selected in this subgroup.\nIf this value is more than the total number of clusters in this subgroup, then all clusters will be selected."
                            format: "int32"
                            minimum: 0.0
                            type: "integer"
                        type: "object"
                      weight:
                        description: "Static weight of subscriber when dividing replicas.\nPresent only for static divided scheduling."
                        format: "int32"
                        minimum: 0.0
                        type: "integer"
                    required:
                      - "clusterAffinity"
                    type: "object"
                  type: "array"
              required:
                - "feeds"
                - "subscribers"
              type: "object"
            status:
              description: "SubscriptionStatus defines the observed state of Subscription"
              properties:
                aggregatedStatuses:
                  description: "AggregatedStatuses shows the aggregated statuses of feeds that are running in each child cluster."
                  items:
                    description: "AggregatedStatus contains aggregated status of current feed."
                    properties:
                      apiVersion:
                        description: "APIVersion defines the versioned schema of this representation of an object."
                        type: "string"
                      feedStatusDetails:
                        description: "FeedStatusDetails shows the feed statuses in each child cluster."
                        items:
                          description: "FeedStatusPerCluster shows the feed status running in current cluster."
                          properties:
                            available:
                              description: "Available indicates whether the feed status is synced successfully to corresponding Description."
                              type: "boolean"
                            clusterId:
                              description: "ClusterID indicates the id of current cluster."
                              pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
                              type: "string"
                            clusterName:
                              description: "ClusterName is the cluster name."
                              maxLength: 30
                              pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?([a-z0-9]([-a-z0-9]*[a-z0-9]))*"
                              type: "string"
                            replicaStatus:
                              description: "ReplicaStatus indicates the replica status of workload-type feed, such as Deployment/StatefulSet/Job."
                              properties:
                                active:
                                  description: "The number of pending and running pods."
                                  format: "int32"
                                  type: "integer"
                                availableReplicas:
                                  description: "Total number of available pods (ready for at least minReadySeconds) targeted by this workload."
                                  format: "int32"
                                  type: "integer"
                                currentReplicas:
                                  description: "currentReplicas is the number of Pods created by the workload controller from the StatefulSet version\nindicated by currentRevision."
                                  format: "int32"
                                  type: "integer"
                                failed:
                                  description: "The number of pods which reached phase Failed."
                                  format: "int32"
                                  type: "integer"
                                observedGeneration:
                                  description: "The generation observed by the workload controller."
                                  format: "int64"
                                  type: "integer"
                                readyReplicas:
                                  description: "readyReplicas is the number of pods targeted by this workload with a Ready Condition."
                                  format: "int32"
                                  type: "integer"
                                replicas:
                                  description: "Total number of non-terminated pods targeted by this workload (their labels match the selector)."
                                  format: "int32"
                                  type: "integer"
                                succeeded:
                                  description: "The number of pods which reached phase Succeeded."
                                  format: "int32"
                                  type: "integer"
                                unavailableReplicas:
                                  description: "Total number of unavailable pods targeted by this workload. This is the total number of\npods that are still required for the workload to have 100% available capacity. They may\neither be pods that are running but not yet available or pods that still have not been created."
                                  format: "int32"
                                  type: "integer"
                                updatedReplicas:
                                  description: "Total number of non-terminated pods targeted by this workload that have the desired template spec."
                                  format: "int32"
                                  type: "integer"
                              type: "object"
                          type: "object"
                        type: "array"
                      feedStatusSummary:
                        description: "FeedStatusSummary aggregates the feed statuses from each child cluster."
                        properties:
                          available:
                            description: "Available indicates whether the feed status is synced successfully to corresponding Description."
                            type: "boolean"
                          replicaStatus:
                            description: "ReplicaStatus indicates the replica status of workload-type feed, such as Deployment/StatefulSet/Job."
                            properties:
                              active:
                                description: "The number of pending and running pods."
                                format: "int32"
                                type: "integer"
                              availableReplicas:
                                description: "Total number of available pods (ready for at least minReadySeconds) targeted by this workload."
                                format: "int32"
                                type: "integer"
                              currentReplicas:
                                description: "currentReplicas is the number of Pods created by the workload controller from the StatefulSet version\nindicated by currentRevision."
                                format: "int32"
                                type: "integer"
                              failed:
                                description: "The number of pods which reached phase Failed."
                                format: "int32"
                                type: "integer"
                              observedGeneration:
                                description: "The generation observed by the workload controller."
                                format: "int64"
                                type: "integer"
                              readyReplicas:
                                description: "readyReplicas is the number of pods targeted by this workload with a Ready Condition."
                                format: "int32"
                                type: "integer"
                              replicas:
                                description: "Total number of non-terminated pods targeted by this workload (their labels match the selector)."
                                format: "int32"
                                type: "integer"
                              succeeded:
                                description: "The number of pods which reached phase Succeeded."
                                format: "int32"
                                type: "integer"
                              unavailableReplicas:
                                description: "Total number of unavailable pods targeted by this workload. This is the total number of\npods that are still required for the workload to have 100% available capacity. They may\neither be pods that are running but not yet available or pods that still have not been created."
                                format: "int32"
                                type: "integer"
                              updatedReplicas:
                                description: "Total number of non-terminated pods targeted by this workload that have the desired template spec."
                                format: "int32"
                                type: "integer"
                            type: "object"
                        type: "object"
                      kind:
                        description: "Kind is a string value representing the REST resource this object represents.\nIn CamelCase."
                        type: "string"
                      name:
                        description: "Name of the target resource."
                        type: "string"
                      namespace:
                        description: "Namespace of the target resource."
                        type: "string"
                    required:
                      - "apiVersion"
                      - "kind"
                      - "name"
                    type: "object"
                  type: "array"
                bindingClusters:
                  description: "Namespaced names of targeted clusters that Subscription binds to."
                  items:
                    type: "string"
                  type: "array"
                completedReleases:
                  description: "Total number of completed releases targeted by this Subscription."
                  type: "integer"
                desiredReleases:
                  description: "Total number of Helm releases desired by this Subscription."
                  type: "integer"
                replicas:
                  additionalProperties:
                    items:
                      format: "int32"
                      type: "integer"
                    type: "array"
                  description: "Desired replicas of targeted clusters for each feed."
                  type: "object"
                specHash:
                  description: "SpecHash calculates the hash value of current SubscriptionSpec."
                  format: "int64"
                  type: "integer"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
