apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "feedinventories.apps.clusternet.io"
spec:
  group: "apps.clusternet.io"
  names:
    categories:
      - "clusternet"
    kind: "FeedInventory"
    listKind: "FeedInventoryList"
    plural: "feedinventories"
    shortNames:
      - "finv"
    singular: "feedinventory"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "FeedInventory defines a group of feeds which correspond to a subscription."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "FeedInventorySpec defines the desired state of FeedInventory."
              properties:
                feeds:
                  items:
                    description: "FeedOrder defines the scheduling requirements of a Feed."
                    properties:
                      apiVersion:
                        description: "APIVersion defines the versioned schema of this representation of an object."
                        type: "string"
                      desiredReplicas:
                        description: "DesiredReplicas specifies the number of desired replica. This is a pointer to distinguish between explicit\nzero and not specified."
                        format: "int32"
                        type: "integer"
                      kind:
                        description: "Kind is a string value representing the REST resource this object represents.\nIn CamelCase."
                        type: "string"
                      name:
                        description: "Name of the target resource."
                        type: "string"
                      namespace:
                        description: "Namespace of the target resource."
                        type: "string"
                      replicaJsonPath:
                        description: "ReplicaJsonPath specifies the JSONPath for replica settings,\nsuch as `/spec/replicas` for Deployment/StatefulSet/ReplicaSet.\nShould not be empty when DesiredReplicas is non-nil."
                        type: "string"
                      replicaRequirements:
                        description: "ReplicaRequirements describes the scheduling requirements for a new replica."
                        properties:
                          affinity:
                            description: "Affinity specifies the scheduling constraints of a new replica."
                            properties:
                              nodeAffinity:
                                description: "Describes node affinity scheduling rules for the pod."
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                    items:
                                      description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                      properties:
                                        preference:
                                          description: "A node selector term, associated with the corresponding weight."
                                          properties:
                                            matchExpressions:
                                              description: "A list of node selector requirements by node's labels."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchFields:
                                              description: "A list of node selector requirements by node's fields."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        weight:
                                          description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                          format: "int32"
                                          type: "integer"
                                      required:
                                        - "preference"
                                        - "weight"
                                      type: "object"
                                    type: "array"
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                    properties:
                                      nodeSelectorTerms:
                                        description: "Required. A list of node selector terms. The terms are ORed."
                                        items:
                                          description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                          properties:
                                            matchExpressions:
                                              description: "A list of node selector requirements by node's labels."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchFields:
                                              description: "A list of node selector requirements by node's fields."
                                              items:
                                                description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                properties:
                                                  key:
                                                    description: "The label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                    type: "string"
                                                  values:
                                                    description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        type: "array"
                                    required:
                                      - "nodeSelectorTerms"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                              podAffinity:
                                description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                    items:
                                      description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                      properties:
                                        podAffinityTerm:
                                          description: "Required. A pod affinity term, associated with the corresponding weight."
                                          properties:
                                            labelSelector:
                                              description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            matchLabelKeys:
                                              description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            mismatchLabelKeys:
                                              description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            namespaceSelector:
                                              description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaces:
                                              description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                              items:
                                                type: "string"
                                              type: "array"
                                            topologyKey:
                                              description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                              type: "string"
                                          required:
                                            - "topologyKey"
                                          type: "object"
                                        weight:
                                          description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                          format: "int32"
                                          type: "integer"
                                      required:
                                        - "podAffinityTerm"
                                        - "weight"
                                      type: "object"
                                    type: "array"
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                    items:
                                      description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                      properties:
                                        labelSelector:
                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        matchLabelKeys:
                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        mismatchLabelKeys:
                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        namespaceSelector:
                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaces:
                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                          items:
                                            type: "string"
                                          type: "array"
                                        topologyKey:
                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                          type: "string"
                                      required:
                                        - "topologyKey"
                                      type: "object"
                                    type: "array"
                                type: "object"
                              podAntiAffinity:
                                description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                    items:
                                      description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                      properties:
                                        podAffinityTerm:
                                          description: "Required. A pod affinity term, associated with the corresponding weight."
                                          properties:
                                            labelSelector:
                                              description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            matchLabelKeys:
                                              description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            mismatchLabelKeys:
                                              description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            namespaceSelector:
                                              description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            namespaces:
                                              description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                              items:
                                                type: "string"
                                              type: "array"
                                            topologyKey:
                                              description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                              type: "string"
                                          required:
                                            - "topologyKey"
                                          type: "object"
                                        weight:
                                          description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                          format: "int32"
                                          type: "integer"
                                      required:
                                        - "podAffinityTerm"
                                        - "weight"
                                      type: "object"
                                    type: "array"
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                    items:
                                      description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                      properties:
                                        labelSelector:
                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        matchLabelKeys:
                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        mismatchLabelKeys:
                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        namespaceSelector:
                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                          properties:
                                            matchExpressions:
                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                              items:
                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                properties:
                                                  key:
                                                    description: "key is the label key that the selector applies to."
                                                    type: "string"
                                                  operator:
                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                    type: "string"
                                                  values:
                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                required:
                                                  - "key"
                                                  - "operator"
                                                type: "object"
                                              type: "array"
                                            matchLabels:
                                              additionalProperties:
                                                type: "string"
                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                              type: "object"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                        namespaces:
                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                          items:
                                            type: "string"
                                          type: "array"
                                        topologyKey:
                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                          type: "string"
                                      required:
                                        - "topologyKey"
                                      type: "object"
                                    type: "array"
                                type: "object"
                            type: "object"
                          nodeSelector:
                            additionalProperties:
                              type: "string"
                            description: "NodeSelector specifies hard node constraints that must be met for a new replica to fit on a node.\nSelector which must match a node's labels for a new replica to be scheduled on that node."
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          resources:
                            description: "Resources describes the compute resource requirements."
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          tolerations:
                            description: "Tolerations specifies the tolerations of a new replica."
                            items:
                              description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                              properties:
                                effect:
                                  description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                  type: "string"
                                key:
                                  description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                  type: "string"
                                operator:
                                  description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                  type: "string"
                                tolerationSeconds:
                                  description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                  format: "int64"
                                  type: "integer"
                                value:
                                  description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                  type: "string"
                              type: "object"
                            type: "array"
                        type: "object"
                    required:
                      - "apiVersion"
                      - "kind"
                      - "name"
                    type: "object"
                  type: "array"
              required:
                - "feeds"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
