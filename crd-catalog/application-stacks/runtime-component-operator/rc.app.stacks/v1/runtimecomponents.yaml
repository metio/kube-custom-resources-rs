apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "runtimecomponents.rc.app.stacks"
spec:
  group: "rc.app.stacks"
  names:
    kind: "RuntimeComponent"
    listKind: "RuntimeComponentList"
    plural: "runtimecomponents"
    shortNames:
      - "comp"
      - "comps"
    singular: "runtimecomponent"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - description: "Absolute name of the deployed image containing registry and tag"
          jsonPath: ".spec.applicationImage"
          name: "Image"
          type: "string"
        - description: "Specifies whether deployment is exposed externally via default Route"
          jsonPath: ".spec.expose"
          name: "Exposed"
          type: "boolean"
        - description: "Status of the reconcile condition"
          jsonPath: ".status.conditions[?(@.type=='Reconciled')].status"
          name: "Reconciled"
          type: "string"
        - description: "Reason for the failure of reconcile condition"
          jsonPath: ".status.conditions[?(@.type=='Reconciled')].reason"
          name: "ReconciledReason"
          priority: 1
          type: "string"
        - description: "Failure message from reconcile condition"
          jsonPath: ".status.conditions[?(@.type=='Reconciled')].message"
          name: "ReconciledMessage"
          priority: 1
          type: "string"
        - description: "Status of the resource ready condition"
          jsonPath: ".status.conditions[?(@.type=='ResourcesReady')].status"
          name: "ResourcesReady"
          type: "string"
        - description: "Reason for the failure of resource ready condition"
          jsonPath: ".status.conditions[?(@.type=='ResourcesReady')].reason"
          name: "ResourcesReadyReason"
          priority: 1
          type: "string"
        - description: "Failure message from resource ready condition"
          jsonPath: ".status.conditions[?(@.type=='ResourcesReady')].message"
          name: "ResourcesReadyMessage"
          priority: 1
          type: "string"
        - description: "Status of the component ready condition"
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
          name: "Ready"
          type: "string"
        - description: "Reason for the failure of component ready condition"
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
          name: "ReadyReason"
          priority: 1
          type: "string"
        - description: "Failure message from component ready condition"
          jsonPath: ".status.conditions[?(@.type=='Ready')].message"
          name: "ReadyMessage"
          priority: 1
          type: "string"
        - description: "Status of the component warning condition"
          jsonPath: ".status.conditions[?(@.type=='Warning')].status"
          name: "Warning"
          type: "string"
        - description: "Reason for the failure of component warning condition"
          jsonPath: ".status.conditions[?(@.type=='Warning')].reason"
          name: "WarningReason"
          priority: 1
          type: "string"
        - description: "Failure message from component warning condition"
          jsonPath: ".status.conditions[?(@.type=='Warning')].message"
          name: "WarningMessage"
          priority: 1
          type: "string"
        - description: "Age of the resource"
          jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1"
      schema:
        openAPIV3Schema:
          description: "Represents the deployment of a runtime component"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Defines the desired state of RuntimeComponent."
              properties:
                affinity:
                  description: "Configure pods to run on particular Nodes."
                  properties:
                    architecture:
                      description: "An array of architectures to be considered for deployment. Their position in the array indicates preference."
                      items:
                        type: "string"
                      type: "array"
                      x-kubernetes-list-type: "set"
                    nodeAffinity:
                      description: "Controls which nodes the pod are scheduled to run on, based on labels on the node."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                            properties:
                              preference:
                                description: "A node selector term, associated with the corresponding weight."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              weight:
                                description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "preference"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                          properties:
                            nodeSelectorTerms:
                              description: "Required. A list of node selector terms. The terms are ORed."
                              items:
                                description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              type: "array"
                          required:
                            - "nodeSelectorTerms"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    nodeAffinityLabels:
                      additionalProperties:
                        type: "string"
                      description: "A YAML object that contains a set of required labels and their values."
                      type: "object"
                    podAffinity:
                      description: "Controls the nodes the pod are scheduled to run on, based on labels on the pods that are already running on the node."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                      type: "object"
                    podAntiAffinity:
                      description: "Enables the ability to prevent running a pod on the same node as another pod."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                      type: "object"
                  type: "object"
                applicationImage:
                  description: "Application image to deploy."
                  type: "string"
                applicationName:
                  description: "Name of the application. Defaults to the name of this custom resource."
                  type: "string"
                applicationVersion:
                  description: "Version of the application."
                  type: "string"
                autoscaling:
                  description: "Configures the desired resource consumption of pods."
                  properties:
                    maxReplicas:
                      description: "Required field for autoscaling. Upper limit for the number of pods that can be set by the autoscaler. Parameter .spec.resources.requests.cpu must also be specified."
                      format: "int32"
                      minimum: 1.0
                      type: "integer"
                    minReplicas:
                      description: "Lower limit for the number of pods that can be set by the autoscaler."
                      format: "int32"
                      type: "integer"
                    targetCPUUtilizationPercentage:
                      description: "Target average CPU utilization, represented as a percentage of requested CPU, over all the pods."
                      format: "int32"
                      type: "integer"
                  type: "object"
                createKnativeService:
                  description: "Create Knative resources and use Knative serving."
                  type: "boolean"
                deployment:
                  description: "Defines the desired state and cycle of applications."
                  properties:
                    annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations to be added only to the Deployment and resources owned by the Deployment."
                      type: "object"
                    updateStrategy:
                      description: "Specifies the strategy to replace old deployment pods with new pods."
                      properties:
                        rollingUpdate:
                          description: "Rolling update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be."
                          properties:
                            maxSurge:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                              x-kubernetes-int-or-string: true
                          type: "object"
                        type:
                          description: "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
                          type: "string"
                      type: "object"
                  type: "object"
                disableServiceLinks:
                  description: "Disable information about services being injected into the application pod's environment variables. Default to false."
                  type: "boolean"
                env:
                  description: "An array of environment variables for the application container."
                  items:
                    description: "EnvVar represents an environment variable present in a Container."
                    properties:
                      name:
                        description: "Name of the environment variable. Must be a C_IDENTIFIER."
                        type: "string"
                      value:
                        description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                        type: "string"
                      valueFrom:
                        description: "Source for the environment variable's value. Cannot be used if value is not empty."
                        properties:
                          configMapKeyRef:
                            description: "Selects a key of a ConfigMap."
                            properties:
                              key:
                                description: "The key to select."
                                type: "string"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "Specify whether the ConfigMap or its key must be defined"
                                type: "boolean"
                            required:
                              - "key"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          fieldRef:
                            description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                            properties:
                              apiVersion:
                                description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                type: "string"
                              fieldPath:
                                description: "Path of the field to select in the specified API version."
                                type: "string"
                            required:
                              - "fieldPath"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          resourceFieldRef:
                            description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                            properties:
                              containerName:
                                description: "Container name: required for volumes, optional for env vars"
                                type: "string"
                              divisor:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              resource:
                                description: "Required: resource to select"
                                type: "string"
                            required:
                              - "resource"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          secretKeyRef:
                            description: "Selects a key of a secret in the pod's namespace"
                            properties:
                              key:
                                description: "The key of the secret to select from.  Must be a valid secret key."
                                type: "string"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "Specify whether the Secret or its key must be defined"
                                type: "boolean"
                            required:
                              - "key"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        type: "object"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "name"
                  x-kubernetes-list-type: "map"
                envFrom:
                  description: "List of sources to populate environment variables in the application container."
                  items:
                    description: "EnvFromSource represents the source of a set of ConfigMaps"
                    properties:
                      configMapRef:
                        description: "The ConfigMap to select from"
                        properties:
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                          optional:
                            description: "Specify whether the ConfigMap must be defined"
                            type: "boolean"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      prefix:
                        description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                        type: "string"
                      secretRef:
                        description: "The Secret to select from"
                        properties:
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                          optional:
                            description: "Specify whether the Secret must be defined"
                            type: "boolean"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-type: "atomic"
                expose:
                  description: "Expose the application externally via a Route, a Knative Route or an Ingress resource."
                  type: "boolean"
                initContainers:
                  description: "List of containers to run before other containers in a pod."
                  items:
                    description: "A single application container that you want to run within a pod."
                    properties:
                      args:
                        description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                        items:
                          type: "string"
                        type: "array"
                      command:
                        description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                        items:
                          type: "string"
                        type: "array"
                      env:
                        description: "List of environment variables to set in the container.\nCannot be updated."
                        items:
                          description: "EnvVar represents an environment variable present in a Container."
                          properties:
                            name:
                              description: "Name of the environment variable. Must be a C_IDENTIFIER."
                              type: "string"
                            value:
                              description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                              type: "string"
                            valueFrom:
                              description: "Source for the environment variable's value. Cannot be used if value is not empty."
                              properties:
                                configMapKeyRef:
                                  description: "Selects a key of a ConfigMap."
                                  properties:
                                    key:
                                      description: "The key to select."
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap or its key must be defined"
                                      type: "boolean"
                                  required:
                                    - "key"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                fieldRef:
                                  description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                  properties:
                                    apiVersion:
                                      description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                      type: "string"
                                    fieldPath:
                                      description: "Path of the field to select in the specified API version."
                                      type: "string"
                                  required:
                                    - "fieldPath"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                resourceFieldRef:
                                  description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                  properties:
                                    containerName:
                                      description: "Container name: required for volumes, optional for env vars"
                                      type: "string"
                                    divisor:
                                      anyOf:
                                        - type: "integer"
                                        - type: "string"
                                      description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: "Required: resource to select"
                                      type: "string"
                                  required:
                                    - "resource"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                secretKeyRef:
                                  description: "Selects a key of a secret in the pod's namespace"
                                  properties:
                                    key:
                                      description: "The key of the secret to select from.  Must be a valid secret key."
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret or its key must be defined"
                                      type: "boolean"
                                  required:
                                    - "key"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                          required:
                            - "name"
                          type: "object"
                        type: "array"
                      envFrom:
                        description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                        items:
                          description: "EnvFromSource represents the source of a set of ConfigMaps"
                          properties:
                            configMapRef:
                              description: "The ConfigMap to select from"
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the ConfigMap must be defined"
                                  type: "boolean"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            prefix:
                              description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                              type: "string"
                            secretRef:
                              description: "The Secret to select from"
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the Secret must be defined"
                                  type: "boolean"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        type: "array"
                      image:
                        description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                        type: "string"
                      imagePullPolicy:
                        description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                        type: "string"
                      lifecycle:
                        description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                        properties:
                          postStart:
                            description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              tcpSocket:
                                description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                            type: "object"
                          preStop:
                            description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              tcpSocket:
                                description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                            type: "object"
                        type: "object"
                      livenessProbe:
                        description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description: "Exec specifies the action to take."
                            properties:
                              command:
                                description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          failureThreshold:
                            description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          grpc:
                            description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                            properties:
                              port:
                                description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                format: "int32"
                                type: "integer"
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          httpGet:
                            description: "HTTPGet specifies the http request to perform."
                            properties:
                              host:
                                description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                type: "string"
                              httpHeaders:
                                description: "Custom headers to set in the request. HTTP allows repeated headers."
                                items:
                                  description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                  properties:
                                    name:
                                      description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                      type: "string"
                                    value:
                                      description: "The header field value"
                                      type: "string"
                                  required:
                                    - "name"
                                    - "value"
                                  type: "object"
                                type: "array"
                              path:
                                description: "Path to access on the HTTP server."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                          periodSeconds:
                            description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          successThreshold:
                            description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          tcpSocket:
                            description: "TCPSocket specifies an action involving a TCP port."
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                            required:
                              - "port"
                            type: "object"
                          terminationGracePeriodSeconds:
                            description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                            format: "int64"
                            type: "integer"
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                        type: "object"
                      name:
                        description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                        type: "string"
                      ports:
                        description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                        items:
                          description: "ContainerPort represents a network port in a single container."
                          properties:
                            containerPort:
                              description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                              format: "int32"
                              type: "integer"
                            hostIP:
                              description: "What host IP to bind the external port to."
                              type: "string"
                            hostPort:
                              description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                              format: "int32"
                              type: "integer"
                            name:
                              description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                              type: "string"
                            protocol:
                              default: "TCP"
                              description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                              type: "string"
                          required:
                            - "containerPort"
                          type: "object"
                        type: "array"
                        x-kubernetes-list-map-keys:
                          - "containerPort"
                          - "protocol"
                        x-kubernetes-list-type: "map"
                      readinessProbe:
                        description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description: "Exec specifies the action to take."
                            properties:
                              command:
                                description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          failureThreshold:
                            description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          grpc:
                            description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                            properties:
                              port:
                                description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                format: "int32"
                                type: "integer"
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          httpGet:
                            description: "HTTPGet specifies the http request to perform."
                            properties:
                              host:
                                description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                type: "string"
                              httpHeaders:
                                description: "Custom headers to set in the request. HTTP allows repeated headers."
                                items:
                                  description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                  properties:
                                    name:
                                      description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                      type: "string"
                                    value:
                                      description: "The header field value"
                                      type: "string"
                                  required:
                                    - "name"
                                    - "value"
                                  type: "object"
                                type: "array"
                              path:
                                description: "Path to access on the HTTP server."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                          periodSeconds:
                            description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          successThreshold:
                            description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          tcpSocket:
                            description: "TCPSocket specifies an action involving a TCP port."
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                            required:
                              - "port"
                            type: "object"
                          terminationGracePeriodSeconds:
                            description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                            format: "int64"
                            type: "integer"
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                        type: "object"
                      resources:
                        description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                            items:
                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                              properties:
                                name:
                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                  type: "string"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "name"
                            x-kubernetes-list-type: "map"
                          limits:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: "object"
                          requests:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: "object"
                        type: "object"
                      securityContext:
                        description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                        properties:
                          allowPrivilegeEscalation:
                            description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                            type: "boolean"
                          capabilities:
                            description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                            properties:
                              add:
                                description: "Added capabilities"
                                items:
                                  description: "Capability represent POSIX capabilities type"
                                  type: "string"
                                type: "array"
                              drop:
                                description: "Removed capabilities"
                                items:
                                  description: "Capability represent POSIX capabilities type"
                                  type: "string"
                                type: "array"
                            type: "object"
                          privileged:
                            description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                            type: "boolean"
                          procMount:
                            description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                            type: "string"
                          readOnlyRootFilesystem:
                            description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                            type: "boolean"
                          runAsGroup:
                            description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                            format: "int64"
                            type: "integer"
                          runAsNonRoot:
                            description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                            type: "boolean"
                          runAsUser:
                            description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                            format: "int64"
                            type: "integer"
                          seLinuxOptions:
                            description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                            properties:
                              level:
                                description: "Level is SELinux level label that applies to the container."
                                type: "string"
                              role:
                                description: "Role is a SELinux role label that applies to the container."
                                type: "string"
                              type:
                                description: "Type is a SELinux type label that applies to the container."
                                type: "string"
                              user:
                                description: "User is a SELinux user label that applies to the container."
                                type: "string"
                            type: "object"
                          seccompProfile:
                            description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                            properties:
                              localhostProfile:
                                description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\"."
                                type: "string"
                              type:
                                description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                type: "string"
                            required:
                              - "type"
                            type: "object"
                          windowsOptions:
                            description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                            properties:
                              gmsaCredentialSpec:
                                description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                type: "string"
                              gmsaCredentialSpecName:
                                description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                type: "string"
                              hostProcess:
                                description: "HostProcess determines if a container should be run as a 'Host Process' container.\nThis field is alpha-level and will only be honored by components that enable the\nWindowsHostProcessContainers feature flag. Setting this field without the feature\nflag will result in errors when validating the Pod. All of a Pod's containers must\nhave the same effective HostProcess value (it is not allowed to have a mix of HostProcess\ncontainers and non-HostProcess containers).  In addition, if HostProcess is true\nthen HostNetwork must also be set to true."
                                type: "boolean"
                              runAsUserName:
                                description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "string"
                            type: "object"
                        type: "object"
                      startupProbe:
                        description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description: "Exec specifies the action to take."
                            properties:
                              command:
                                description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          failureThreshold:
                            description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          grpc:
                            description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                            properties:
                              port:
                                description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                format: "int32"
                                type: "integer"
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          httpGet:
                            description: "HTTPGet specifies the http request to perform."
                            properties:
                              host:
                                description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                type: "string"
                              httpHeaders:
                                description: "Custom headers to set in the request. HTTP allows repeated headers."
                                items:
                                  description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                  properties:
                                    name:
                                      description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                      type: "string"
                                    value:
                                      description: "The header field value"
                                      type: "string"
                                  required:
                                    - "name"
                                    - "value"
                                  type: "object"
                                type: "array"
                              path:
                                description: "Path to access on the HTTP server."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                          periodSeconds:
                            description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          successThreshold:
                            description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          tcpSocket:
                            description: "TCPSocket specifies an action involving a TCP port."
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                            required:
                              - "port"
                            type: "object"
                          terminationGracePeriodSeconds:
                            description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                            format: "int64"
                            type: "integer"
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                        type: "object"
                      stdin:
                        description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                        type: "boolean"
                      stdinOnce:
                        description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                        type: "boolean"
                      terminationMessagePath:
                        description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                        type: "string"
                      terminationMessagePolicy:
                        description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                        type: "string"
                      tty:
                        description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                        type: "boolean"
                      volumeDevices:
                        description: "volumeDevices is the list of block devices to be used by the container."
                        items:
                          description: "volumeDevice describes a mapping of a raw block device within a container."
                          properties:
                            devicePath:
                              description: "devicePath is the path inside of the container that the device will be mapped to."
                              type: "string"
                            name:
                              description: "name must match the name of a persistentVolumeClaim in the pod"
                              type: "string"
                          required:
                            - "devicePath"
                            - "name"
                          type: "object"
                        type: "array"
                      volumeMounts:
                        description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                        items:
                          description: "VolumeMount describes a mounting of a Volume within a container."
                          properties:
                            mountPath:
                              description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                              type: "string"
                            mountPropagation:
                              description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                              type: "string"
                            name:
                              description: "This must match the Name of a Volume."
                              type: "string"
                            readOnly:
                              description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                              type: "boolean"
                            subPath:
                              description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                              type: "string"
                            subPathExpr:
                              description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                              type: "string"
                          required:
                            - "mountPath"
                            - "name"
                          type: "object"
                        type: "array"
                      workingDir:
                        description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                        type: "string"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "name"
                  x-kubernetes-list-type: "map"
                manageTLS:
                  description: "Enable management of TLS certificates. Defaults to true."
                  type: "boolean"
                monitoring:
                  description: "Specifies parameters for Service Monitor."
                  properties:
                    endpoints:
                      description: "A YAML snippet representing an array of Endpoint component from ServiceMonitor."
                      items:
                        description: "Endpoint defines a scrapeable endpoint serving Prometheus metrics."
                        properties:
                          authorization:
                            description: "Authorization section for this endpoint"
                            properties:
                              credentials:
                                description: "The secret's key that contains the credentials of the request"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              type:
                                description: "Set the authentication type. Defaults to Bearer, Basic will cause an\nerror"
                                type: "string"
                            type: "object"
                          basicAuth:
                            description: "BasicAuth allow an endpoint to authenticate over basic authentication\nMore info: https://prometheus.io/docs/operating/configuration/#endpoints"
                            properties:
                              password:
                                description: "The secret in the service monitor namespace that contains the password\nfor authentication."
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              username:
                                description: "The secret in the service monitor namespace that contains the username\nfor authentication."
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                          bearerTokenFile:
                            description: "File to read bearer token for scraping targets."
                            type: "string"
                          bearerTokenSecret:
                            description: "Secret to mount to read bearer token for scraping targets. The secret\nneeds to be in the same namespace as the service monitor and accessible by\nthe Prometheus Operator."
                            properties:
                              key:
                                description: "The key of the secret to select from.  Must be a valid secret key."
                                type: "string"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "Specify whether the Secret or its key must be defined"
                                type: "boolean"
                            required:
                              - "key"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          enableHttp2:
                            description: "Whether to enable HTTP2."
                            type: "boolean"
                          filterRunning:
                            description: "Drop pods that are not running. (Failed, Succeeded). Enabled by default.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase"
                            type: "boolean"
                          followRedirects:
                            description: "FollowRedirects configures whether scrape requests follow HTTP 3xx redirects."
                            type: "boolean"
                          honorLabels:
                            description: "HonorLabels chooses the metric's labels on collisions with target labels."
                            type: "boolean"
                          honorTimestamps:
                            description: "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data."
                            type: "boolean"
                          interval:
                            description: "Interval at which metrics should be scraped\nIf not specified Prometheus' global scrape interval is used."
                            pattern: "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                            type: "string"
                          metricRelabelings:
                            description: "MetricRelabelConfigs to apply to samples before ingestion."
                            items:
                              description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of Prometheus configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                              properties:
                                action:
                                  default: "replace"
                                  description: "Action to perform based on regex matching. Default is 'replace'.\nuppercase and lowercase actions require Prometheus >= 2.36."
                                  enum:
                                    - "replace"
                                    - "Replace"
                                    - "keep"
                                    - "Keep"
                                    - "drop"
                                    - "Drop"
                                    - "hashmod"
                                    - "HashMod"
                                    - "labelmap"
                                    - "LabelMap"
                                    - "labeldrop"
                                    - "LabelDrop"
                                    - "labelkeep"
                                    - "LabelKeep"
                                    - "lowercase"
                                    - "Lowercase"
                                    - "uppercase"
                                    - "Uppercase"
                                    - "keepequal"
                                    - "KeepEqual"
                                    - "dropequal"
                                    - "DropEqual"
                                  type: "string"
                                modulus:
                                  description: "Modulus to take of the hash of the source label values."
                                  format: "int64"
                                  type: "integer"
                                regex:
                                  description: "Regular expression against which the extracted value is matched. Default is '(.*)'"
                                  type: "string"
                                replacement:
                                  description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                                  type: "string"
                                separator:
                                  description: "Separator placed between concatenated source label values. default is ';'."
                                  type: "string"
                                sourceLabels:
                                  description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                                  items:
                                    description: "LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores."
                                    pattern: "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                    type: "string"
                                  type: "array"
                                targetLabel:
                                  description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                                  type: "string"
                              type: "object"
                            type: "array"
                          oauth2:
                            description: "OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer."
                            properties:
                              clientId:
                                description: "The secret or configmap containing the OAuth2 client id"
                                properties:
                                  configMap:
                                    description: "ConfigMap containing data to use for the targets."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secret:
                                    description: "Secret containing data to use for the targets."
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                              clientSecret:
                                description: "The secret containing the OAuth2 client secret"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              endpointParams:
                                additionalProperties:
                                  type: "string"
                                description: "Parameters to append to the token URL"
                                type: "object"
                              scopes:
                                description: "OAuth2 scopes used for the token request"
                                items:
                                  type: "string"
                                type: "array"
                              tokenUrl:
                                description: "The URL to fetch the token from"
                                minLength: 1
                                type: "string"
                            required:
                              - "clientId"
                              - "clientSecret"
                              - "tokenUrl"
                            type: "object"
                          params:
                            additionalProperties:
                              items:
                                type: "string"
                              type: "array"
                            description: "Optional HTTP URL parameters"
                            type: "object"
                          path:
                            description: "HTTP path to scrape for metrics.\nIf empty, Prometheus uses the default value (e.g. `/metrics`)."
                            type: "string"
                          port:
                            description: "Name of the service port this endpoint refers to. Mutually exclusive with targetPort."
                            type: "string"
                          proxyUrl:
                            description: "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint."
                            type: "string"
                          relabelings:
                            description: "RelabelConfigs to apply to samples before scraping.\nPrometheus Operator automatically adds relabelings for a few standard Kubernetes fields.\nThe original scrape job's name is available via the `__tmp_prometheus_job_name` label.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config"
                            items:
                              description: "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>`-section of Prometheus configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs"
                              properties:
                                action:
                                  default: "replace"
                                  description: "Action to perform based on regex matching. Default is 'replace'.\nuppercase and lowercase actions require Prometheus >= 2.36."
                                  enum:
                                    - "replace"
                                    - "Replace"
                                    - "keep"
                                    - "Keep"
                                    - "drop"
                                    - "Drop"
                                    - "hashmod"
                                    - "HashMod"
                                    - "labelmap"
                                    - "LabelMap"
                                    - "labeldrop"
                                    - "LabelDrop"
                                    - "labelkeep"
                                    - "LabelKeep"
                                    - "lowercase"
                                    - "Lowercase"
                                    - "uppercase"
                                    - "Uppercase"
                                    - "keepequal"
                                    - "KeepEqual"
                                    - "dropequal"
                                    - "DropEqual"
                                  type: "string"
                                modulus:
                                  description: "Modulus to take of the hash of the source label values."
                                  format: "int64"
                                  type: "integer"
                                regex:
                                  description: "Regular expression against which the extracted value is matched. Default is '(.*)'"
                                  type: "string"
                                replacement:
                                  description: "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'"
                                  type: "string"
                                separator:
                                  description: "Separator placed between concatenated source label values. default is ';'."
                                  type: "string"
                                sourceLabels:
                                  description: "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions."
                                  items:
                                    description: "LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores."
                                    pattern: "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                    type: "string"
                                  type: "array"
                                targetLabel:
                                  description: "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available."
                                  type: "string"
                              type: "object"
                            type: "array"
                          scheme:
                            description: "HTTP scheme to use for scraping."
                            type: "string"
                          scrapeTimeout:
                            description: "Timeout after which the scrape is ended\nIf not specified, the Prometheus global scrape timeout is used unless it is less than `Interval` in which the latter is used."
                            pattern: "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                            type: "string"
                          targetPort:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            description: "Name or number of the target port of the Pod behind the Service, the port must be specified with container port property. Mutually exclusive with port."
                            x-kubernetes-int-or-string: true
                          tlsConfig:
                            description: "TLS configuration to use when scraping the endpoint"
                            properties:
                              ca:
                                description: "Certificate authority used when verifying server certificates."
                                properties:
                                  configMap:
                                    description: "ConfigMap containing data to use for the targets."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secret:
                                    description: "Secret containing data to use for the targets."
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                              caFile:
                                description: "Path to the CA cert in the Prometheus container to use for the targets."
                                type: "string"
                              cert:
                                description: "Client certificate to present when doing client-authentication."
                                properties:
                                  configMap:
                                    description: "ConfigMap containing data to use for the targets."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secret:
                                    description: "Secret containing data to use for the targets."
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                              certFile:
                                description: "Path to the client cert file in the Prometheus container for the targets."
                                type: "string"
                              insecureSkipVerify:
                                description: "Disable target certificate validation."
                                type: "boolean"
                              keyFile:
                                description: "Path to the client key file in the Prometheus container for the targets."
                                type: "string"
                              keySecret:
                                description: "Secret containing the client key file for the targets."
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              serverName:
                                description: "Used to verify the hostname for the targets."
                                type: "string"
                            type: "object"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-type: "atomic"
                    labels:
                      additionalProperties:
                        type: "string"
                      description: "Labels to set on ServiceMonitor."
                      type: "object"
                  type: "object"
                networkPolicy:
                  description: "Defines the network policy"
                  properties:
                    disable:
                      description: "Disable the creation of the network policy. Defaults to false."
                      type: "boolean"
                    fromLabels:
                      additionalProperties:
                        type: "string"
                      description: "Specify the labels of pod(s) that incoming traffic is allowed from."
                      type: "object"
                    namespaceLabels:
                      additionalProperties:
                        type: "string"
                      description: "Specify the labels of namespaces that incoming traffic is allowed from."
                      type: "object"
                  type: "object"
                probes:
                  description: "Define health checks on application container to determine whether it is alive or ready to receive traffic"
                  properties:
                    liveness:
                      description: "Periodic probe of container liveness. Container will be restarted if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    readiness:
                      description: "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                    startup:
                      description: "Probe to determine successful initialization. If specified, other probes are not executed until this completes successfully."
                      properties:
                        exec:
                          description: "Exec specifies the action to take."
                          properties:
                            command:
                              description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        failureThreshold:
                          description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        grpc:
                          description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                          properties:
                            port:
                              description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                              format: "int32"
                              type: "integer"
                            service:
                              description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        httpGet:
                          description: "HTTPGet specifies the http request to perform."
                          properties:
                            host:
                              description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                              type: "string"
                            httpHeaders:
                              description: "Custom headers to set in the request. HTTP allows repeated headers."
                              items:
                                description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                properties:
                                  name:
                                    description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                    type: "string"
                                  value:
                                    description: "The header field value"
                                    type: "string"
                                required:
                                  - "name"
                                  - "value"
                                type: "object"
                              type: "array"
                            path:
                              description: "Path to access on the HTTP server."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                              type: "string"
                          required:
                            - "port"
                          type: "object"
                        initialDelaySeconds:
                          description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                        periodSeconds:
                          description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        successThreshold:
                          description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                          format: "int32"
                          type: "integer"
                        tcpSocket:
                          description: "TCPSocket specifies an action involving a TCP port."
                          properties:
                            host:
                              description: "Optional: Host name to connect to, defaults to the pod IP."
                              type: "string"
                            port:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                              x-kubernetes-int-or-string: true
                          required:
                            - "port"
                          type: "object"
                        terminationGracePeriodSeconds:
                          description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                          format: "int64"
                          type: "integer"
                        timeoutSeconds:
                          description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                          format: "int32"
                          type: "integer"
                      type: "object"
                  type: "object"
                pullPolicy:
                  description: "Policy for pulling container images. Defaults to IfNotPresent."
                  type: "string"
                pullSecret:
                  description: "Name of the Secret to use to pull images from the specified repository. It is not required if the cluster is configured with a global image pull secret."
                  type: "string"
                replicas:
                  description: "Number of pods to create. Defaults to 1. Not applicable when .spec.autoscaling or .spec.createKnativeService is specified."
                  format: "int32"
                  type: "integer"
                resources:
                  description: "Resource requests and limits for the application container."
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                      items:
                        description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                        properties:
                          name:
                            description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "name"
                      x-kubernetes-list-type: "map"
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                  type: "object"
                route:
                  description: "Configures the ingress resource."
                  properties:
                    annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations to be added to the Route."
                      type: "object"
                    certificateSecretRef:
                      description: "A name of a secret that already contains TLS key, certificate and CA to be used in the route. It can also contain destination CA certificate. The following keys are valid in the secret: ca.crt, destCA.crt, tls.crt, and tls.key."
                      type: "string"
                    host:
                      description: "Hostname to be used for the Route."
                      type: "string"
                    insecureEdgeTerminationPolicy:
                      description: "HTTP traffic policy with TLS enabled. Can be one of Allow, Redirect and None."
                      type: "string"
                    path:
                      description: "Path to be used for Route."
                      type: "string"
                    pathType:
                      description: "Path type to be used for Ingress."
                      type: "string"
                    termination:
                      description: "TLS termination policy. Can be one of edge, reencrypt and passthrough."
                      type: "string"
                  type: "object"
                securityContext:
                  description: "Security context for the application container."
                  properties:
                    allowPrivilegeEscalation:
                      description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                      type: "boolean"
                    capabilities:
                      description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                      properties:
                        add:
                          description: "Added capabilities"
                          items:
                            description: "Capability represent POSIX capabilities type"
                            type: "string"
                          type: "array"
                        drop:
                          description: "Removed capabilities"
                          items:
                            description: "Capability represent POSIX capabilities type"
                            type: "string"
                          type: "array"
                      type: "object"
                    privileged:
                      description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                      type: "boolean"
                    procMount:
                      description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                      type: "string"
                    readOnlyRootFilesystem:
                      description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                      type: "boolean"
                    runAsGroup:
                      description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                      format: "int64"
                      type: "integer"
                    runAsNonRoot:
                      description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                      type: "boolean"
                    runAsUser:
                      description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                      format: "int64"
                      type: "integer"
                    seLinuxOptions:
                      description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                      properties:
                        level:
                          description: "Level is SELinux level label that applies to the container."
                          type: "string"
                        role:
                          description: "Role is a SELinux role label that applies to the container."
                          type: "string"
                        type:
                          description: "Type is a SELinux type label that applies to the container."
                          type: "string"
                        user:
                          description: "User is a SELinux user label that applies to the container."
                          type: "string"
                      type: "object"
                    seccompProfile:
                      description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                      properties:
                        localhostProfile:
                          description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\"."
                          type: "string"
                        type:
                          description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                          type: "string"
                      required:
                        - "type"
                      type: "object"
                    windowsOptions:
                      description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                      properties:
                        gmsaCredentialSpec:
                          description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                          type: "string"
                        gmsaCredentialSpecName:
                          description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                          type: "string"
                        hostProcess:
                          description: "HostProcess determines if a container should be run as a 'Host Process' container.\nThis field is alpha-level and will only be honored by components that enable the\nWindowsHostProcessContainers feature flag. Setting this field without the feature\nflag will result in errors when validating the Pod. All of a Pod's containers must\nhave the same effective HostProcess value (it is not allowed to have a mix of HostProcess\ncontainers and non-HostProcess containers).  In addition, if HostProcess is true\nthen HostNetwork must also be set to true."
                          type: "boolean"
                        runAsUserName:
                          description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                          type: "string"
                      type: "object"
                  type: "object"
                service:
                  description: "Configures parameters for the network service of pods."
                  properties:
                    annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations to be added to the service."
                      type: "object"
                    bindable:
                      description: "Expose the application as a bindable service. Defaults to false."
                      type: "boolean"
                    certificate:
                      description: "Configure service certificate."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations to be added to the service certificate."
                          type: "object"
                      type: "object"
                    certificateSecretRef:
                      description: "A name of a secret that already contains TLS key, certificate and CA to be mounted in the pod. The following keys are valid in the secret: ca.crt, tls.crt, and tls.key."
                      type: "string"
                    nodePort:
                      description: "Node proxies this port into your service."
                      format: "int32"
                      maximum: 32767.0
                      minimum: 30000.0
                      type: "integer"
                    port:
                      description: "The port exposed by the container."
                      format: "int32"
                      maximum: 65535.0
                      minimum: 1.0
                      type: "integer"
                    portName:
                      description: "The name for the port exposed by the container."
                      type: "string"
                    ports:
                      description: "An array consisting of service ports."
                      items:
                        description: "ServicePort contains information on service's port."
                        properties:
                          appProtocol:
                            description: "The application protocol for this port.\nThis field follows standard Kubernetes label syntax.\nUn-prefixed names are reserved for IANA standard service names (as per\nRFC-6335 and https://www.iana.org/assignments/service-names).\nNon-standard protocols should use prefixed names such as\nmycompany.com/my-custom-protocol."
                            type: "string"
                          name:
                            description: "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. When considering\nthe endpoints for a Service, this must match the 'name' field in the\nEndpointPort.\nOptional if only one ServicePort is defined on this service."
                            type: "string"
                          nodePort:
                            description: "The port on each node on which this service is exposed when type is\nNodePort or LoadBalancer.  Usually assigned by the system. If a value is\nspecified, in-range, and not in use it will be used, otherwise the\noperation will fail.  If not specified, a port will be allocated if this\nService requires one.  If this field is specified when creating a\nService which does not need it, creation will fail. This field will be\nwiped when updating a Service to no longer need it (e.g. changing type\nfrom NodePort to ClusterIP).\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"
                            format: "int32"
                            type: "integer"
                          port:
                            description: "The port that will be exposed by this service."
                            format: "int32"
                            type: "integer"
                          protocol:
                            default: "TCP"
                            description: "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP."
                            type: "string"
                          targetPort:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            description: "Number or name of the port to access on the pods targeted by the service.\nNumber must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\nIf this is a string, it will be looked up as a named port in the\ntarget Pod's container ports. If this is not specified, the value\nof the 'port' field is used (an identity map).\nThis field is ignored for services with clusterIP=None, and should be\nomitted or set equal to the 'port' field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service"
                            x-kubernetes-int-or-string: true
                        required:
                          - "port"
                        type: "object"
                      type: "array"
                    targetPort:
                      description: "The port that the operator assigns to containers inside pods. Defaults to the value of .spec.service.port."
                      format: "int32"
                      maximum: 65535.0
                      minimum: 1.0
                      type: "integer"
                    type:
                      description: "Service Type string describes ingress methods for a service"
                      type: "string"
                  type: "object"
                serviceAccount:
                  description: "The service account to use for deploying the application. A service account is automatically created if this is not specifed."
                  properties:
                    mountToken:
                      description: "Whether the Service Account token should be mounted into the application pods. Defaults to true."
                      type: "boolean"
                    name:
                      description: "Name of the service account to use for deploying the application. A service account is automatically created if it's not specified."
                      type: "string"
                  type: "object"
                serviceAccountName:
                  description: "Deprecated. .spec.serviceAccount.name should be used instead. If both are specified, .spec.serviceAccount.name will override this."
                  type: "string"
                sidecarContainers:
                  description: "List of sidecar containers. These are additional containers to be added to the pods."
                  items:
                    description: "A single application container that you want to run within a pod."
                    properties:
                      args:
                        description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                        items:
                          type: "string"
                        type: "array"
                      command:
                        description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                        items:
                          type: "string"
                        type: "array"
                      env:
                        description: "List of environment variables to set in the container.\nCannot be updated."
                        items:
                          description: "EnvVar represents an environment variable present in a Container."
                          properties:
                            name:
                              description: "Name of the environment variable. Must be a C_IDENTIFIER."
                              type: "string"
                            value:
                              description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                              type: "string"
                            valueFrom:
                              description: "Source for the environment variable's value. Cannot be used if value is not empty."
                              properties:
                                configMapKeyRef:
                                  description: "Selects a key of a ConfigMap."
                                  properties:
                                    key:
                                      description: "The key to select."
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap or its key must be defined"
                                      type: "boolean"
                                  required:
                                    - "key"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                fieldRef:
                                  description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                  properties:
                                    apiVersion:
                                      description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                      type: "string"
                                    fieldPath:
                                      description: "Path of the field to select in the specified API version."
                                      type: "string"
                                  required:
                                    - "fieldPath"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                resourceFieldRef:
                                  description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                  properties:
                                    containerName:
                                      description: "Container name: required for volumes, optional for env vars"
                                      type: "string"
                                    divisor:
                                      anyOf:
                                        - type: "integer"
                                        - type: "string"
                                      description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: "Required: resource to select"
                                      type: "string"
                                  required:
                                    - "resource"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                secretKeyRef:
                                  description: "Selects a key of a secret in the pod's namespace"
                                  properties:
                                    key:
                                      description: "The key of the secret to select from.  Must be a valid secret key."
                                      type: "string"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret or its key must be defined"
                                      type: "boolean"
                                  required:
                                    - "key"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                          required:
                            - "name"
                          type: "object"
                        type: "array"
                      envFrom:
                        description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                        items:
                          description: "EnvFromSource represents the source of a set of ConfigMaps"
                          properties:
                            configMapRef:
                              description: "The ConfigMap to select from"
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the ConfigMap must be defined"
                                  type: "boolean"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            prefix:
                              description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                              type: "string"
                            secretRef:
                              description: "The Secret to select from"
                              properties:
                                name:
                                  description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: "string"
                                optional:
                                  description: "Specify whether the Secret must be defined"
                                  type: "boolean"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                          type: "object"
                        type: "array"
                      image:
                        description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                        type: "string"
                      imagePullPolicy:
                        description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                        type: "string"
                      lifecycle:
                        description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                        properties:
                          postStart:
                            description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              tcpSocket:
                                description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                            type: "object"
                          preStop:
                            description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              tcpSocket:
                                description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                            type: "object"
                        type: "object"
                      livenessProbe:
                        description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description: "Exec specifies the action to take."
                            properties:
                              command:
                                description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          failureThreshold:
                            description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          grpc:
                            description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                            properties:
                              port:
                                description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                format: "int32"
                                type: "integer"
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          httpGet:
                            description: "HTTPGet specifies the http request to perform."
                            properties:
                              host:
                                description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                type: "string"
                              httpHeaders:
                                description: "Custom headers to set in the request. HTTP allows repeated headers."
                                items:
                                  description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                  properties:
                                    name:
                                      description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                      type: "string"
                                    value:
                                      description: "The header field value"
                                      type: "string"
                                  required:
                                    - "name"
                                    - "value"
                                  type: "object"
                                type: "array"
                              path:
                                description: "Path to access on the HTTP server."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                          periodSeconds:
                            description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          successThreshold:
                            description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          tcpSocket:
                            description: "TCPSocket specifies an action involving a TCP port."
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                            required:
                              - "port"
                            type: "object"
                          terminationGracePeriodSeconds:
                            description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                            format: "int64"
                            type: "integer"
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                        type: "object"
                      name:
                        description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                        type: "string"
                      ports:
                        description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                        items:
                          description: "ContainerPort represents a network port in a single container."
                          properties:
                            containerPort:
                              description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                              format: "int32"
                              type: "integer"
                            hostIP:
                              description: "What host IP to bind the external port to."
                              type: "string"
                            hostPort:
                              description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                              format: "int32"
                              type: "integer"
                            name:
                              description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                              type: "string"
                            protocol:
                              default: "TCP"
                              description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                              type: "string"
                          required:
                            - "containerPort"
                          type: "object"
                        type: "array"
                        x-kubernetes-list-map-keys:
                          - "containerPort"
                          - "protocol"
                        x-kubernetes-list-type: "map"
                      readinessProbe:
                        description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description: "Exec specifies the action to take."
                            properties:
                              command:
                                description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          failureThreshold:
                            description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          grpc:
                            description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                            properties:
                              port:
                                description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                format: "int32"
                                type: "integer"
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          httpGet:
                            description: "HTTPGet specifies the http request to perform."
                            properties:
                              host:
                                description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                type: "string"
                              httpHeaders:
                                description: "Custom headers to set in the request. HTTP allows repeated headers."
                                items:
                                  description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                  properties:
                                    name:
                                      description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                      type: "string"
                                    value:
                                      description: "The header field value"
                                      type: "string"
                                  required:
                                    - "name"
                                    - "value"
                                  type: "object"
                                type: "array"
                              path:
                                description: "Path to access on the HTTP server."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                          periodSeconds:
                            description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          successThreshold:
                            description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          tcpSocket:
                            description: "TCPSocket specifies an action involving a TCP port."
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                            required:
                              - "port"
                            type: "object"
                          terminationGracePeriodSeconds:
                            description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                            format: "int64"
                            type: "integer"
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                        type: "object"
                      resources:
                        description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                            items:
                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                              properties:
                                name:
                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                  type: "string"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "name"
                            x-kubernetes-list-type: "map"
                          limits:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: "object"
                          requests:
                            additionalProperties:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                              x-kubernetes-int-or-string: true
                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: "object"
                        type: "object"
                      securityContext:
                        description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                        properties:
                          allowPrivilegeEscalation:
                            description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                            type: "boolean"
                          capabilities:
                            description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                            properties:
                              add:
                                description: "Added capabilities"
                                items:
                                  description: "Capability represent POSIX capabilities type"
                                  type: "string"
                                type: "array"
                              drop:
                                description: "Removed capabilities"
                                items:
                                  description: "Capability represent POSIX capabilities type"
                                  type: "string"
                                type: "array"
                            type: "object"
                          privileged:
                            description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                            type: "boolean"
                          procMount:
                            description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                            type: "string"
                          readOnlyRootFilesystem:
                            description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                            type: "boolean"
                          runAsGroup:
                            description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                            format: "int64"
                            type: "integer"
                          runAsNonRoot:
                            description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                            type: "boolean"
                          runAsUser:
                            description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                            format: "int64"
                            type: "integer"
                          seLinuxOptions:
                            description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                            properties:
                              level:
                                description: "Level is SELinux level label that applies to the container."
                                type: "string"
                              role:
                                description: "Role is a SELinux role label that applies to the container."
                                type: "string"
                              type:
                                description: "Type is a SELinux type label that applies to the container."
                                type: "string"
                              user:
                                description: "User is a SELinux user label that applies to the container."
                                type: "string"
                            type: "object"
                          seccompProfile:
                            description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                            properties:
                              localhostProfile:
                                description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\"."
                                type: "string"
                              type:
                                description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                type: "string"
                            required:
                              - "type"
                            type: "object"
                          windowsOptions:
                            description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                            properties:
                              gmsaCredentialSpec:
                                description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                type: "string"
                              gmsaCredentialSpecName:
                                description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                type: "string"
                              hostProcess:
                                description: "HostProcess determines if a container should be run as a 'Host Process' container.\nThis field is alpha-level and will only be honored by components that enable the\nWindowsHostProcessContainers feature flag. Setting this field without the feature\nflag will result in errors when validating the Pod. All of a Pod's containers must\nhave the same effective HostProcess value (it is not allowed to have a mix of HostProcess\ncontainers and non-HostProcess containers).  In addition, if HostProcess is true\nthen HostNetwork must also be set to true."
                                type: "boolean"
                              runAsUserName:
                                description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "string"
                            type: "object"
                        type: "object"
                      startupProbe:
                        description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description: "Exec specifies the action to take."
                            properties:
                              command:
                                description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          failureThreshold:
                            description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          grpc:
                            description: "GRPC specifies an action involving a GRPC port.\nThis is a beta field and requires enabling GRPCContainerProbe feature gate."
                            properties:
                              port:
                                description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                format: "int32"
                                type: "integer"
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          httpGet:
                            description: "HTTPGet specifies the http request to perform."
                            properties:
                              host:
                                description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                type: "string"
                              httpHeaders:
                                description: "Custom headers to set in the request. HTTP allows repeated headers."
                                items:
                                  description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                  properties:
                                    name:
                                      description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                      type: "string"
                                    value:
                                      description: "The header field value"
                                      type: "string"
                                  required:
                                    - "name"
                                    - "value"
                                  type: "object"
                                type: "array"
                              path:
                                description: "Path to access on the HTTP server."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                type: "string"
                            required:
                              - "port"
                            type: "object"
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                          periodSeconds:
                            description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          successThreshold:
                            description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                            format: "int32"
                            type: "integer"
                          tcpSocket:
                            description: "TCPSocket specifies an action involving a TCP port."
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: "string"
                              port:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                x-kubernetes-int-or-string: true
                            required:
                              - "port"
                            type: "object"
                          terminationGracePeriodSeconds:
                            description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                            format: "int64"
                            type: "integer"
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: "int32"
                            type: "integer"
                        type: "object"
                      stdin:
                        description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                        type: "boolean"
                      stdinOnce:
                        description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                        type: "boolean"
                      terminationMessagePath:
                        description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                        type: "string"
                      terminationMessagePolicy:
                        description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                        type: "string"
                      tty:
                        description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                        type: "boolean"
                      volumeDevices:
                        description: "volumeDevices is the list of block devices to be used by the container."
                        items:
                          description: "volumeDevice describes a mapping of a raw block device within a container."
                          properties:
                            devicePath:
                              description: "devicePath is the path inside of the container that the device will be mapped to."
                              type: "string"
                            name:
                              description: "name must match the name of a persistentVolumeClaim in the pod"
                              type: "string"
                          required:
                            - "devicePath"
                            - "name"
                          type: "object"
                        type: "array"
                      volumeMounts:
                        description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                        items:
                          description: "VolumeMount describes a mounting of a Volume within a container."
                          properties:
                            mountPath:
                              description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                              type: "string"
                            mountPropagation:
                              description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                              type: "string"
                            name:
                              description: "This must match the Name of a Volume."
                              type: "string"
                            readOnly:
                              description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                              type: "boolean"
                            subPath:
                              description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                              type: "string"
                            subPathExpr:
                              description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                              type: "string"
                          required:
                            - "mountPath"
                            - "name"
                          type: "object"
                        type: "array"
                      workingDir:
                        description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                        type: "string"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "name"
                  x-kubernetes-list-type: "map"
                statefulSet:
                  description: "Defines the desired state and cycle of stateful applications."
                  properties:
                    annotations:
                      additionalProperties:
                        type: "string"
                      description: "Annotations to be added only to the StatefulSet and resources owned by the StatefulSet."
                      type: "object"
                    storage:
                      description: "Defines settings of persisted storage for StatefulSets."
                      properties:
                        className:
                          description: "A convenient field to request the storage class of the persisted storage. The name can not be specified or updated after the storage is created."
                          pattern: ".+"
                          type: "string"
                        mountPath:
                          description: "The directory inside the container where this persisted storage will be bound to."
                          type: "string"
                        size:
                          description: "A convenient field to set the size of the persisted storage."
                          pattern: "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                          type: "string"
                        volumeClaimTemplate:
                          description: "A YAML object that represents a volumeClaimTemplate component of a StatefulSet."
                          properties:
                            apiVersion:
                              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
                              type: "string"
                            kind:
                              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                              type: "string"
                            metadata:
                              description: "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: "string"
                                  type: "object"
                                finalizers:
                                  items:
                                    type: "string"
                                  type: "array"
                                labels:
                                  additionalProperties:
                                    type: "string"
                                  type: "object"
                                name:
                                  type: "string"
                                namespace:
                                  type: "string"
                              type: "object"
                            spec:
                              description: "spec defines the desired characteristics of a volume requested by a pod author.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                              properties:
                                accessModes:
                                  description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                  items:
                                    type: "string"
                                  type: "array"
                                dataSource:
                                  description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                                  properties:
                                    apiGroup:
                                      description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                      type: "string"
                                    kind:
                                      description: "Kind is the type of resource being referenced"
                                      type: "string"
                                    name:
                                      description: "Name is the name of resource being referenced"
                                      type: "string"
                                  required:
                                    - "kind"
                                    - "name"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                dataSourceRef:
                                  description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                  properties:
                                    apiGroup:
                                      description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                      type: "string"
                                    kind:
                                      description: "Kind is the type of resource being referenced"
                                      type: "string"
                                    name:
                                      description: "Name is the name of resource being referenced"
                                      type: "string"
                                    namespace:
                                      description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                      type: "string"
                                  required:
                                    - "kind"
                                    - "name"
                                  type: "object"
                                resources:
                                  description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                  properties:
                                    claims:
                                      description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                      items:
                                        description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                        properties:
                                          name:
                                            description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                            type: "string"
                                        required:
                                          - "name"
                                        type: "object"
                                      type: "array"
                                      x-kubernetes-list-map-keys:
                                        - "name"
                                      x-kubernetes-list-type: "map"
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                      type: "object"
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                      type: "object"
                                  type: "object"
                                selector:
                                  description: "selector is a label query over volumes to consider for binding."
                                  properties:
                                    matchExpressions:
                                      description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                      items:
                                        description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                        properties:
                                          key:
                                            description: "key is the label key that the selector applies to."
                                            type: "string"
                                          operator:
                                            description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                            type: "string"
                                          values:
                                            description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                            items:
                                              type: "string"
                                            type: "array"
                                        required:
                                          - "key"
                                          - "operator"
                                        type: "object"
                                      type: "array"
                                    matchLabels:
                                      additionalProperties:
                                        type: "string"
                                      description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                      type: "object"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                storageClassName:
                                  description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                  type: "string"
                                volumeMode:
                                  description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                                  type: "string"
                                volumeName:
                                  description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                                  type: "string"
                              type: "object"
                            status:
                              description: "status represents the current information/status of a persistent volume claim.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                              properties:
                                accessModes:
                                  description: "accessModes contains the actual access modes the volume backing the PVC has.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                  items:
                                    type: "string"
                                  type: "array"
                                allocatedResources:
                                  additionalProperties:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  description: "allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may\nbe larger than the actual capacity when a volume expansion operation is requested.\nFor storage quota, the larger value from allocatedResources and PVC.spec.resources is used.\nIf allocatedResources is not set, PVC.spec.resources alone is used for quota calculation.\nIf a volume expansion capacity request is lowered, allocatedResources is only\nlowered if there are no expansion operations in progress and if the actual volume capacity\nis equal or lower than the requested capacity.\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature."
                                  type: "object"
                                capacity:
                                  additionalProperties:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  description: "capacity represents the actual resources of the underlying volume."
                                  type: "object"
                                conditions:
                                  description: "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being\nresized then the Condition will be set to 'ResizeStarted'."
                                  items:
                                    description: "PersistentVolumeClaimCondition contails details about state of pvc"
                                    properties:
                                      lastProbeTime:
                                        description: "lastProbeTime is the time we probed the condition."
                                        format: "date-time"
                                        type: "string"
                                      lastTransitionTime:
                                        description: "lastTransitionTime is the time the condition transitioned from one status to another."
                                        format: "date-time"
                                        type: "string"
                                      message:
                                        description: "message is the human-readable message indicating details about last transition."
                                        type: "string"
                                      reason:
                                        description: "reason is a unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. If it reports \"ResizeStarted\" that means the underlying\npersistent volume is being resized."
                                        type: "string"
                                      status:
                                        type: "string"
                                      type:
                                        description: "PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type"
                                        type: "string"
                                    required:
                                      - "status"
                                      - "type"
                                    type: "object"
                                  type: "array"
                                phase:
                                  description: "phase represents the current phase of PersistentVolumeClaim."
                                  type: "string"
                                resizeStatus:
                                  description: "resizeStatus stores status of resize operation.\nResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty\nstring by resize controller or kubelet.\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature."
                                  type: "string"
                              type: "object"
                          type: "object"
                      type: "object"
                    updateStrategy:
                      description: "Specifies the strategy to replace old statefulSet pods with new pods."
                      properties:
                        rollingUpdate:
                          description: "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType."
                          properties:
                            maxUnavailable:
                              anyOf:
                                - type: "integer"
                                - type: "string"
                              description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding up. This can not be 0.\nDefaults to 1. This field is alpha-level and is only honored by servers that enable the\nMaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to\nReplicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it\nwill be counted towards MaxUnavailable."
                              x-kubernetes-int-or-string: true
                            partition:
                              description: "Partition indicates the ordinal at which the StatefulSet should be partitioned\nfor updates. During a rolling update, all pods from ordinal Replicas-1 to\nPartition are updated. All pods from ordinal Partition-1 to 0 remain untouched.\nThis is helpful in being able to do a canary based deployment. The default value is 0."
                              format: "int32"
                              type: "integer"
                          type: "object"
                        type:
                          description: "Type indicates the type of the StatefulSetUpdateStrategy.\nDefault is RollingUpdate."
                          type: "string"
                      type: "object"
                  type: "object"
                topologySpreadConstraints:
                  description: "Defines the topology spread constraints"
                  properties:
                    constraints:
                      description: "The list of TopologySpreadConstraints for the application pod."
                      items:
                        description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                        properties:
                          labelSelector:
                            description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                            properties:
                              matchExpressions:
                                description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                  properties:
                                    key:
                                      description: "key is the label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                      type: "string"
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchLabels:
                                additionalProperties:
                                  type: "string"
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: "object"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          matchLabelKeys:
                            description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. Keys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          maxSkew:
                            description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                            format: "int32"
                            type: "integer"
                          minDomains:
                            description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default)."
                            format: "int32"
                            type: "integer"
                          nodeAffinityPolicy:
                            description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          nodeTaintsPolicy:
                            description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                            type: "string"
                          topologyKey:
                            description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                            type: "string"
                          whenUnsatisfiable:
                            description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                            type: "string"
                        required:
                          - "maxSkew"
                          - "topologyKey"
                          - "whenUnsatisfiable"
                        type: "object"
                      type: "array"
                    disableOperatorDefaults:
                      description: "Whether the operator should disable its default set of TopologySpreadConstraints. Defaults to false."
                      type: "boolean"
                  type: "object"
                volumeMounts:
                  description: "Represents where to mount the volumes into the application container."
                  items:
                    description: "VolumeMount describes a mounting of a Volume within a container."
                    properties:
                      mountPath:
                        description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                        type: "string"
                      mountPropagation:
                        description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                        type: "string"
                      name:
                        description: "This must match the Name of a Volume."
                        type: "string"
                      readOnly:
                        description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                        type: "boolean"
                      subPath:
                        description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                        type: "string"
                      subPathExpr:
                        description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                        type: "string"
                    required:
                      - "mountPath"
                      - "name"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-type: "atomic"
                volumes:
                  description: "Represents a volume with data that is accessible to the application container."
                  items:
                    description: "Volume represents a named volume in a pod that may be accessed by any container in the pod."
                    properties:
                      awsElasticBlockStore:
                        description: "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                        properties:
                          fsType:
                            description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                            type: "string"
                          partition:
                            description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                            format: "int32"
                            type: "integer"
                          readOnly:
                            description: "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                            type: "boolean"
                          volumeID:
                            description: "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                            type: "string"
                        required:
                          - "volumeID"
                        type: "object"
                      azureDisk:
                        description: "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
                        properties:
                          cachingMode:
                            description: "cachingMode is the Host Caching mode: None, Read Only, Read Write."
                            type: "string"
                          diskName:
                            description: "diskName is the Name of the data disk in the blob storage"
                            type: "string"
                          diskURI:
                            description: "diskURI is the URI of data disk in the blob storage"
                            type: "string"
                          fsType:
                            description: "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                            type: "string"
                          kind:
                            description: "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                            type: "string"
                          readOnly:
                            description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                            type: "boolean"
                        required:
                          - "diskName"
                          - "diskURI"
                        type: "object"
                      azureFile:
                        description: "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
                        properties:
                          readOnly:
                            description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                            type: "boolean"
                          secretName:
                            description: "secretName is the  name of secret that contains Azure Storage Account Name and Key"
                            type: "string"
                          shareName:
                            description: "shareName is the azure share Name"
                            type: "string"
                        required:
                          - "secretName"
                          - "shareName"
                        type: "object"
                      cephfs:
                        description: "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
                        properties:
                          monitors:
                            description: "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            items:
                              type: "string"
                            type: "array"
                          path:
                            description: "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                            type: "string"
                          readOnly:
                            description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: "boolean"
                          secretFile:
                            description: "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: "string"
                          secretRef:
                            description: "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          user:
                            description: "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: "string"
                        required:
                          - "monitors"
                        type: "object"
                      cinder:
                        description: "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                        properties:
                          fsType:
                            description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            type: "string"
                          readOnly:
                            description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            type: "boolean"
                          secretRef:
                            description: "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack."
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          volumeID:
                            description: "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            type: "string"
                        required:
                          - "volumeID"
                        type: "object"
                      configMap:
                        description: "configMap represents a configMap that should populate this volume"
                        properties:
                          defaultMode:
                            description: "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                            format: "int32"
                            type: "integer"
                          items:
                            description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                            items:
                              description: "Maps a string key to a path within a volume."
                              properties:
                                key:
                                  description: "key is the key to project."
                                  type: "string"
                                mode:
                                  description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                  format: "int32"
                                  type: "integer"
                                path:
                                  description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                  type: "string"
                              required:
                                - "key"
                                - "path"
                              type: "object"
                            type: "array"
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                          optional:
                            description: "optional specify whether the ConfigMap or its keys must be defined"
                            type: "boolean"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      csi:
                        description: "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
                        properties:
                          driver:
                            description: "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
                            type: "string"
                          fsType:
                            description: "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply."
                            type: "string"
                          nodePublishSecretRef:
                            description: "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed."
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          readOnly:
                            description: "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write)."
                            type: "boolean"
                          volumeAttributes:
                            additionalProperties:
                              type: "string"
                            description: "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values."
                            type: "object"
                        required:
                          - "driver"
                        type: "object"
                      downwardAPI:
                        description: "downwardAPI represents downward API about the pod that should populate this volume"
                        properties:
                          defaultMode:
                            description: "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                            format: "int32"
                            type: "integer"
                          items:
                            description: "Items is a list of downward API volume file"
                            items:
                              description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                              properties:
                                fieldRef:
                                  description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                  properties:
                                    apiVersion:
                                      description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                      type: "string"
                                    fieldPath:
                                      description: "Path of the field to select in the specified API version."
                                      type: "string"
                                  required:
                                    - "fieldPath"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                mode:
                                  description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                  format: "int32"
                                  type: "integer"
                                path:
                                  description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                  type: "string"
                                resourceFieldRef:
                                  description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                  properties:
                                    containerName:
                                      description: "Container name: required for volumes, optional for env vars"
                                      type: "string"
                                    divisor:
                                      anyOf:
                                        - type: "integer"
                                        - type: "string"
                                      description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: "Required: resource to select"
                                      type: "string"
                                  required:
                                    - "resource"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              required:
                                - "path"
                              type: "object"
                            type: "array"
                        type: "object"
                      emptyDir:
                        description: "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                        properties:
                          medium:
                            description: "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                            type: "string"
                          sizeLimit:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            description: "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: http://kubernetes.io/docs/user-guide/volumes#emptydir"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                        type: "object"
                      ephemeral:
                        description: "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time."
                        properties:
                          volumeClaimTemplate:
                            description: "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\n\nRequired, must not be nil."
                            properties:
                              metadata:
                                description: "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation."
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: "string"
                                    type: "object"
                                  finalizers:
                                    items:
                                      type: "string"
                                    type: "array"
                                  labels:
                                    additionalProperties:
                                      type: "string"
                                    type: "object"
                                  name:
                                    type: "string"
                                  namespace:
                                    type: "string"
                                type: "object"
                              spec:
                                description: "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
                                properties:
                                  accessModes:
                                    description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                    items:
                                      type: "string"
                                    type: "array"
                                  dataSource:
                                    description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                                    properties:
                                      apiGroup:
                                        description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                        type: "string"
                                      kind:
                                        description: "Kind is the type of resource being referenced"
                                        type: "string"
                                      name:
                                        description: "Name is the name of resource being referenced"
                                        type: "string"
                                    required:
                                      - "kind"
                                      - "name"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  dataSourceRef:
                                    description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                    properties:
                                      apiGroup:
                                        description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                        type: "string"
                                      kind:
                                        description: "Kind is the type of resource being referenced"
                                        type: "string"
                                      name:
                                        description: "Name is the name of resource being referenced"
                                        type: "string"
                                      namespace:
                                        description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                        type: "string"
                                    required:
                                      - "kind"
                                      - "name"
                                    type: "object"
                                  resources:
                                    description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                    properties:
                                      claims:
                                        description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                        items:
                                          description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                          properties:
                                            name:
                                              description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                              type: "string"
                                          required:
                                            - "name"
                                          type: "object"
                                        type: "array"
                                        x-kubernetes-list-map-keys:
                                          - "name"
                                        x-kubernetes-list-type: "map"
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                        type: "object"
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                        type: "object"
                                    type: "object"
                                  selector:
                                    description: "selector is a label query over volumes to consider for binding."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  storageClassName:
                                    description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                    type: "string"
                                  volumeMode:
                                    description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                                    type: "string"
                                  volumeName:
                                    description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                                    type: "string"
                                type: "object"
                            required:
                              - "spec"
                            type: "object"
                        type: "object"
                      fc:
                        description: "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
                        properties:
                          fsType:
                            description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                            type: "string"
                          lun:
                            description: "lun is Optional: FC target lun number"
                            format: "int32"
                            type: "integer"
                          readOnly:
                            description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                            type: "boolean"
                          targetWWNs:
                            description: "targetWWNs is Optional: FC target worldwide names (WWNs)"
                            items:
                              type: "string"
                            type: "array"
                          wwids:
                            description: "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                            items:
                              type: "string"
                            type: "array"
                        type: "object"
                      flexVolume:
                        description: "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
                        properties:
                          driver:
                            description: "driver is the name of the driver to use for this volume."
                            type: "string"
                          fsType:
                            description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                            type: "string"
                          options:
                            additionalProperties:
                              type: "string"
                            description: "options is Optional: this field holds extra command options if any."
                            type: "object"
                          readOnly:
                            description: "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                            type: "boolean"
                          secretRef:
                            description: "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts."
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                        required:
                          - "driver"
                        type: "object"
                      flocker:
                        description: "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
                        properties:
                          datasetName:
                            description: "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated"
                            type: "string"
                          datasetUUID:
                            description: "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset"
                            type: "string"
                        type: "object"
                      gcePersistentDisk:
                        description: "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                        properties:
                          fsType:
                            description: "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                            type: "string"
                          partition:
                            description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            format: "int32"
                            type: "integer"
                          pdName:
                            description: "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            type: "string"
                          readOnly:
                            description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            type: "boolean"
                        required:
                          - "pdName"
                        type: "object"
                      gitRepo:
                        description: "gitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
                        properties:
                          directory:
                            description: "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name."
                            type: "string"
                          repository:
                            description: "repository is the URL"
                            type: "string"
                          revision:
                            description: "revision is the commit hash for the specified revision."
                            type: "string"
                        required:
                          - "repository"
                        type: "object"
                      glusterfs:
                        description: "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md"
                        properties:
                          endpoints:
                            description: "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                            type: "string"
                          path:
                            description: "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                            type: "string"
                          readOnly:
                            description: "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                            type: "boolean"
                        required:
                          - "endpoints"
                          - "path"
                        type: "object"
                      hostPath:
                        description: "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write."
                        properties:
                          path:
                            description: "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                            type: "string"
                          type:
                            description: "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                            type: "string"
                        required:
                          - "path"
                        type: "object"
                      iscsi:
                        description: "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md"
                        properties:
                          chapAuthDiscovery:
                            description: "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication"
                            type: "boolean"
                          chapAuthSession:
                            description: "chapAuthSession defines whether support iSCSI Session CHAP authentication"
                            type: "boolean"
                          fsType:
                            description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                            type: "string"
                          initiatorName:
                            description: "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection."
                            type: "string"
                          iqn:
                            description: "iqn is the target iSCSI Qualified Name."
                            type: "string"
                          iscsiInterface:
                            description: "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp)."
                            type: "string"
                          lun:
                            description: "lun represents iSCSI Target Lun number."
                            format: "int32"
                            type: "integer"
                          portals:
                            description: "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                            items:
                              type: "string"
                            type: "array"
                          readOnly:
                            description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false."
                            type: "boolean"
                          secretRef:
                            description: "secretRef is the CHAP Secret for iSCSI target and initiator authentication"
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          targetPortal:
                            description: "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                            type: "string"
                        required:
                          - "iqn"
                          - "lun"
                          - "targetPortal"
                        type: "object"
                      name:
                        description: "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                        type: "string"
                      nfs:
                        description: "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                        properties:
                          path:
                            description: "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            type: "string"
                          readOnly:
                            description: "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            type: "boolean"
                          server:
                            description: "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            type: "string"
                        required:
                          - "path"
                          - "server"
                        type: "object"
                      persistentVolumeClaim:
                        description: "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                        properties:
                          claimName:
                            description: "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                            type: "string"
                          readOnly:
                            description: "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false."
                            type: "boolean"
                        required:
                          - "claimName"
                        type: "object"
                      photonPersistentDisk:
                        description: "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
                        properties:
                          fsType:
                            description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                            type: "string"
                          pdID:
                            description: "pdID is the ID that identifies Photon Controller persistent disk"
                            type: "string"
                        required:
                          - "pdID"
                        type: "object"
                      portworxVolume:
                        description: "portworxVolume represents a portworx volume attached and mounted on kubelets host machine"
                        properties:
                          fsType:
                            description: "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
                            type: "string"
                          readOnly:
                            description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                            type: "boolean"
                          volumeID:
                            description: "volumeID uniquely identifies a Portworx volume"
                            type: "string"
                        required:
                          - "volumeID"
                        type: "object"
                      projected:
                        description: "projected items for all in one resources secrets, configmaps, and downward API"
                        properties:
                          defaultMode:
                            description: "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                            format: "int32"
                            type: "integer"
                          sources:
                            description: "sources is the list of volume projections"
                            items:
                              description: "Projection that may be projected along with other supported volume types"
                              properties:
                                configMap:
                                  description: "configMap information about the configMap data to project"
                                  properties:
                                    items:
                                      description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                      items:
                                        description: "Maps a string key to a path within a volume."
                                        properties:
                                          key:
                                            description: "key is the key to project."
                                            type: "string"
                                          mode:
                                            description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                            format: "int32"
                                            type: "integer"
                                          path:
                                            description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                            type: "string"
                                        required:
                                          - "key"
                                          - "path"
                                        type: "object"
                                      type: "array"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "optional specify whether the ConfigMap or its keys must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                downwardAPI:
                                  description: "downwardAPI information about the downwardAPI data to project"
                                  properties:
                                    items:
                                      description: "Items is a list of DownwardAPIVolume file"
                                      items:
                                        description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                        properties:
                                          fieldRef:
                                            description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                            properties:
                                              apiVersion:
                                                description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                type: "string"
                                              fieldPath:
                                                description: "Path of the field to select in the specified API version."
                                                type: "string"
                                            required:
                                              - "fieldPath"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                          mode:
                                            description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                            format: "int32"
                                            type: "integer"
                                          path:
                                            description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                            type: "string"
                                          resourceFieldRef:
                                            description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                            properties:
                                              containerName:
                                                description: "Container name: required for volumes, optional for env vars"
                                                type: "string"
                                              divisor:
                                                anyOf:
                                                  - type: "integer"
                                                  - type: "string"
                                                description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: "Required: resource to select"
                                                type: "string"
                                            required:
                                              - "resource"
                                            type: "object"
                                            x-kubernetes-map-type: "atomic"
                                        required:
                                          - "path"
                                        type: "object"
                                      type: "array"
                                  type: "object"
                                secret:
                                  description: "secret information about the secret data to project"
                                  properties:
                                    items:
                                      description: "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                      items:
                                        description: "Maps a string key to a path within a volume."
                                        properties:
                                          key:
                                            description: "key is the key to project."
                                            type: "string"
                                          mode:
                                            description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                            format: "int32"
                                            type: "integer"
                                          path:
                                            description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                            type: "string"
                                        required:
                                          - "key"
                                          - "path"
                                        type: "object"
                                      type: "array"
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "optional field specify whether the Secret or its key must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                serviceAccountToken:
                                  description: "serviceAccountToken is information about the serviceAccountToken data to project"
                                  properties:
                                    audience:
                                      description: "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver."
                                      type: "string"
                                    expirationSeconds:
                                      description: "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes."
                                      format: "int64"
                                      type: "integer"
                                    path:
                                      description: "path is the path relative to the mount point of the file to project the\ntoken into."
                                      type: "string"
                                  required:
                                    - "path"
                                  type: "object"
                              type: "object"
                            type: "array"
                        type: "object"
                      quobyte:
                        description: "quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
                        properties:
                          group:
                            description: "group to map volume access to\nDefault is no group"
                            type: "string"
                          readOnly:
                            description: "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false."
                            type: "boolean"
                          registry:
                            description: "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
                            type: "string"
                          tenant:
                            description: "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin"
                            type: "string"
                          user:
                            description: "user to map volume access to\nDefaults to serivceaccount user"
                            type: "string"
                          volume:
                            description: "volume is a string that references an already created Quobyte volume by name."
                            type: "string"
                        required:
                          - "registry"
                          - "volume"
                        type: "object"
                      rbd:
                        description: "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md"
                        properties:
                          fsType:
                            description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                            type: "string"
                          image:
                            description: "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: "string"
                          keyring:
                            description: "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: "string"
                          monitors:
                            description: "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            items:
                              type: "string"
                            type: "array"
                          pool:
                            description: "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: "string"
                          readOnly:
                            description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: "boolean"
                          secretRef:
                            description: "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          user:
                            description: "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: "string"
                        required:
                          - "image"
                          - "monitors"
                        type: "object"
                      scaleIO:
                        description: "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
                        properties:
                          fsType:
                            description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\"."
                            type: "string"
                          gateway:
                            description: "gateway is the host address of the ScaleIO API Gateway."
                            type: "string"
                          protectionDomain:
                            description: "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage."
                            type: "string"
                          readOnly:
                            description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                            type: "boolean"
                          secretRef:
                            description: "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          sslEnabled:
                            description: "sslEnabled Flag enable/disable SSL communication with Gateway, default false"
                            type: "boolean"
                          storageMode:
                            description: "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned."
                            type: "string"
                          storagePool:
                            description: "storagePool is the ScaleIO Storage Pool associated with the protection domain."
                            type: "string"
                          system:
                            description: "system is the name of the storage system as configured in ScaleIO."
                            type: "string"
                          volumeName:
                            description: "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
                            type: "string"
                        required:
                          - "gateway"
                          - "secretRef"
                          - "system"
                        type: "object"
                      secret:
                        description: "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                        properties:
                          defaultMode:
                            description: "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                            format: "int32"
                            type: "integer"
                          items:
                            description: "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                            items:
                              description: "Maps a string key to a path within a volume."
                              properties:
                                key:
                                  description: "key is the key to project."
                                  type: "string"
                                mode:
                                  description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                  format: "int32"
                                  type: "integer"
                                path:
                                  description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                  type: "string"
                              required:
                                - "key"
                                - "path"
                              type: "object"
                            type: "array"
                          optional:
                            description: "optional field specify whether the Secret or its keys must be defined"
                            type: "boolean"
                          secretName:
                            description: "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                            type: "string"
                        type: "object"
                      storageos:
                        description: "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
                        properties:
                          fsType:
                            description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                            type: "string"
                          readOnly:
                            description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                            type: "boolean"
                          secretRef:
                            description: "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted."
                            properties:
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          volumeName:
                            description: "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
                            type: "string"
                          volumeNamespace:
                            description: "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created."
                            type: "string"
                        type: "object"
                      vsphereVolume:
                        description: "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
                        properties:
                          fsType:
                            description: "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                            type: "string"
                          storagePolicyID:
                            description: "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
                            type: "string"
                          storagePolicyName:
                            description: "storagePolicyName is the storage Policy Based Management (SPBM) profile name."
                            type: "string"
                          volumePath:
                            description: "volumePath is the path that identifies vSphere volume vmdk"
                            type: "string"
                        required:
                          - "volumePath"
                        type: "object"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "name"
                  x-kubernetes-list-type: "map"
              required:
                - "applicationImage"
              type: "object"
            status:
              description: "Defines the observed state of RuntimeComponent."
              properties:
                binding:
                  description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                  properties:
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                conditions:
                  items:
                    description: "Defines possible status conditions."
                    properties:
                      lastTransitionTime:
                        format: "date-time"
                        type: "string"
                      message:
                        type: "string"
                      reason:
                        type: "string"
                      status:
                        type: "string"
                      type:
                        description: "Defines the type of status condition."
                        type: "string"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-type: "atomic"
                endpoints:
                  items:
                    description: "Reports endpoint information."
                    properties:
                      name:
                        type: "string"
                      scope:
                        description: "Defines the scope of endpoint information in status."
                        type: "string"
                      type:
                        type: "string"
                      uri:
                        description: "Exposed URI of the application endpoint"
                        type: "string"
                    type: "object"
                  type: "array"
                imageReference:
                  type: "string"
                observedGeneration:
                  description: "The generation identifier of this RuntimeComponent instance completely reconciled by the Operator."
                  format: "int64"
                  type: "integer"
                references:
                  additionalProperties:
                    type: "string"
                  type: "object"
                versions:
                  properties:
                    reconciled:
                      type: "string"
                  type: "object"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
