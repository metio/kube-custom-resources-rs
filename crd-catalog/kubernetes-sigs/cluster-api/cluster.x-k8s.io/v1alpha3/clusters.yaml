apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.16.1"
  name: "clusters.cluster.x-k8s.io"
spec:
  group: "cluster.x-k8s.io"
  names:
    categories:
      - "cluster-api"
    kind: "Cluster"
    listKind: "ClusterList"
    plural: "clusters"
    shortNames:
      - "cl"
    singular: "cluster"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - description: "Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed"
          jsonPath: ".status.phase"
          name: "Phase"
          type: "string"
      deprecated: true
      name: "v1alpha3"
      schema:
        openAPIV3Schema:
          description: "Cluster is the Schema for the clusters API."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "ClusterSpec defines the desired state of Cluster."
              properties:
                clusterNetwork:
                  description: "Cluster network configuration."
                  properties:
                    apiServerPort:
                      description: "APIServerPort specifies the port the API Server should bind to.\nDefaults to 6443."
                      format: "int32"
                      type: "integer"
                    pods:
                      description: "The network ranges from which Pod networks are allocated."
                      properties:
                        cidrBlocks:
                          items:
                            type: "string"
                          type: "array"
                      required:
                        - "cidrBlocks"
                      type: "object"
                    serviceDomain:
                      description: "Domain name for services."
                      type: "string"
                    services:
                      description: "The network ranges from which service VIPs are allocated."
                      properties:
                        cidrBlocks:
                          items:
                            type: "string"
                          type: "array"
                      required:
                        - "cidrBlocks"
                      type: "object"
                  type: "object"
                controlPlaneEndpoint:
                  description: "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane."
                  properties:
                    host:
                      description: "The hostname on which the API server is serving."
                      type: "string"
                    port:
                      description: "The port on which the API server is serving."
                      format: "int32"
                      type: "integer"
                  required:
                    - "host"
                    - "port"
                  type: "object"
                controlPlaneRef:
                  description: "ControlPlaneRef is an optional reference to a provider-specific resource that holds\nthe details for provisioning the Control Plane for a Cluster."
                  properties:
                    apiVersion:
                      description: "API version of the referent."
                      type: "string"
                    fieldPath:
                      description: "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object."
                      type: "string"
                    kind:
                      description: "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: "string"
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: "string"
                    namespace:
                      description: "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                      type: "string"
                    resourceVersion:
                      description: "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                      type: "string"
                    uid:
                      description: "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                infrastructureRef:
                  description: "InfrastructureRef is a reference to a provider-specific resource that holds the details\nfor provisioning infrastructure for a cluster in said provider."
                  properties:
                    apiVersion:
                      description: "API version of the referent."
                      type: "string"
                    fieldPath:
                      description: "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object."
                      type: "string"
                    kind:
                      description: "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: "string"
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: "string"
                    namespace:
                      description: "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                      type: "string"
                    resourceVersion:
                      description: "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                      type: "string"
                    uid:
                      description: "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                paused:
                  description: "Paused can be used to prevent controllers from processing the Cluster and all its associated objects."
                  type: "boolean"
              type: "object"
            status:
              description: "ClusterStatus defines the observed state of Cluster."
              properties:
                conditions:
                  description: "Conditions defines current service state of the cluster."
                  items:
                    description: "Condition defines an observation of a Cluster API resource operational state."
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition.\nThis field may be empty."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may not be empty."
                        type: "string"
                      severity:
                        description: "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important."
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                controlPlaneInitialized:
                  description: "ControlPlaneInitialized defines if the control plane has been initialized."
                  type: "boolean"
                controlPlaneReady:
                  description: "ControlPlaneReady defines if the control plane is ready."
                  type: "boolean"
                failureDomains:
                  additionalProperties:
                    description: "FailureDomainSpec is the Schema for Cluster API failure domains.\nIt allows controllers to understand how many failure domains a cluster can optionally span across."
                    properties:
                      attributes:
                        additionalProperties:
                          type: "string"
                        description: "Attributes is a free form map of attributes an infrastructure provider might use or require."
                        type: "object"
                      controlPlane:
                        description: "ControlPlane determines if this failure domain is suitable for use by control plane machines."
                        type: "boolean"
                    type: "object"
                  description: "FailureDomains is a slice of failure domain objects synced from the infrastructure provider."
                  type: "object"
                failureMessage:
                  description: "FailureMessage indicates that there is a fatal problem reconciling the\nstate, and will be set to a descriptive error message."
                  type: "string"
                failureReason:
                  description: "FailureReason indicates that there is a fatal problem reconciling the\nstate, and will be set to a token value suitable for\nprogrammatic interpretation."
                  type: "string"
                infrastructureReady:
                  description: "InfrastructureReady is the state of the infrastructure provider."
                  type: "boolean"
                observedGeneration:
                  description: "ObservedGeneration is the latest generation observed by the controller."
                  format: "int64"
                  type: "integer"
                phase:
                  description: "Phase represents the current phase of cluster actuation.\nE.g. Pending, Running, Terminating, Failed etc."
                  type: "string"
              type: "object"
          type: "object"
      served: false
      storage: false
      subresources:
        status: {}
