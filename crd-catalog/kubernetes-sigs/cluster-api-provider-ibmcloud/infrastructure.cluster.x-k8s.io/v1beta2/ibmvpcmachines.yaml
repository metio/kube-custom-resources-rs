apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.16.5"
  name: "ibmvpcmachines.infrastructure.cluster.x-k8s.io"
spec:
  group: "infrastructure.cluster.x-k8s.io"
  names:
    categories:
      - "cluster-api"
    kind: "IBMVPCMachine"
    listKind: "IBMVPCMachineList"
    plural: "ibmvpcmachines"
    singular: "ibmvpcmachine"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - description: "Cluster infrastructure is ready for IBM VPC instances"
          jsonPath: ".status.ready"
          name: "Ready"
          type: "string"
      name: "v1beta2"
      schema:
        openAPIV3Schema:
          description: "IBMVPCMachine is the Schema for the ibmvpcmachines API."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "IBMVPCMachineSpec defines the desired state of IBMVPCMachine."
              properties:
                bootVolume:
                  description: "BootVolume contains machines's boot volume configurations like size, iops etc.."
                  properties:
                    deleteVolumeOnInstanceDelete:
                      default: true
                      description: "DeleteVolumeOnInstanceDelete If set to true, when deleting the instance the volume will also be deleted.\nDefault is set as true"
                      type: "boolean"
                    encryptionKeyCRN:
                      description: "EncryptionKey is the root key to use to wrap the data encryption key for the volume and this points to the CRN\nand possible values are as follows.\nThe CRN of the [Key Protect Root\nKey](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial) or [Hyper Protect Crypto\nService Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started) for this resource.\nIf unspecified, the `encryption` type for the volume will be `provider_managed`."
                      type: "string"
                    iops:
                      description: "Iops is the maximum I/O operations per second (IOPS) to use for the volume. Applicable only to volumes using a profile\nfamily of `custom`."
                      format: "int64"
                      type: "integer"
                    name:
                      description: "Name is the unique user-defined name for this volume.\nDefault will be autogenerated"
                      type: "string"
                    profile:
                      default: "general-purpose"
                      description: "Profile is the volume profile for the bootdisk, refer https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles\nfor more information.\nDefault to general-purpose"
                      enum:
                        - "general-purpose"
                        - "5iops-tier"
                        - "10iops-tier"
                        - "custom"
                      type: "string"
                    sizeGiB:
                      description: "SizeGiB is the size of the virtual server's boot disk in GiB.\nDefault to the size of the image's `minimum_provisioned_size`."
                      format: "int64"
                      type: "integer"
                  type: "object"
                catalogOffering:
                  description: "CatalogOffering is the Catalog Offering OS image which would be installed on the instance.\nAn OfferingCRN or VersionCRN is required, the PlanCRN is optional."
                  properties:
                    offeringCRN:
                      description: "OfferingCRN defines the IBM Cloud Catalog Offering CRN. Using the OfferingCRN expects that the latest version of the Offering will be used.\nIf a specific version should be used instead, rely on VersionCRN."
                      type: "string"
                    planCRN:
                      description: "PlanCRN defines the IBM Cloud Catalog Offering Plan CRN to use for the Offering."
                      type: "string"
                    versionCRN:
                      description: "VersionCRN defines the IBM Cloud Catalog Offering Version CRN. A specific version of the Catalog Offering will be used, as defined by this CRN."
                      type: "string"
                  type: "object"
                  x-kubernetes-validations:
                    - message: "either offeringCRN or version CRN must be provided, not both"
                      rule: "(has(self.offeringCRN) && !has(self.versionCRN)) || (!has(self.offeringCRN) && has(self.versionCRN))"
                image:
                  description: "Image is the OS image which would be install on the instance.\nID will take higher precedence over Name if both specified."
                  properties:
                    id:
                      description: "ID of resource"
                      minLength: 1
                      type: "string"
                    name:
                      description: "Name of resource"
                      minLength: 1
                      type: "string"
                  type: "object"
                loadBalancerPoolMembers:
                  description: "LoadBalancerPoolMembers is the set of IBM Cloud VPC Load Balancer Backend Pools the machine should be added to as a member."
                  items:
                    description: "VPCLoadBalancerBackendPoolMember represents a VPC Load Balancer Backend Pool Member."
                    properties:
                      loadBalancer:
                        description: "LoadBalancer defines the Load Balancer the Pool Member is for."
                        properties:
                          id:
                            description: "id of the resource."
                            minLength: 1
                            type: "string"
                          name:
                            description: "name of the resource."
                            minLength: 1
                            type: "string"
                        type: "object"
                        x-kubernetes-validations:
                          - message: "an id or name must be provided"
                            rule: "has(self.id) || has(self.name)"
                      pool:
                        description: "Pool defines the Load Balancer Pool the Pool Member should be in."
                        properties:
                          id:
                            description: "id of the resource."
                            minLength: 1
                            type: "string"
                          name:
                            description: "name of the resource."
                            minLength: 1
                            type: "string"
                        type: "object"
                        x-kubernetes-validations:
                          - message: "an id or name must be provided"
                            rule: "has(self.id) || has(self.name)"
                      port:
                        description: "Port defines the Port the Load Balancer Pool Member listens for traffic."
                        format: "int64"
                        type: "integer"
                      weight:
                        description: "Weight of the service member. Only applicable if the pool algorithm is \"weighted_round_robin\"."
                        format: "int64"
                        type: "integer"
                    required:
                      - "loadBalancer"
                      - "pool"
                      - "port"
                    type: "object"
                  type: "array"
                name:
                  description: "Name of the instance."
                  type: "string"
                placementTarget:
                  description: "PlacementTarget is the placement restrictions to use for the virtual server instance. No restrictions are used when this field is not defined."
                  properties:
                    dedicatedHost:
                      description: "DedicatedHost defines the Dedicated Host to place a VPC Machine (Instance) on."
                      properties:
                        id:
                          description: "id of the resource."
                          minLength: 1
                          type: "string"
                        name:
                          description: "name of the resource."
                          minLength: 1
                          type: "string"
                      type: "object"
                      x-kubernetes-validations:
                        - message: "an id or name must be provided"
                          rule: "has(self.id) || has(self.name)"
                    dedicatedHostGroup:
                      description: "DedicatedHostGroup defines the Dedicated Host Group to use when placing a VPC Machine (Instance)."
                      properties:
                        id:
                          description: "id of the resource."
                          minLength: 1
                          type: "string"
                        name:
                          description: "name of the resource."
                          minLength: 1
                          type: "string"
                      type: "object"
                      x-kubernetes-validations:
                        - message: "an id or name must be provided"
                          rule: "has(self.id) || has(self.name)"
                    placementGroup:
                      description: "PlacementGroup defines the Placement Group to use when placing a VPC Machine (Instance)."
                      properties:
                        id:
                          description: "id of the resource."
                          minLength: 1
                          type: "string"
                        name:
                          description: "name of the resource."
                          minLength: 1
                          type: "string"
                      type: "object"
                      x-kubernetes-validations:
                        - message: "an id or name must be provided"
                          rule: "has(self.id) || has(self.name)"
                  type: "object"
                  x-kubernetes-validations:
                    - message: "only one of dedicatedHost, dedicatedHostGroup, or placementGroup must be defined for machine placement"
                      rule: "(has(self.dedicatedHost) && !has(self.dedicatedHostGroup) && !has(self.placementGroup)) || (!has(self.dedicatedHost) && has(self.dedicatedHostGroup) && !has(self.placementGroup)) || (!has(self.dedicatedHost) && !has(self.dedicatedHostGroup) && has(self.placementGroup))"
                primaryNetworkInterface:
                  description: "PrimaryNetworkInterface is required to specify subnet."
                  properties:
                    securityGroups:
                      description: "SecurityGroups defines a set of IBM Cloud VPC Security Groups to attach to the network interface."
                      items:
                        description: "VPCResource represents a VPC resource."
                        properties:
                          id:
                            description: "id of the resource."
                            minLength: 1
                            type: "string"
                          name:
                            description: "name of the resource."
                            minLength: 1
                            type: "string"
                        type: "object"
                        x-kubernetes-validations:
                          - message: "an id or name must be provided"
                            rule: "has(self.id) || has(self.name)"
                      type: "array"
                    subnet:
                      description: "Subnet ID of the network interface."
                      type: "string"
                  type: "object"
                profile:
                  description: "Profile indicates the flavor of instance. Example: bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps"
                  type: "string"
                providerID:
                  description: "ProviderID is the unique identifier as specified by the cloud provider."
                  type: "string"
                sshKeys:
                  description: "SSHKeys is the SSH pub keys that will be used to access VM.\nID will take higher precedence over Name if both specified."
                  items:
                    description: "IBMVPCResourceReference is a reference to a specific VPC resource by ID or Name\nOnly one of ID or Name may be specified. Specifying more than one will result in\na validation error."
                    properties:
                      id:
                        description: "ID of resource"
                        minLength: 1
                        type: "string"
                      name:
                        description: "Name of resource"
                        minLength: 1
                        type: "string"
                    type: "object"
                  type: "array"
                zone:
                  description: "Zone is the place where the instance should be created. Example: us-south-3"
                  type: "string"
              required:
                - "image"
                - "zone"
              type: "object"
            status:
              description: "IBMVPCMachineStatus defines the observed state of IBMVPCMachine."
              properties:
                addresses:
                  description: "Addresses contains the IBM Cloud instance associated addresses."
                  items:
                    description: "NodeAddress contains information for the node's address."
                    properties:
                      address:
                        description: "The node address."
                        type: "string"
                      type:
                        description: "Node address type, one of Hostname, ExternalIP or InternalIP."
                        type: "string"
                    required:
                      - "address"
                      - "type"
                    type: "object"
                  type: "array"
                conditions:
                  description: "Conditions deefines current service state of the IBMVPCMachine."
                  items:
                    description: "Condition defines an observation of a Cluster API resource operational state."
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition.\nThis field may be empty."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty."
                        type: "string"
                      severity:
                        description: "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False."
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important."
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                failureMessage:
                  description: "FailureMessage will be set in the event that there is a terminal problem\nreconciling the Machine and will contain a more verbose string suitable\nfor logging and human consumption."
                  type: "string"
                failureReason:
                  description: "FailureReason will be set in the event that there is a terminal problem\nreconciling the Machine and will contain a succinct value suitable\nfor machine interpretation."
                  type: "string"
                instanceID:
                  description: "InstanceID defines the IBM Cloud VPC Instance UUID."
                  type: "string"
                instanceState:
                  description: "InstanceStatus is the status of the IBM Cloud instance for this machine."
                  type: "string"
                loadBalancerPoolMembers:
                  description: "LoadBalancerPoolMembers is the status of IBM Cloud VPC Load Balancer Backend Pools the machine is a member."
                  items:
                    description: "VPCLoadBalancerBackendPoolMember represents a VPC Load Balancer Backend Pool Member."
                    properties:
                      loadBalancer:
                        description: "LoadBalancer defines the Load Balancer the Pool Member is for."
                        properties:
                          id:
                            description: "id of the resource."
                            minLength: 1
                            type: "string"
                          name:
                            description: "name of the resource."
                            minLength: 1
                            type: "string"
                        type: "object"
                        x-kubernetes-validations:
                          - message: "an id or name must be provided"
                            rule: "has(self.id) || has(self.name)"
                      pool:
                        description: "Pool defines the Load Balancer Pool the Pool Member should be in."
                        properties:
                          id:
                            description: "id of the resource."
                            minLength: 1
                            type: "string"
                          name:
                            description: "name of the resource."
                            minLength: 1
                            type: "string"
                        type: "object"
                        x-kubernetes-validations:
                          - message: "an id or name must be provided"
                            rule: "has(self.id) || has(self.name)"
                      port:
                        description: "Port defines the Port the Load Balancer Pool Member listens for traffic."
                        format: "int64"
                        type: "integer"
                      weight:
                        description: "Weight of the service member. Only applicable if the pool algorithm is \"weighted_round_robin\"."
                        format: "int64"
                        type: "integer"
                    required:
                      - "loadBalancer"
                      - "pool"
                      - "port"
                    type: "object"
                  type: "array"
                ready:
                  description: "Ready is true when the provider resource is ready."
                  type: "boolean"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
