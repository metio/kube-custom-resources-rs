apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    api-approved.kubernetes.io: "https://github.com/kubernetes-sigs/gateway-api/pull/3328"
    gateway.networking.k8s.io/bundle-version: "v1.3.0"
    gateway.networking.k8s.io/channel: "experimental"
  name: "xlistenersets.gateway.networking.x-k8s.io"
spec:
  group: "gateway.networking.x-k8s.io"
  names:
    categories:
      - "gateway-api"
    kind: "XListenerSet"
    listKind: "XListenerSetList"
    plural: "xlistenersets"
    shortNames:
      - "lset"
    singular: "xlistenerset"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".status.conditions[?(@.type==\"Accepted\")].status"
          name: "Accepted"
          type: "string"
        - jsonPath: ".status.conditions[?(@.type==\"Programmed\")].status"
          name: "Programmed"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "XListenerSet defines a set of additional listeners\nto attach to an existing Gateway."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "Spec defines the desired state of ListenerSet."
              properties:
                listeners:
                  description: "Listeners associated with this ListenerSet. Listeners define\nlogical endpoints that are bound on this referenced parent Gateway's addresses.\n\nListeners in a `Gateway` and their attached `ListenerSets` are concatenated\nas a list when programming the underlying infrastructure. Each listener\nname does not need to be unique across the Gateway and ListenerSets.\nSee ListenerEntry.Name for more details.\n\nImplementations MUST treat the parent Gateway as having the merged\nlist of all listeners from itself and attached ListenerSets using\nthe following precedence:\n\n1. \"parent\" Gateway\n2. ListenerSet ordered by creation time (oldest first)\n3. ListenerSet ordered alphabetically by “{namespace}/{name}”.\n\nAn implementation MAY reject listeners by setting the ListenerEntryStatus\n`Accepted`` condition to False with the Reason `TooManyListeners`\n\nIf a listener has a conflict, this will be reported in the\nStatus.ListenerEntryStatus setting the `Conflicted` condition to True.\n\nImplementations SHOULD be cautious about what information from the\nparent or siblings are reported to avoid accidentally leaking\nsensitive information that the child would not otherwise have access\nto. This can include contents of secrets etc."
                  items:
                    properties:
                      allowedRoutes:
                        default:
                          namespaces:
                            from: "Same"
                        description: "AllowedRoutes defines the types of routes that MAY be attached to a\nListener and the trusted namespaces where those Route resources MAY be\npresent.\n\nAlthough a client request may match multiple route rules, only one rule\nmay ultimately receive the request. Matching precedence MUST be\ndetermined in order of the following criteria:\n\n* The most specific match as defined by the Route type.\n* The oldest Route based on creation timestamp. For example, a Route with\n  a creation timestamp of \"2020-09-08 01:02:03\" is given precedence over\n  a Route with a creation timestamp of \"2020-09-08 01:02:04\".\n* If everything else is equivalent, the Route appearing first in\n  alphabetical order (namespace/name) should be given precedence. For\n  example, foo/bar is given precedence over foo/baz.\n\nAll valid rules within a Route attached to this Listener should be\nimplemented. Invalid Route rules can be ignored (sometimes that will mean\nthe full Route). If a Route rule transitions from valid to invalid,\nsupport for that Route rule should be dropped to ensure consistency. For\nexample, even if a filter specified by a Route rule is invalid, the rest\nof the rules within that Route should still be supported."
                        properties:
                          kinds:
                            description: "Kinds specifies the groups and kinds of Routes that are allowed to bind\nto this Gateway Listener. When unspecified or empty, the kinds of Routes\nselected are determined using the Listener protocol.\n\nA RouteGroupKind MUST correspond to kinds of Routes that are compatible\nwith the application protocol specified in the Listener's Protocol field.\nIf an implementation does not support or recognize this resource type, it\nMUST set the \"ResolvedRefs\" condition to False for this Listener with the\n\"InvalidRouteKinds\" reason.\n\nSupport: Core"
                            items:
                              description: "RouteGroupKind indicates the group and kind of a Route resource."
                              properties:
                                group:
                                  default: "gateway.networking.k8s.io"
                                  description: "Group is the group of the Route."
                                  maxLength: 253
                                  pattern: "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                  type: "string"
                                kind:
                                  description: "Kind is the kind of the Route."
                                  maxLength: 63
                                  minLength: 1
                                  pattern: "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                                  type: "string"
                              required:
                                - "kind"
                              type: "object"
                            maxItems: 8
                            type: "array"
                          namespaces:
                            default:
                              from: "Same"
                            description: "Namespaces indicates namespaces from which Routes may be attached to this\nListener. This is restricted to the namespace of this Gateway by default.\n\nSupport: Core"
                            properties:
                              from:
                                default: "Same"
                                description: "From indicates where Routes will be selected for this Gateway. Possible\nvalues are:\n\n* All: Routes in all namespaces may be used by this Gateway.\n* Selector: Routes in namespaces selected by the selector may be used by\n  this Gateway.\n* Same: Only Routes in the same namespace may be used by this Gateway.\n\nSupport: Core"
                                enum:
                                  - "All"
                                  - "Selector"
                                  - "Same"
                                type: "string"
                              selector:
                                description: "Selector must be specified when From is set to \"Selector\". In that case,\nonly Routes in Namespaces matching this Selector will be selected by this\nGateway. This field is ignored for other values of \"From\".\n\nSupport: Core"
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        type: "object"
                      hostname:
                        description: "Hostname specifies the virtual hostname to match for protocol types that\ndefine this concept. When unspecified, all hostnames are matched. This\nfield is ignored for protocols that don't require hostname based\nmatching.\n\nImplementations MUST apply Hostname matching appropriately for each of\nthe following protocols:\n\n* TLS: The Listener Hostname MUST match the SNI.\n* HTTP: The Listener Hostname MUST match the Host header of the request.\n* HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP\n  protocol layers as described above. If an implementation does not\n  ensure that both the SNI and Host header match the Listener hostname,\n  it MUST clearly document that.\n\nFor HTTPRoute and TLSRoute resources, there is an interaction with the\n`spec.hostnames` array. When both listener and route specify hostnames,\nthere MUST be an intersection between the values for a Route to be\naccepted. For more information, refer to the Route specific Hostnames\ndocumentation.\n\nHostnames that are prefixed with a wildcard label (`*.`) are interpreted\nas a suffix match. That means that a match for `*.example.com` would match\nboth `test.example.com`, and `foo.test.example.com`, but not `example.com`."
                        maxLength: 253
                        minLength: 1
                        pattern: "^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        type: "string"
                      name:
                        description: "Name is the name of the Listener. This name MUST be unique within a\nListenerSet.\n\nName is not required to be unique across a Gateway and ListenerSets.\nRoutes can attach to a Listener by having a ListenerSet as a parentRef\nand setting the SectionName"
                        maxLength: 253
                        minLength: 1
                        pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        type: "string"
                      port:
                        description: "Port is the network port. Multiple listeners may use the\nsame port, subject to the Listener compatibility rules."
                        format: "int32"
                        maximum: 65535.0
                        minimum: 1.0
                        type: "integer"
                      protocol:
                        description: "Protocol specifies the network protocol this listener expects to receive."
                        maxLength: 255
                        minLength: 1
                        pattern: "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9]+$"
                        type: "string"
                      tls:
                        description: "TLS is the TLS configuration for the Listener. This field is required if\nthe Protocol field is \"HTTPS\" or \"TLS\". It is invalid to set this field\nif the Protocol field is \"HTTP\", \"TCP\", or \"UDP\".\n\nThe association of SNIs to Certificate defined in GatewayTLSConfig is\ndefined based on the Hostname field for this listener.\n\nThe GatewayClass MUST use the longest matching SNI out of all\navailable certificates for any TLS handshake."
                        properties:
                          certificateRefs:
                            description: "CertificateRefs contains a series of references to Kubernetes objects that\ncontains TLS certificates and private keys. These certificates are used to\nestablish a TLS handshake for requests that match the hostname of the\nassociated listener.\n\nA single CertificateRef to a Kubernetes Secret has \"Core\" support.\nImplementations MAY choose to support attaching multiple certificates to\na Listener, but this behavior is implementation-specific.\n\nReferences to a resource in different namespace are invalid UNLESS there\nis a ReferenceGrant in the target namespace that allows the certificate\nto be attached. If a ReferenceGrant does not allow this reference, the\n\"ResolvedRefs\" condition MUST be set to False for this listener with the\n\"RefNotPermitted\" reason.\n\nThis field is required to have at least one element when the mode is set\nto \"Terminate\" (default) and is optional otherwise.\n\nCertificateRefs can reference to standard Kubernetes resources, i.e.\nSecret, or implementation-specific custom resources.\n\nSupport: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls\n\nSupport: Implementation-specific (More than one reference or other resource types)"
                            items:
                              description: "SecretObjectReference identifies an API object including its namespace,\ndefaulting to Secret.\n\nThe API object must be valid in the cluster; the Group and Kind must\nbe registered in the cluster for this reference to be valid.\n\nReferences to objects with invalid Group and Kind are not valid, and must\nbe rejected by the implementation, with appropriate Conditions set\non the containing object."
                              properties:
                                group:
                                  default: ""
                                  description: "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred."
                                  maxLength: 253
                                  pattern: "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                  type: "string"
                                kind:
                                  default: "Secret"
                                  description: "Kind is kind of the referent. For example \"Secret\"."
                                  maxLength: 63
                                  minLength: 1
                                  pattern: "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                                  type: "string"
                                name:
                                  description: "Name is the name of the referent."
                                  maxLength: 253
                                  minLength: 1
                                  type: "string"
                                namespace:
                                  description: "Namespace is the namespace of the referenced object. When unspecified, the local\nnamespace is inferred.\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\nSupport: Core"
                                  maxLength: 63
                                  minLength: 1
                                  pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  type: "string"
                              required:
                                - "name"
                              type: "object"
                            maxItems: 64
                            type: "array"
                          frontendValidation:
                            description: "FrontendValidation holds configuration information for validating the frontend (client).\nSetting this field will require clients to send a client certificate\nrequired for validation during the TLS handshake. In browsers this may result in a dialog appearing\nthat requests a user to specify the client certificate.\nThe maximum depth of a certificate chain accepted in verification is Implementation specific.\n\nSupport: Extended"
                            properties:
                              caCertificateRefs:
                                description: "CACertificateRefs contains one or more references to\nKubernetes objects that contain TLS certificates of\nthe Certificate Authorities that can be used\nas a trust anchor to validate the certificates presented by the client.\n\nA single CA certificate reference to a Kubernetes ConfigMap\nhas \"Core\" support.\nImplementations MAY choose to support attaching multiple CA certificates to\na Listener, but this behavior is implementation-specific.\n\nSupport: Core - A single reference to a Kubernetes ConfigMap\nwith the CA certificate in a key named `ca.crt`.\n\nSupport: Implementation-specific (More than one reference, or other kinds\nof resources).\n\nReferences to a resource in a different namespace are invalid UNLESS there\nis a ReferenceGrant in the target namespace that allows the certificate\nto be attached. If a ReferenceGrant does not allow this reference, the\n\"ResolvedRefs\" condition MUST be set to False for this listener with the\n\"RefNotPermitted\" reason."
                                items:
                                  description: "ObjectReference identifies an API object including its namespace.\n\nThe API object must be valid in the cluster; the Group and Kind must\nbe registered in the cluster for this reference to be valid.\n\nReferences to objects with invalid Group and Kind are not valid, and must\nbe rejected by the implementation, with appropriate Conditions set\non the containing object."
                                  properties:
                                    group:
                                      description: "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen set to the empty string, core API group is inferred."
                                      maxLength: 253
                                      pattern: "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                      type: "string"
                                    kind:
                                      description: "Kind is kind of the referent. For example \"ConfigMap\" or \"Service\"."
                                      maxLength: 63
                                      minLength: 1
                                      pattern: "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                                      type: "string"
                                    name:
                                      description: "Name is the name of the referent."
                                      maxLength: 253
                                      minLength: 1
                                      type: "string"
                                    namespace:
                                      description: "Namespace is the namespace of the referenced object. When unspecified, the local\nnamespace is inferred.\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\nSupport: Core"
                                      maxLength: 63
                                      minLength: 1
                                      pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                      type: "string"
                                  required:
                                    - "group"
                                    - "kind"
                                    - "name"
                                  type: "object"
                                maxItems: 8
                                minItems: 1
                                type: "array"
                            type: "object"
                          mode:
                            default: "Terminate"
                            description: "Mode defines the TLS behavior for the TLS session initiated by the client.\nThere are two possible modes:\n\n- Terminate: The TLS session between the downstream client and the\n  Gateway is terminated at the Gateway. This mode requires certificates\n  to be specified in some way, such as populating the certificateRefs\n  field.\n- Passthrough: The TLS session is NOT terminated by the Gateway. This\n  implies that the Gateway can't decipher the TLS stream except for\n  the ClientHello message of the TLS protocol. The certificateRefs field\n  is ignored in this mode.\n\nSupport: Core"
                            enum:
                              - "Terminate"
                              - "Passthrough"
                            type: "string"
                          options:
                            additionalProperties:
                              description: "AnnotationValue is the value of an annotation in Gateway API. This is used\nfor validation of maps such as TLS options. This roughly matches Kubernetes\nannotation validation, although the length validation in that case is based\non the entire size of the annotations struct."
                              maxLength: 4096
                              minLength: 0
                              type: "string"
                            description: "Options are a list of key/value pairs to enable extended TLS\nconfiguration for each implementation. For example, configuring the\nminimum TLS version or supported cipher suites.\n\nA set of common keys MAY be defined by the API in the future. To avoid\nany ambiguity, implementation-specific definitions MUST use\ndomain-prefixed names, such as `example.com/my-custom-option`.\nUn-prefixed names are reserved for key names defined by Gateway API.\n\nSupport: Implementation-specific"
                            maxProperties: 16
                            type: "object"
                        type: "object"
                        x-kubernetes-validations:
                          - message: "certificateRefs or options must be specified when mode is Terminate"
                            rule: "self.mode == 'Terminate' ? size(self.certificateRefs) > 0 || size(self.options) > 0 : true"
                    required:
                      - "name"
                      - "port"
                      - "protocol"
                    type: "object"
                  maxItems: 64
                  minItems: 1
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "name"
                  x-kubernetes-list-type: "map"
                  x-kubernetes-validations:
                    - message: "tls must not be specified for protocols ['HTTP', 'TCP', 'UDP']"
                      rule: "self.all(l, l.protocol in ['HTTP', 'TCP', 'UDP'] ? !has(l.tls) : true)"
                    - message: "tls mode must be Terminate for protocol HTTPS"
                      rule: "self.all(l, (l.protocol == 'HTTPS' && has(l.tls)) ? (l.tls.mode == '' || l.tls.mode == 'Terminate') : true)"
                    - message: "hostname must not be specified for protocols ['TCP', 'UDP']"
                      rule: "self.all(l, l.protocol in ['TCP', 'UDP']  ? (!has(l.hostname) || l.hostname == '') : true)"
                    - message: "Listener name must be unique within the Gateway"
                      rule: "self.all(l1, self.exists_one(l2, l1.name == l2.name))"
                    - message: "Combination of port, protocol and hostname must be unique for each listener"
                      rule: "self.all(l1, !has(l1.port) || self.exists_one(l2, has(l2.port) && l1.port == l2.port && l1.protocol == l2.protocol && (has(l1.hostname) && has(l2.hostname) ? l1.hostname == l2.hostname : !has(l1.hostname) && !has(l2.hostname))))"
                parentRef:
                  description: "ParentRef references the Gateway that the listeners are attached to."
                  properties:
                    group:
                      default: "gateway.networking.k8s.io"
                      description: "Group is the group of the referent."
                      maxLength: 253
                      pattern: "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                      type: "string"
                    kind:
                      default: "Gateway"
                      description: "Kind is kind of the referent. For example \"Gateway\"."
                      maxLength: 63
                      minLength: 1
                      pattern: "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                      type: "string"
                    name:
                      description: "Name is the name of the referent."
                      maxLength: 253
                      minLength: 1
                      type: "string"
                    namespace:
                      description: "Namespace is the namespace of the referent.  If not present,\nthe namespace of the referent is assumed to be the same as\nthe namespace of the referring object."
                      maxLength: 63
                      minLength: 1
                      pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                      type: "string"
                  required:
                    - "name"
                  type: "object"
              required:
                - "listeners"
                - "parentRef"
              type: "object"
            status:
              default:
                conditions:
                  - lastTransitionTime: 1970-01-01T00:00:00Z
                    message: "Waiting for controller"
                    reason: "Pending"
                    status: "Unknown"
                    type: "Accepted"
                  - lastTransitionTime: 1970-01-01T00:00:00Z
                    message: "Waiting for controller"
                    reason: "Pending"
                    status: "Unknown"
                    type: "Programmed"
              description: "Status defines the current state of ListenerSet."
              properties:
                conditions:
                  default:
                    - lastTransitionTime: 1970-01-01T00:00:00Z
                      message: "Waiting for controller"
                      reason: "Pending"
                      status: "Unknown"
                      type: "Accepted"
                    - lastTransitionTime: 1970-01-01T00:00:00Z
                      message: "Waiting for controller"
                      reason: "Pending"
                      status: "Unknown"
                      type: "Programmed"
                  description: "Conditions describe the current conditions of the ListenerSet.\n\nImplementations MUST express ListenerSet conditions using the\n`ListenerSetConditionType` and `ListenerSetConditionReason`\nconstants so that operators and tools can converge on a common\nvocabulary to describe ListenerSet state.\n\nKnown condition types are:\n\n* \"Accepted\"\n* \"Programmed\""
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource."
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase."
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  maxItems: 8
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "type"
                  x-kubernetes-list-type: "map"
                listeners:
                  description: "Listeners provide status for each unique listener port defined in the Spec."
                  items:
                    description: "ListenerStatus is the status associated with a Listener."
                    properties:
                      attachedRoutes:
                        description: "AttachedRoutes represents the total number of Routes that have been\nsuccessfully attached to this Listener.\n\nSuccessful attachment of a Route to a Listener is based solely on the\ncombination of the AllowedRoutes field on the corresponding Listener\nand the Route's ParentRefs field. A Route is successfully attached to\na Listener when it is selected by the Listener's AllowedRoutes field\nAND the Route has a valid ParentRef selecting the whole Gateway\nresource or a specific Listener as a parent resource (more detail on\nattachment semantics can be found in the documentation on the various\nRoute kinds ParentRefs fields). Listener or Route status does not impact\nsuccessful attachment, i.e. the AttachedRoutes field count MUST be set\nfor Listeners with condition Accepted: false and MUST count successfully\nattached Routes that may themselves have Accepted: false conditions.\n\nUses for this field include troubleshooting Route attachment and\nmeasuring blast radius/impact of changes to a Listener."
                        format: "int32"
                        type: "integer"
                      conditions:
                        description: "Conditions describe the current condition of this listener."
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource."
                          properties:
                            lastTransitionTime:
                              description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                              format: "date-time"
                              type: "string"
                            message:
                              description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                              maxLength: 32768
                              type: "string"
                            observedGeneration:
                              description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                              format: "int64"
                              minimum: 0.0
                              type: "integer"
                            reason:
                              description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                              type: "string"
                            status:
                              description: "status of the condition, one of True, False, Unknown."
                              enum:
                                - "True"
                                - "False"
                                - "Unknown"
                              type: "string"
                            type:
                              description: "type of condition in CamelCase or in foo.example.com/CamelCase."
                              maxLength: 316
                              pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                              type: "string"
                          required:
                            - "lastTransitionTime"
                            - "message"
                            - "reason"
                            - "status"
                            - "type"
                          type: "object"
                        maxItems: 8
                        type: "array"
                        x-kubernetes-list-map-keys:
                          - "type"
                        x-kubernetes-list-type: "map"
                      name:
                        description: "Name is the name of the Listener that this status corresponds to."
                        maxLength: 253
                        minLength: 1
                        pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        type: "string"
                      port:
                        description: "Port is the network port the listener is configured to listen on."
                        format: "int32"
                        maximum: 65535.0
                        minimum: 1.0
                        type: "integer"
                      supportedKinds:
                        description: "SupportedKinds is the list indicating the Kinds supported by this\nlistener. This MUST represent the kinds an implementation supports for\nthat Listener configuration.\n\nIf kinds are specified in Spec that are not supported, they MUST NOT\nappear in this list and an implementation MUST set the \"ResolvedRefs\"\ncondition to \"False\" with the \"InvalidRouteKinds\" reason. If both valid\nand invalid Route kinds are specified, the implementation MUST\nreference the valid Route kinds that have been specified."
                        items:
                          description: "RouteGroupKind indicates the group and kind of a Route resource."
                          properties:
                            group:
                              default: "gateway.networking.k8s.io"
                              description: "Group is the group of the Route."
                              maxLength: 253
                              pattern: "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                              type: "string"
                            kind:
                              description: "Kind is the kind of the Route."
                              maxLength: 63
                              minLength: 1
                              pattern: "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                              type: "string"
                          required:
                            - "kind"
                          type: "object"
                        maxItems: 8
                        type: "array"
                    required:
                      - "attachedRoutes"
                      - "conditions"
                      - "name"
                      - "port"
                      - "supportedKinds"
                    type: "object"
                  maxItems: 64
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "name"
                  x-kubernetes-list-type: "map"
              type: "object"
          required:
            - "spec"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
