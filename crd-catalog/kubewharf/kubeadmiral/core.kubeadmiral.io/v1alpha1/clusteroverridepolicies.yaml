apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
    kubeadmiral.io/no-federated-resource: 'true'
  name: clusteroverridepolicies.core.kubeadmiral.io
spec:
  group: core.kubeadmiral.io
  names:
    kind: ClusterOverridePolicy
    listKind: ClusterOverridePolicyList
    plural: clusteroverridepolicies
    shortNames:
    - cop
    singular: clusteroverridepolicy
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterOverridePolicy describes the override rules for a resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              overrideRules:
                description: OverrideRules specify the override rules. Each rule specifies the overriders and the clusters these overriders should be applied to.
                items:
                  properties:
                    overriders:
                      description: Overriders specify the overriders to be applied in the target clusters.
                      properties:
                        image:
                          description: Image specifies the overriders that applies to the image.
                          items:
                            properties:
                              containerNames:
                                description: ContainerNames are ignored when ImagePath is set. If empty, the image override rule applies to all containers. Otherwise, this override targets the specified container(s) or init container(s) in the pod template.
                                items:
                                  type: string
                                type: array
                              imagePath:
                                description: "ImagePath indicates the image path to target. For Example: /spec/template/spec/containers/0/image \n If empty, the system will automatically resolve the image path if the resource type is Pod, CronJob, Deployment, StatefulSet, DaemonSet or Job."
                                type: string
                              operations:
                                description: Operations are the specific operations to be performed on ContainerNames or ImagePath.
                                items:
                                  properties:
                                    imageComponent:
                                      description: ImageComponent is the part of the image to override.
                                      enum:
                                      - Registry
                                      - Repository
                                      - Tag
                                      - Digest
                                      type: string
                                    operator:
                                      description: Operator specifies the operation. If omitted, defaults to "overwrite".
                                      enum:
                                      - addIfAbsent
                                      - overwrite
                                      - delete
                                      type: string
                                    value:
                                      description: Value is the value required by the operation. For 'addIfAbsent' Operator, the old value of ImageComponent should be empty, and the Value shouldn't be empty.
                                      type: string
                                  required:
                                  - imageComponent
                                  type: object
                                type: array
                            required:
                            - operations
                            type: object
                          type: array
                        jsonpatch:
                          description: JsonPatch specifies overriders in a syntax similar to RFC6902 JSON Patch.
                          items:
                            properties:
                              operator:
                                description: Operator specifies the operation. If omitted, defaults to "replace".
                                type: string
                              path:
                                description: Path is a JSON pointer (RFC 6901) specifying the location within the resource document where the operation is performed. Each key in the path should be prefixed with "/", while "~" and "/" should be escaped as "~0" and "~1" respectively. For example, to add a label "kubeadmiral.io/label", the path should be "/metadata/labels/kubeadmiral.io~1label".
                                type: string
                              value:
                                description: Value is the value(s) required by the operation.
                                x-kubernetes-preserve-unknown-fields: true
                            required:
                            - path
                            type: object
                          type: array
                      type: object
                    targetClusters:
                      description: TargetClusters selects the clusters in which the overriders in this rule should be applied. If multiple types of selectors are specified, the overall result is the intersection of all of them.
                      properties:
                        clusterAffinity:
                          description: ClusterAffinity selects FederatedClusters by matching their labels and fields against expressions. If multiple terms are specified, their results are ORed.
                          items:
                            properties:
                              matchExpressions:
                                description: A list of cluster selector requirements by cluster labels.
                                items:
                                  description: ClusterSelectorRequirement is a selector that contains values, a key, and an operator that relates the values and keys
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      description: ClusterSelectorOperator is the set of operators that can be used in a cluster selector requirement.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      - Gt
                                      - Lt
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  - values
                                  type: object
                                type: array
                              matchFields:
                                description: A list of cluster selector requirements by cluster fields.
                                items:
                                  description: ClusterSelectorRequirement is a selector that contains values, a key, and an operator that relates the values and keys
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      description: ClusterSelectorOperator is the set of operators that can be used in a cluster selector requirement.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      - Gt
                                      - Lt
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  - values
                                  type: object
                                type: array
                            type: object
                          type: array
                        clusterSelector:
                          additionalProperties:
                            type: string
                          description: ClusterSelector selects FederatedClusters by their labels. Empty labels selects all FederatedClusters.
                          type: object
                        clusters:
                          description: Clusters selects FederatedClusters by their names. Empty Clusters selects all FederatedClusters.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              refCount:
                format: int64
                minimum: 0.0
                type: integer
              typedRefCount:
                items:
                  properties:
                    count:
                      format: int64
                      minimum: 0.0
                      type: integer
                    group:
                      type: string
                    resource:
                      type: string
                  required:
                  - count
                  - resource
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
