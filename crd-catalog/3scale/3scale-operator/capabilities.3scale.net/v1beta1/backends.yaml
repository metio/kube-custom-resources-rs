apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "backends.capabilities.3scale.net"
spec:
  group: "capabilities.3scale.net"
  names:
    kind: "Backend"
    listKind: "BackendList"
    plural: "backends"
    singular: "backend"
  scope: "Namespaced"
  versions:
    - name: "v1beta1"
      schema:
        openAPIV3Schema:
          description: "Backend is the Schema for the backends API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "BackendSpec defines the desired state of Backend"
              properties:
                description:
                  description: "Description is a human readable text of the backend"
                  type: "string"
                mappingRules:
                  items:
                    description: "MappingRuleSpec defines the desired state of Product's MappingRule"
                    properties:
                      httpMethod:
                        enum:
                          - "GET"
                          - "HEAD"
                          - "POST"
                          - "PUT"
                          - "DELETE"
                          - "OPTIONS"
                          - "TRACE"
                          - "PATCH"
                          - "CONNECT"
                        type: "string"
                      increment:
                        type: "integer"
                      last:
                        type: "boolean"
                      metricMethodRef:
                        type: "string"
                      pattern:
                        type: "string"
                    required:
                      - "httpMethod"
                      - "increment"
                      - "metricMethodRef"
                      - "pattern"
                    type: "object"
                  type: "array"
                methods:
                  additionalProperties:
                    description: "MethodSpec defines the desired state of Product's Method"
                    properties:
                      description:
                        type: "string"
                      friendlyName:
                        type: "string"
                    required:
                      - "friendlyName"
                    type: "object"
                  description: "Methods\nMap: system_name -> MethodSpec\nsystem_name attr is unique for all metrics AND methods\nIn other words, if metric's system_name is A, there is no metric or method with system_name A."
                  type: "object"
                metrics:
                  additionalProperties:
                    description: "MetricSpec defines the desired state of Product's Metric"
                    properties:
                      description:
                        type: "string"
                      friendlyName:
                        type: "string"
                      unit:
                        type: "string"
                    required:
                      - "friendlyName"
                      - "unit"
                    type: "object"
                  description: "Metrics\nMap: system_name -> MetricSpec\nsystem_name attr is unique for all metrics AND methods\nIn other words, if metric's system_name is A, there is no metric or method with system_name A."
                  type: "object"
                name:
                  description: "Name is human readable name for the backend"
                  type: "string"
                privateBaseURL:
                  description: "PrivateBaseURL Private Base URL of the API"
                  pattern: "^(https?|wss?):\\/\\/.*$"
                  type: "string"
                providerAccountRef:
                  description: "ProviderAccountRef references account provider credentials"
                  properties:
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                systemName:
                  description: "SystemName identifies uniquely the backend within the account provider\nDefault value will be sanitized Name"
                  type: "string"
                  x-kubernetes-validations:
                    - message: "SystemName is immutable"
                      rule: "self == oldSelf"
              required:
                - "name"
                - "privateBaseURL"
              type: "object"
            status:
              description: "BackendStatus defines the observed state of Backend"
              properties:
                backendId:
                  format: "int64"
                  type: "integer"
                conditions:
                  description: "Current state of the 3scale backend.\nConditions represent the latest available observations of an object's state"
                  items:
                    description: "Condition represents an observation of an object's state. Conditions are an\nextension mechanism intended to be used when the details of an observation\nare not a priori known or would not apply to all instances of a given Kind.\n\n\nConditions should be added to explicitly convey properties that users and\ncomponents care about rather than requiring those properties to be inferred\nfrom other observations. Once defined, the meaning of a Condition can not be\nchanged arbitrarily - it becomes part of the API, and has the same\nbackwards- and forwards-compatibility concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: "date-time"
                        type: "string"
                      message:
                        type: "string"
                      reason:
                        description: "ConditionReason is intended to be a one-word, CamelCase representation of\nthe category of cause of the current status. It is intended to be used in\nconcise output, such as one-line kubectl get output, and in summarizing\noccurrences of causes."
                        type: "string"
                      status:
                        type: "string"
                      type:
                        description: "ConditionType is the type of the condition and is typically a CamelCased\nword or short phrase.\n\n\nCondition types should indicate state in the \"abnormal-true\" polarity. For\nexample, if the condition indicates when a policy is invalid, the \"is valid\"\ncase is probably the norm, so the condition should be called \"Invalid\"."
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                observedGeneration:
                  description: "ObservedGeneration reflects the generation of the most recently observed Backend Spec."
                  format: "int64"
                  type: "integer"
                providerAccountHost:
                  description: "3scale control plane host"
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
