apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "apicasts.apps.3scale.net"
spec:
  group: "apps.3scale.net"
  names:
    kind: "APIcast"
    listKind: "APIcastList"
    plural: "apicasts"
    singular: "apicast"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "APIcast is the Schema for the apicasts API."
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "APIcastSpec defines the desired state of APIcast."
              properties:
                adminPortalCredentialsRef:
                  description: "Secret reference to a Kubernetes Secret containing the admin portal\nendpoint URL. The Secret must be located in the same namespace."
                  properties:
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                affinity:
                  description: "Affinity is a group of affinity scheduling rules."
                  properties:
                    nodeAffinity:
                      description: "Describes node affinity scheduling rules for the pod."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                            properties:
                              preference:
                                description: "A node selector term, associated with the corresponding weight."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              weight:
                                description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "preference"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                          properties:
                            nodeSelectorTerms:
                              description: "Required. A list of node selector terms. The terms are ORed."
                              items:
                                description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                properties:
                                  matchExpressions:
                                    description: "A list of node selector requirements by node's labels."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchFields:
                                    description: "A list of node selector requirements by node's fields."
                                    items:
                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                      properties:
                                        key:
                                          description: "The label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                          type: "string"
                                        values:
                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              type: "array"
                          required:
                            - "nodeSelectorTerms"
                          type: "object"
                          x-kubernetes-map-type: "atomic"
                      type: "object"
                    podAffinity:
                      description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              matchLabelKeys:
                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              mismatchLabelKeys:
                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                      type: "object"
                    podAntiAffinity:
                      description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                          items:
                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                            properties:
                              podAffinityTerm:
                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                properties:
                                  labelSelector:
                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  matchLabelKeys:
                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  mismatchLabelKeys:
                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  namespaceSelector:
                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                    properties:
                                      matchExpressions:
                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                        items:
                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                          properties:
                                            key:
                                              description: "key is the label key that the selector applies to."
                                              type: "string"
                                            operator:
                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                              type: "string"
                                            values:
                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                              items:
                                                type: "string"
                                              type: "array"
                                          required:
                                            - "key"
                                            - "operator"
                                          type: "object"
                                        type: "array"
                                      matchLabels:
                                        additionalProperties:
                                          type: "string"
                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        type: "object"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  namespaces:
                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                    items:
                                      type: "string"
                                    type: "array"
                                  topologyKey:
                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                    type: "string"
                                required:
                                  - "topologyKey"
                                type: "object"
                              weight:
                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                format: "int32"
                                type: "integer"
                            required:
                              - "podAffinityTerm"
                              - "weight"
                            type: "object"
                          type: "array"
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                          items:
                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                            properties:
                              labelSelector:
                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              matchLabelKeys:
                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              mismatchLabelKeys:
                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              namespaceSelector:
                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                properties:
                                  matchExpressions:
                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                    items:
                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                      properties:
                                        key:
                                          description: "key is the label key that the selector applies to."
                                          type: "string"
                                        operator:
                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                          type: "string"
                                        values:
                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                          items:
                                            type: "string"
                                          type: "array"
                                      required:
                                        - "key"
                                        - "operator"
                                      type: "object"
                                    type: "array"
                                  matchLabels:
                                    additionalProperties:
                                      type: "string"
                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                    type: "object"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              namespaces:
                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                items:
                                  type: "string"
                                type: "array"
                              topologyKey:
                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                type: "string"
                            required:
                              - "topologyKey"
                            type: "object"
                          type: "array"
                      type: "object"
                  type: "object"
                allProxy:
                  description: "AllProxy specifies a HTTP(S) proxy to be used for connecting to services if\na protocol-specific proxy is not specified. Authentication is not supported.\nFormat is <scheme>://<host>:<port>"
                  type: "string"
                caCertificateSecretRef:
                  description: "CACertificateSecretRef references secret containing the X.509 CA certificate in the PEM format."
                  properties:
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                cacheConfigurationSeconds:
                  description: "The period (in seconds) that the APIcast configuration will be stored in\nAPIcast's cache."
                  format: "int64"
                  type: "integer"
                cacheMaxTime:
                  description: "CacheMaxTime indicates the maximum time to be cached. If cache-control header is not set, the time to be cached will be the defined one."
                  type: "string"
                cacheStatusCodes:
                  description: "CacheStatusCodes defines the status codes for which the response content will be cached."
                  type: "string"
                configurationLoadMode:
                  description: "ConfigurationLoadMode can be used to set APIcast's configuration load mode."
                  enum:
                    - "boot"
                    - "lazy"
                  type: "string"
                customEnvironments:
                  description: "CustomEnvironments specifies an array of defined custome environments to be loaded"
                  items:
                    description: "CustomEnvironmentSpec contains or has reference to an APIcast custom environment"
                    properties:
                      secretRef:
                        description: "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
                        properties:
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                    required:
                      - "secretRef"
                    type: "object"
                  type: "array"
                customPolicies:
                  description: "CustomPolicies specifies an array of defined custome policies to be loaded"
                  items:
                    description: "CustomPolicySpec contains or has reference to an APIcast custom policy"
                    properties:
                      name:
                        description: "Name specifies the name of the custom policy"
                        type: "string"
                      secretRef:
                        description: "SecretRef specifies the secret holding the custom policy metadata and lua code"
                        properties:
                          name:
                            description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                            type: "string"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      version:
                        description: "Version specifies the name of the custom policy"
                        type: "string"
                    required:
                      - "name"
                      - "secretRef"
                      - "version"
                    type: "object"
                  type: "array"
                deploymentEnvironment:
                  description: "DeploymentEnvironment is the environment for which the configuration will\nbe downloaded from 3scale (Staging or Production), when using APIcast.\nThe value will also be used in the header X-3scale-User-Agent in the\nauthorize/report requests made to 3scale Service Management API. It is\nused by 3scale for statistics."
                  type: "string"
                dnsResolverAddress:
                  description: "DNSResolverAddress can be used to specify a custom DNS resolver address\nto be used by OpenResty."
                  type: "string"
                embeddedConfigurationSecretRef:
                  description: "Secret reference to a Kubernetes secret containing the gateway\nconfiguration. The Secret must be located in the same namespace."
                  properties:
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                enabledServices:
                  description: "EnabledServices can be used to specify a list of service IDs used to\nfilter the configured services."
                  items:
                    type: "string"
                  type: "array"
                exposedHost:
                  description: "ExposedHost is the domain name used for external access. By default no\nexternal access is configured."
                  properties:
                    host:
                      type: "string"
                    ingressClassName:
                      type: "string"
                    tls:
                      items:
                        description: "IngressTLS describes the transport layer security associated with an ingress."
                        properties:
                          hosts:
                            description: "hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
                            items:
                              type: "string"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          secretName:
                            description: "secretName is the name of the secret used to terminate TLS traffic on\nport 443. Field is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the \"Host\" header is used for routing."
                            type: "string"
                        type: "object"
                      type: "array"
                  required:
                    - "host"
                  type: "object"
                extendedMetrics:
                  description: "ExtendedMetrics enables additional information on Prometheus metrics; some labels will be used with specific information that will provide more in-depth details about APIcast."
                  type: "boolean"
                hpa:
                  description: "Enables/disables HPA"
                  type: "boolean"
                httpProxy:
                  description: "HTTPProxy specifies a HTTP(S) Proxy to be used for connecting to HTTP services.\nAuthentication is not supported. Format is <scheme>://<host>:<port>"
                  type: "string"
                httpsCertificateSecretRef:
                  description: "HTTPSCertificateSecretRef references secret containing the X.509 certificate in the PEM format and the X.509 certificate secret key."
                  properties:
                    name:
                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                      type: "string"
                  type: "object"
                  x-kubernetes-map-type: "atomic"
                httpsPort:
                  description: "HttpsPort controls on which port APIcast should start listening for HTTPS connections. If this clashes with HTTP port it will be used only for HTTPS."
                  format: "int32"
                  type: "integer"
                httpsProxy:
                  description: "HTTPSProxy specifies a HTTP(S) Proxy to be used for connecting to HTTPS services.\nAuthentication is not supported. Format is <scheme>://<host>:<port>"
                  type: "string"
                httpsVerifyDepth:
                  description: "HTTPSVerifyDepth defines the maximum length of the client certificate chain."
                  format: "int64"
                  minimum: 0.0
                  type: "integer"
                image:
                  description: "Image allows overriding the default APIcast gateway container image.\nThis setting should only be used for dev/testing purposes. Setting\nthis disables automated upgrades of the image."
                  type: "string"
                loadServicesWhenNeeded:
                  description: "LoadServicesWhenNeeded makes the configurations to be loaded lazily. APIcast will only load the ones configured for the host specified in the host header of the request."
                  type: "boolean"
                logLevel:
                  description: "LogLevel controls the log level of APIcast's OpenResty logs."
                  enum:
                    - "debug"
                    - "info"
                    - "notice"
                    - "warn"
                    - "error"
                    - "crit"
                    - "alert"
                    - "emerg"
                  type: "string"
                managementAPIScope:
                  description: "ManagementAPIScope controls APIcast Management API scope. The Management\nAPI is powerful and can control the APIcast configuration. debug level\nshould only be enabled for debugging purposes."
                  enum:
                    - "disabled"
                    - "status"
                    - "policies"
                    - "debug"
                  type: "string"
                noProxy:
                  description: "NoProxy specifies a comma-separated list of hostnames and domain\nnames for which the requests should not be proxied. Setting to a single\n* character, which matches all hosts, effectively disables the proxy."
                  type: "string"
                oidcLogLevel:
                  description: "OidcLogLevel allows to set the log level for the logs related to OpenID Connect integration."
                  enum:
                    - "debug"
                    - "info"
                    - "notice"
                    - "warn"
                    - "error"
                    - "crit"
                    - "alert"
                    - "emerg"
                  type: "string"
                openSSLPeerVerificationEnabled:
                  description: "OpenSSLPeerVerificationEnabled controls OpenSSL peer verification."
                  type: "boolean"
                openTelemetry:
                  description: "OpenTelemetry contains the gateway instrumentation configuration\nwith APIcast."
                  properties:
                    enabled:
                      description: "Enabled controls whether OpenTelemetry integration with APIcast is enabled.\nBy default it is not enabled."
                      type: "boolean"
                    tracingConfigSecretKey:
                      description: "TracingConfigSecretKey contains the key of the secret to select the configuration from.\nif unspecified, the first secret key in lexicographical order will be selected."
                      type: "string"
                    tracingConfigSecretRef:
                      description: "TracingConfigSecretRef contains a Secret reference the Opentelemetry configuration.\nThe configuration file specification is defined in the Nginx instrumentation library repo\nhttps://github.com/open-telemetry/opentelemetry-cpp-contrib/tree/main/instrumentation/nginx"
                      properties:
                        name:
                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                  type: "object"
                openTracing:
                  description: "OpenTracingSpec contains the OpenTracing integration configuration\nwith APIcast.\nDeprecated"
                  properties:
                    enabled:
                      description: "Enabled controls whether OpenTracing integration with APIcast is enabled.\nBy default it is not enabled."
                      type: "boolean"
                    tracingConfigSecretRef:
                      description: "TracingConfigSecretRef contains a Secret reference the OpenTracing configuration.\nEach supported tracing library provides a default configuration file\nthat is used if TracingConfig is not specified."
                      properties:
                        name:
                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                          type: "string"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    tracingLibrary:
                      description: "TracingLibrary controls which OpenTracing library is loaded. At the moment\nthe only supported tracer is `jaeger`. If not set, `jaeger` will be used."
                      type: "string"
                  type: "object"
                pathRoutingEnabled:
                  description: "PathRoutingEnabled can be used to enable APIcast's path-based routing\nin addition to to the default host-based routing."
                  type: "boolean"
                podDisruptionBudget:
                  properties:
                    enabled:
                      type: "boolean"
                  type: "object"
                priorityClassName:
                  type: "string"
                replicas:
                  description: "Number of replicas of the APIcast Deployment."
                  format: "int64"
                  type: "integer"
                resources:
                  description: "Resources can be used to set custom compute Kubernetes Resource\nRequirements for the APIcast deployment."
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                      items:
                        description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                        properties:
                          name:
                            description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                      x-kubernetes-list-map-keys:
                        - "name"
                      x-kubernetes-list-type: "map"
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: "integer"
                          - type: "string"
                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        x-kubernetes-int-or-string: true
                      description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: "object"
                  type: "object"
                responseCodesIncluded:
                  description: "ResponseCodesIncluded can be set to log the response codes of the responses\nin Apisonator, so they can then be visualized in the 3scale admin portal."
                  type: "boolean"
                serviceAccount:
                  description: "Kubernetes Service Account name to be used for the APIcast Deployment. The\nService Account must exist beforehand."
                  type: "string"
                serviceCacheSize:
                  description: "ServiceCacheSize specifies the number of services that APICast can store in the internal cache"
                  format: "int32"
                  type: "integer"
                serviceConfigurationVersionOverride:
                  additionalProperties:
                    type: "string"
                  description: "ServiceConfigurationVersionOverride contains service configuration version map to prevent it from auto-updating."
                  type: "object"
                servicesFilterByURL:
                  description: "ServicesFilterByURL is used to filter the service configured in the 3scale API Manager, the filter matches with the public base URL (Staging or production)."
                  type: "string"
                timezone:
                  description: "Timezone specifies the local timezone of the APIcast deployment pods. A timezone value available in the TZ database must be set."
                  type: "string"
                tolerations:
                  items:
                    description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                    properties:
                      effect:
                        description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                        type: "string"
                      key:
                        description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                        type: "string"
                      operator:
                        description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                        type: "string"
                      tolerationSeconds:
                        description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                        format: "int64"
                        type: "integer"
                      value:
                        description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                        type: "string"
                    type: "object"
                  type: "array"
                topologySpreadConstraints:
                  items:
                    description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                    properties:
                      labelSelector:
                        description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                        properties:
                          matchExpressions:
                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                            items:
                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                              properties:
                                key:
                                  description: "key is the label key that the selector applies to."
                                  type: "string"
                                operator:
                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                  type: "string"
                                values:
                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                  items:
                                    type: "string"
                                  type: "array"
                              required:
                                - "key"
                                - "operator"
                              type: "object"
                            type: "array"
                          matchLabels:
                            additionalProperties:
                              type: "string"
                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            type: "object"
                        type: "object"
                        x-kubernetes-map-type: "atomic"
                      matchLabelKeys:
                        description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                        items:
                          type: "string"
                        type: "array"
                        x-kubernetes-list-type: "atomic"
                      maxSkew:
                        description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                        format: "int32"
                        type: "integer"
                      minDomains:
                        description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default)."
                        format: "int32"
                        type: "integer"
                      nodeAffinityPolicy:
                        description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                        type: "string"
                      nodeTaintsPolicy:
                        description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                        type: "string"
                      topologyKey:
                        description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                        type: "string"
                      whenUnsatisfiable:
                        description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                        type: "string"
                    required:
                      - "maxSkew"
                      - "topologyKey"
                      - "whenUnsatisfiable"
                    type: "object"
                  type: "array"
                upstreamRetryCases:
                  description: "UpstreamRetryCases Used only when the retry policy is configured. Specified in which cases a request to the upstream API should be retried."
                  enum:
                    - "error"
                    - "timeout"
                    - "invalid_header"
                    - "http_500"
                    - "http_502"
                    - "http_503"
                    - "http_504"
                    - "http_403"
                    - "http_404"
                    - "http_429"
                    - "non_idempotent"
                    - "off"
                  type: "string"
                workers:
                  description: "Workers defines the number of APIcast's worker processes per pod."
                  format: "int32"
                  minimum: 1.0
                  type: "integer"
              type: "object"
            status:
              description: "APIcastStatus defines the observed state of APIcast."
              properties:
                conditions:
                  description: "Represents the observations of a foo's current state.\nKnown .status.conditions.type are: \"Available\""
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "type"
                  x-kubernetes-list-type: "map"
                image:
                  description: "The image being used in the APIcast deployment."
                  type: "string"
                observedGeneration:
                  description: "ObservedGeneration reflects the generation of the most recently observed spec."
                  format: "int64"
                  type: "integer"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
