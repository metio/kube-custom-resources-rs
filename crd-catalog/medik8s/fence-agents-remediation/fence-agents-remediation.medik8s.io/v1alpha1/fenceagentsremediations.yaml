apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.18.0"
  name: "fenceagentsremediations.fence-agents-remediation.medik8s.io"
spec:
  group: "fence-agents-remediation.medik8s.io"
  names:
    kind: "FenceAgentsRemediation"
    listKind: "FenceAgentsRemediationList"
    plural: "fenceagentsremediations"
    shortNames:
      - "far"
    singular: "fenceagentsremediation"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "FenceAgentsRemediation is the Schema for the fenceagentsremediations API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "FenceAgentsRemediationSpec defines the desired state of FenceAgentsRemediation"
              properties:
                agent:
                  description: "Agent is the name of fence agent that will be used.\nIt should have a fence_ prefix."
                  pattern: "fence_.+"
                  type: "string"
                nodeSecrets:
                  additionalProperties:
                    type: "string"
                  description: "NodeSecretNames maps the node name to the Secret name which contains params relevant for that node."
                  type: "object"
                nodeparameters:
                  additionalProperties:
                    additionalProperties:
                      type: "string"
                    type: "object"
                  description: "NodeParameters are passed to the fencing agent according to the node that is fenced, since they are node specific"
                  type: "object"
                remediationStrategy:
                  default: "ResourceDeletion"
                  description: "RemediationStrategy is the remediation method for unhealthy nodes.\nCurrently, it could be either \"OutOfServiceTaint\" or \"ResourceDeletion\".\nResourceDeletion will iterate over all pods related to the unhealthy node and delete them.\nOutOfServiceTaint will add the out-of-service taint which is a new well-known taint \"node.kubernetes.io/out-of-service\"\nthat enables automatic deletion of pv-attached pods on failed nodes, \"out-of-service\" taint is only supported on clusters with k8s version 1.26+ or OCP/OKD version 4.13+."
                  enum:
                    - "ResourceDeletion"
                    - "OutOfServiceTaint"
                  type: "string"
                retrycount:
                  default: 5
                  description: "RetryCount is the number of times the fencing agent will be executed"
                  type: "integer"
                retryinterval:
                  default: "5s"
                  description: "RetryInterval is the interval between each fencing agent execution"
                  pattern: "^([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$"
                  type: "string"
                sharedSecretName:
                  default: "fence-agents-credentials-shared"
                  description: "SharedSecretName is the name of the Secret which will contain params needed for FAR in order to remediate any node.\nUsing this Secret is optional."
                  type: "string"
                sharedparameters:
                  additionalProperties:
                    type: "string"
                  description: "SharedParameters are parameters common to all nodes"
                  type: "object"
                timeout:
                  default: "60s"
                  description: "Timeout is the timeout for each fencing agent execution"
                  pattern: "^([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$"
                  type: "string"
              required:
                - "agent"
              type: "object"
            status:
              description: "FenceAgentsRemediationStatus defines the observed state of FenceAgentsRemediation"
              properties:
                conditions:
                  description: "Represents the observations of a FenceAgentsRemediation's current state.\nKnown .status.conditions.type are: \"Processing\", \"FenceAgentActionSucceeded\", and \"Succeeded\"."
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource."
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase."
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                  x-kubernetes-list-map-keys:
                    - "type"
                  x-kubernetes-list-type: "map"
                lastUpdateTime:
                  description: "LastUpdateTime is the last time the status was updated."
                  format: "date-time"
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
