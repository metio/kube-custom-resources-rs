apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "filesystems.efs.services.k8s.aws"
spec:
  group: "efs.services.k8s.aws"
  names:
    kind: "FileSystem"
    listKind: "FileSystemList"
    plural: "filesystems"
    singular: "filesystem"
  scope: "Namespaced"
  versions:
    - additionalPrinterColumns:
        - jsonPath: ".status.fileSystemID"
          name: "ID"
          type: "string"
        - jsonPath: ".spec.encrypted"
          name: "ENCRYPTED"
          type: "boolean"
        - jsonPath: ".spec.performanceMode"
          name: "PERFORMANCEMODE"
          priority: 1
          type: "string"
        - jsonPath: ".spec.throughputMode"
          name: "THROUGHPUTMODE"
          priority: 1
          type: "string"
        - jsonPath: ".status.provisionedThroughputInMiBps"
          name: "PROVISIONEDTHROUGHPUT"
          priority: 1
          type: "string"
        - jsonPath: ".status.sizeInBytes.value"
          name: "SIZE"
          type: "integer"
        - jsonPath: ".status.numberOfMountTargets"
          name: "MOUNTTARGETS"
          type: "integer"
        - jsonPath: ".status.lifeCycleState"
          name: "STATE"
          type: "string"
        - jsonPath: ".status.conditions[?(@.type==\"ACK.ResourceSynced\")].status"
          name: "Synced"
          type: "string"
        - jsonPath: ".metadata.creationTimestamp"
          name: "Age"
          type: "date"
      name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "FileSystem is the Schema for the FileSystems API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "FileSystemSpec defines the desired state of FileSystem."
              properties:
                availabilityZoneName:
                  description: "Used to create a One Zone file system. It specifies the Amazon Web Services\nAvailability Zone in which to create the file system. Use the format us-east-1a\nto specify the Availability Zone. For more information about One Zone file\nsystems, see Using EFS storage classes (https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html)\nin the Amazon EFS User Guide.\n\n\nOne Zone file systems are not available in all Availability Zones in Amazon\nWeb Services Regions where Amazon EFS is available."
                  type: "string"
                backup:
                  description: "Specifies whether automatic backups are enabled on the file system that you\nare creating. Set the value to true to enable automatic backups. If you are\ncreating a One Zone file system, automatic backups are enabled by default.\nFor more information, see Automatic backups (https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups)\nin the Amazon EFS User Guide.\n\n\nDefault is false. However, if you specify an AvailabilityZoneName, the default\nis true.\n\n\nBackup is not available in all Amazon Web Services Regions where Amazon EFS\nis available."
                  type: "boolean"
                backupPolicy:
                  description: "The backup policy included in the PutBackupPolicy request."
                  properties:
                    status:
                      type: "string"
                  type: "object"
                encrypted:
                  description: "A Boolean value that, if true, creates an encrypted file system. When creating\nan encrypted file system, you have the option of specifying an existing Key\nManagement Service key (KMS key). If you don't specify a KMS key, then the\ndefault KMS key for Amazon EFS, /aws/elasticfilesystem, is used to protect\nthe encrypted file system."
                  type: "boolean"
                fileSystemProtection:
                  properties:
                    replicationOverwriteProtection:
                      type: "string"
                  type: "object"
                kmsKeyID:
                  description: "The ID of the KMS key that you want to use to protect the encrypted file\nsystem. This parameter is required only if you want to use a non-default\nKMS key. If this parameter is not specified, the default KMS key for Amazon\nEFS is used. You can specify a KMS key ID using the following formats:\n\n\n   * Key ID - A unique identifier of the key, for example 1234abcd-12ab-34cd-56ef-1234567890ab.\n\n\n   * ARN - An Amazon Resource Name (ARN) for the key, for example arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab.\n\n\n   * Key alias - A previously created display name for a key, for example\n   alias/projectKey1.\n\n\n   * Key alias ARN - An ARN for a key alias, for example arn:aws:kms:us-west-2:444455556666:alias/projectKey1.\n\n\nIf you use KmsKeyId, you must set the CreateFileSystemRequest$Encrypted parameter\nto true.\n\n\nEFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with\nAmazon EFS file systems."
                  type: "string"
                kmsKeyRef:
                  description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t  name: my-api"
                  properties:
                    from:
                      description: "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)"
                      properties:
                        name:
                          type: "string"
                        namespace:
                          type: "string"
                      type: "object"
                  type: "object"
                lifecyclePolicies:
                  description: "An array of LifecyclePolicy objects that define the file system's LifecycleConfiguration\nobject. A LifecycleConfiguration object informs EFS Lifecycle management\nof the following:\n\n\n   * TransitionToIA – When to move files in the file system from primary\n   storage (Standard storage class) into the Infrequent Access (IA) storage.\n\n\n   * TransitionToArchive – When to move files in the file system from their\n   current storage class (either IA or Standard storage) into the Archive\n   storage. File systems cannot transition into Archive storage before transitioning\n   into IA storage. Therefore, TransitionToArchive must either not be set\n   or must be later than TransitionToIA. The Archive storage class is available\n   only for file systems that use the Elastic Throughput mode and the General\n   Purpose Performance mode.\n\n\n   * TransitionToPrimaryStorageClass – Whether to move files in the file\n   system back to primary storage (Standard storage class) after they are\n   accessed in IA or Archive storage.\n\n\nWhen using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration\nAPI action, Amazon EFS requires that each LifecyclePolicy object have only\na single transition. This means that in a request body, LifecyclePolicies\nmust be structured as an array of LifecyclePolicy objects, one object for\neach storage transition. See the example requests in the following section\nfor more information."
                  items:
                    description: "Describes a policy used by Lifecycle management that specifies when to transition\nfiles into and out of storage classes. For more information, see Managing\nfile system storage (https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html).\n\n\nWhen using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration\nAPI action, Amazon EFS requires that each LifecyclePolicy object have only\na single transition. This means that in a request body, LifecyclePolicies\nmust be structured as an array of LifecyclePolicy objects, one object for\neach transition. For more information, see the request examples in PutLifecycleConfiguration."
                    properties:
                      transitionToArchive:
                        type: "string"
                      transitionToIA:
                        type: "string"
                      transitionToPrimaryStorageClass:
                        type: "string"
                    type: "object"
                  type: "array"
                performanceMode:
                  description: "The Performance mode of the file system. We recommend generalPurpose performance\nmode for all file systems. File systems using the maxIO performance mode\ncan scale to higher levels of aggregate throughput and operations per second\nwith a tradeoff of slightly higher latencies for most file operations. The\nperformance mode can't be changed after the file system has been created.\nThe maxIO mode is not supported on One Zone file systems.\n\n\nDue to the higher per-operation latencies with Max I/O, we recommend using\nGeneral Purpose performance mode for all file systems.\n\n\nDefault is generalPurpose."
                  type: "string"
                policy:
                  description: "The FileSystemPolicy that you're creating. Accepts a JSON formatted policy\ndefinition. EFS file system policies have a 20,000 character limit. To find\nout more about the elements that make up a file system policy, see EFS Resource-based\nPolicies (https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies)."
                  type: "string"
                provisionedThroughputInMiBps:
                  description: "The throughput, measured in mebibytes per second (MiBps), that you want to\nprovision for a file system that you're creating. Required if ThroughputMode\nis set to provisioned. Valid values are 1-3414 MiBps, with the upper limit\ndepending on Region. To increase this limit, contact Amazon Web Services\nSupport. For more information, see Amazon EFS quotas that you can increase\n(https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits) in the\nAmazon EFS User Guide."
                  type: "number"
                tags:
                  description: "Use to create one or more tags associated with the file system. Each tag\nis a user-defined key-value pair. Name your file system on creation by including\na \"Key\":\"Name\",\"Value\":\"{value}\" key-value pair. Each key must be unique.\nFor more information, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)\nin the Amazon Web Services General Reference Guide."
                  items:
                    description: "A tag is a key-value pair. Allowed characters are letters, white space, and\nnumbers that can be represented in UTF-8, and the following characters:+\n- = . _ : /."
                    properties:
                      key:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                throughputMode:
                  description: "Specifies the throughput mode for the file system. The mode can be bursting,\nprovisioned, or elastic. If you set ThroughputMode to provisioned, you must\nalso set a value for ProvisionedThroughputInMibps. After you create the file\nsystem, you can decrease your file system's Provisioned throughput or change\nbetween the throughput modes, with certain time restrictions. For more information,\nsee Specifying throughput with provisioned mode (https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput)\nin the Amazon EFS User Guide.\n\n\nDefault is bursting."
                  type: "string"
              type: "object"
            status:
              description: "FileSystemStatus defines the observed state of FileSystem"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nTODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                availabilityZoneID:
                  description: "The unique and consistent identifier of the Availability Zone in which the\nfile system is located, and is valid only for One Zone file systems. For\nexample, use1-az1 is an Availability Zone ID for the us-east-1 Amazon Web\nServices Region, and it has the same location in every Amazon Web Services\naccount."
                  type: "string"
                conditions:
                  description: "All CRS managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                creationTime:
                  description: "The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z)."
                  format: "date-time"
                  type: "string"
                fileSystemID:
                  description: "The ID of the file system, assigned by Amazon EFS."
                  type: "string"
                lifeCycleState:
                  description: "The lifecycle phase of the file system."
                  type: "string"
                name:
                  description: "You can add tags to a file system, including a Name tag. For more information,\nsee CreateFileSystem. If the file system has a Name tag, Amazon EFS returns\nthe value in this field."
                  type: "string"
                numberOfMountTargets:
                  description: "The current number of mount targets that the file system has. For more information,\nsee CreateMountTarget."
                  format: "int64"
                  type: "integer"
                ownerID:
                  description: "The Amazon Web Services account that created the file system."
                  type: "string"
                sizeInBytes:
                  description: "The latest known metered size (in bytes) of data stored in the file system,\nin its Value field, and the time at which that size was determined in its\nTimestamp field. The Timestamp value is the integer number of seconds since\n1970-01-01T00:00:00Z. The SizeInBytes value doesn't represent the size of\na consistent snapshot of the file system, but it is eventually consistent\nwhen there are no writes to the file system. That is, SizeInBytes represents\nactual size only if the file system is not modified for a period longer than\na couple of hours. Otherwise, the value is not the exact size that the file\nsystem was at any point in time."
                  properties:
                    timestamp:
                      format: "date-time"
                      type: "string"
                    value:
                      format: "int64"
                      type: "integer"
                    valueInArchive:
                      format: "int64"
                      type: "integer"
                    valueInIA:
                      format: "int64"
                      type: "integer"
                    valueInStandard:
                      format: "int64"
                      type: "integer"
                  type: "object"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
