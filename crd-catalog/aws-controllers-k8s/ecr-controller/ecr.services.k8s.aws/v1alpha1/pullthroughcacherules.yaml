apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.16.2"
  name: "pullthroughcacherules.ecr.services.k8s.aws"
spec:
  group: "ecr.services.k8s.aws"
  names:
    kind: "PullThroughCacheRule"
    listKind: "PullThroughCacheRuleList"
    plural: "pullthroughcacherules"
    singular: "pullthroughcacherule"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "PullThroughCacheRule is the Schema for the PullThroughCacheRules API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "PullThroughCacheRuleSpec defines the desired state of PullThroughCacheRule.\n\nThe details of a pull through cache rule."
              properties:
                credentialARN:
                  description: "The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager\nsecret that identifies the credentials to authenticate to the upstream registry.\n\nRegex Pattern: `^arn:aws:secretsmanager:[a-zA-Z0-9-:]+:secret:ecr\\-pullthroughcache\\/[a-zA-Z0-9\\/_+=.@-]+$`"
                  type: "string"
                credentialRef:
                  description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api"
                  properties:
                    from:
                      description: "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)"
                      properties:
                        name:
                          type: "string"
                        namespace:
                          type: "string"
                      type: "object"
                  type: "object"
                customRoleARN:
                  description: "Amazon Resource Name (ARN) of the IAM role to be assumed by Amazon ECR to\nauthenticate to the ECR upstream registry. This role must be in the same\naccount as the registry that you are configuring."
                  type: "string"
                customRoleRef:
                  description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api"
                  properties:
                    from:
                      description: "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)"
                      properties:
                        name:
                          type: "string"
                        namespace:
                          type: "string"
                      type: "object"
                  type: "object"
                ecrRepositoryPrefix:
                  description: "The repository name prefix to use when caching images from the source registry.\n\nThere is always an assumed / applied to the end of the prefix. If you specify\necr-public as the prefix, Amazon ECR treats that as ecr-public/.\n\nRegex Pattern: `^((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*/?|ROOT)$`"
                  type: "string"
                  x-kubernetes-validations:
                    - message: "Value is immutable once set"
                      rule: "self == oldSelf"
                registryID:
                  description: "The Amazon Web Services account ID associated with the registry to create\nthe pull through cache rule for. If you do not specify a registry, the default\nregistry is assumed.\n\nRegex Pattern: `^[0-9]{12}$`"
                  type: "string"
                  x-kubernetes-validations:
                    - message: "Value is immutable once set"
                      rule: "self == oldSelf"
                upstreamRegistry:
                  description: "The name of the upstream registry."
                  type: "string"
                  x-kubernetes-validations:
                    - message: "Value is immutable once set"
                      rule: "self == oldSelf"
                upstreamRegistryURL:
                  description: "The registry URL of the upstream public registry to use as the source for\nthe pull through cache rule. The following is the syntax to use for each\nsupported upstream registry.\n\n   * Amazon ECR (ecr) – .dkr.ecr..amazonaws.com\n\n   * Amazon ECR Public (ecr-public) – public.ecr.aws\n\n   * Docker Hub (docker-hub) – registry-1.docker.io\n\n   * GitHub Container Registry (github-container-registry) – ghcr.io\n\n   * GitLab Container Registry (gitlab-container-registry) – registry.gitlab.com\n\n   * Kubernetes (k8s) – registry.k8s.io\n\n   * Microsoft Azure Container Registry (azure-container-registry) – .azurecr.io\n\n   * Quay (quay) – quay.io"
                  type: "string"
                  x-kubernetes-validations:
                    - message: "Value is immutable once set"
                      rule: "self == oldSelf"
                upstreamRepositoryPrefix:
                  description: "The repository name prefix of the upstream registry to match with the upstream\nrepository name. When this field isn't specified, Amazon ECR will use the\nROOT.\n\nRegex Pattern: `^((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*/?|ROOT)$`"
                  type: "string"
                  x-kubernetes-validations:
                    - message: "Value is immutable once set"
                      rule: "self == oldSelf"
              required:
                - "ecrRepositoryPrefix"
                - "upstreamRegistryURL"
              type: "object"
            status:
              description: "PullThroughCacheRuleStatus defines the observed state of PullThroughCacheRule"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                conditions:
                  description: "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                createdAt:
                  description: "The date and time, in JavaScript date format, when the pull through cache\nrule was created."
                  format: "date-time"
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
