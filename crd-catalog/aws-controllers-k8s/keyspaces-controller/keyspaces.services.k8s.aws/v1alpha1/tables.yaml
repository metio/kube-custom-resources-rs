apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "tables.keyspaces.services.k8s.aws"
spec:
  group: "keyspaces.services.k8s.aws"
  names:
    kind: "Table"
    listKind: "TableList"
    plural: "tables"
    singular: "table"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Table is the Schema for the Tables API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "TableSpec defines the desired state of Table."
              properties:
                capacitySpecification:
                  description: "Specifies the read/write throughput capacity mode for the table. The options\nare:\n\n\n   * throughputMode:PAY_PER_REQUEST and\n\n\n   * throughputMode:PROVISIONED - Provisioned capacity mode requires readCapacityUnits\n   and writeCapacityUnits as input.\n\n\nThe default is throughput_mode:PAY_PER_REQUEST.\n\n\nFor more information, see Read/write capacity modes (https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html)\nin the Amazon Keyspaces Developer Guide."
                  properties:
                    readCapacityUnits:
                      format: "int64"
                      type: "integer"
                    throughputMode:
                      type: "string"
                    writeCapacityUnits:
                      format: "int64"
                      type: "integer"
                  type: "object"
                clientSideTimestamps:
                  description: "Enables client-side timestamps for the table. By default, the setting is\ndisabled. You can enable client-side timestamps with the following option:\n\n\n   * status: \"enabled\"\n\n\nOnce client-side timestamps are enabled for a table, this setting cannot\nbe disabled."
                  properties:
                    status:
                      type: "string"
                  type: "object"
                comment:
                  description: "This parameter allows to enter a description of the table."
                  properties:
                    message:
                      type: "string"
                  type: "object"
                defaultTimeToLive:
                  description: "The default Time to Live setting in seconds for the table.\n\n\nFor more information, see Setting the default TTL value for a table (https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl)\nin the Amazon Keyspaces Developer Guide."
                  format: "int64"
                  type: "integer"
                encryptionSpecification:
                  description: "Specifies how the encryption key for encryption at rest is managed for the\ntable. You can choose one of the following KMS key (KMS key):\n\n\n   * type:AWS_OWNED_KMS_KEY - This key is owned by Amazon Keyspaces.\n\n\n   * type:CUSTOMER_MANAGED_KMS_KEY - This key is stored in your account and\n   is created, owned, and managed by you. This option requires the kms_key_identifier\n   of the KMS key in Amazon Resource Name (ARN) format as input.\n\n\nThe default is type:AWS_OWNED_KMS_KEY.\n\n\nFor more information, see Encryption at rest (https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html)\nin the Amazon Keyspaces Developer Guide."
                  properties:
                    kmsKeyIdentifier:
                      type: "string"
                    type_:
                      type: "string"
                  type: "object"
                keyspaceName:
                  description: "The name of the keyspace that the table is going to be created in."
                  type: "string"
                pointInTimeRecovery:
                  description: "Specifies if pointInTimeRecovery is enabled or disabled for the table. The\noptions are:\n\n\n   * status=ENABLED\n\n\n   * status=DISABLED\n\n\nIf it's not specified, the default is status=DISABLED.\n\n\nFor more information, see Point-in-time recovery (https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html)\nin the Amazon Keyspaces Developer Guide."
                  properties:
                    status:
                      type: "string"
                  type: "object"
                schemaDefinition:
                  description: "The schemaDefinition consists of the following parameters.\n\n\nFor each column to be created:\n\n\n   * name - The name of the column.\n\n\n   * type - An Amazon Keyspaces data type. For more information, see Data\n   types (https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types)\n   in the Amazon Keyspaces Developer Guide.\n\n\nThe primary key of the table consists of the following columns:\n\n\n   * partitionKeys - The partition key can be a single column, or it can\n   be a compound value composed of two or more columns. The partition key\n   portion of the primary key is required and determines how Amazon Keyspaces\n   stores your data.\n\n\n   * name - The name of each partition key column.\n\n\n   * clusteringKeys - The optional clustering column portion of your primary\n   key determines how the data is clustered and sorted within each partition.\n\n\n   * name - The name of the clustering column.\n\n\n   * orderBy - Sets the ascendant (ASC) or descendant (DESC) order modifier.\n   To define a column as static use staticColumns - Static columns store\n   values that are shared by all rows in the same partition:\n\n\n   * name - The name of the column.\n\n\n   * type - An Amazon Keyspaces data type."
                  properties:
                    allColumns:
                      items:
                        description: "The names and data types of regular columns."
                        properties:
                          name:
                            type: "string"
                          type_:
                            type: "string"
                        type: "object"
                      type: "array"
                    clusteringKeys:
                      items:
                        description: "The optional clustering column portion of your primary key determines how\nthe data is clustered and sorted within each partition."
                        properties:
                          name:
                            type: "string"
                          orderBy:
                            type: "string"
                        type: "object"
                      type: "array"
                    partitionKeys:
                      items:
                        description: "The partition key portion of the primary key is required and determines how\nAmazon Keyspaces stores the data. The partition key can be a single column,\nor it can be a compound value composed of two or more columns."
                        properties:
                          name:
                            type: "string"
                        type: "object"
                      type: "array"
                    staticColumns:
                      items:
                        description: "The static columns of the table. Static columns store values that are shared\nby all rows in the same partition."
                        properties:
                          name:
                            type: "string"
                        type: "object"
                      type: "array"
                  type: "object"
                tableName:
                  description: "The name of the table."
                  type: "string"
                tags:
                  description: "A list of key-value pair tags to be attached to the resource.\n\n\nFor more information, see Adding tags and labels to Amazon Keyspaces resources\n(https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html)\nin the Amazon Keyspaces Developer Guide."
                  items:
                    description: "Describes a tag. A tag is a key-value pair. You can add up to 50 tags to\na single Amazon Keyspaces resource.\n\n\nAmazon Web Services-assigned tag names and values are automatically assigned\nthe aws: prefix, which the user cannot assign. Amazon Web Services-assigned\ntag names do not count towards the tag limit of 50. User-assigned tag names\nhave the prefix user: in the Cost Allocation Report. You cannot backdate\nthe application of a tag.\n\n\nFor more information, see Adding tags and labels to Amazon Keyspaces resources\n(https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html)\nin the Amazon Keyspaces Developer Guide."
                    properties:
                      key:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                ttl:
                  description: "Enables Time to Live custom settings for the table. The options are:\n\n\n   * status:enabled\n\n\n   * status:disabled\n\n\nThe default is status:disabled. After ttl is enabled, you can't disable it\nfor the table.\n\n\nFor more information, see Expiring data by using Amazon Keyspaces Time to\nLive (TTL) (https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html)\nin the Amazon Keyspaces Developer Guide."
                  properties:
                    status:
                      type: "string"
                  type: "object"
              required:
                - "keyspaceName"
                - "schemaDefinition"
                - "tableName"
              type: "object"
            status:
              description: "TableStatus defines the observed state of Table"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nTODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                conditions:
                  description: "All CRS managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                status:
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
