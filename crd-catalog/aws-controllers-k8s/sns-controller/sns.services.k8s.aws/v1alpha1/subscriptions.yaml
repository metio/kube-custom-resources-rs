apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "subscriptions.sns.services.k8s.aws"
spec:
  group: "sns.services.k8s.aws"
  names:
    kind: "Subscription"
    listKind: "SubscriptionList"
    plural: "subscriptions"
    singular: "subscription"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Subscription is the Schema for the Subscriptions API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "SubscriptionSpec defines the desired state of Subscription.\n\n\nA wrapper type for the attributes of an Amazon SNS subscription."
              properties:
                deliveryPolicy:
                  type: "string"
                endpoint:
                  description: "The endpoint that you want to receive notifications. Endpoints vary by protocol:\n\n\n   * For the http protocol, the (public) endpoint is a URL beginning with\n   http://.\n\n\n   * For the https protocol, the (public) endpoint is a URL beginning with\n   https://.\n\n\n   * For the email protocol, the endpoint is an email address.\n\n\n   * For the email-json protocol, the endpoint is an email address.\n\n\n   * For the sms protocol, the endpoint is a phone number of an SMS-enabled\n   device.\n\n\n   * For the sqs protocol, the endpoint is the ARN of an Amazon SQS queue.\n\n\n   * For the application protocol, the endpoint is the EndpointArn of a mobile\n   app and device.\n\n\n   * For the lambda protocol, the endpoint is the ARN of an Lambda function.\n\n\n   * For the firehose protocol, the endpoint is the ARN of an Amazon Kinesis\n   Data Firehose delivery stream."
                  type: "string"
                filterPolicy:
                  type: "string"
                filterPolicyScope:
                  type: "string"
                protocol:
                  description: "The protocol that you want to use. Supported protocols include:\n\n\n   * http – delivery of JSON-encoded message via HTTP POST\n\n\n   * https – delivery of JSON-encoded message via HTTPS POST\n\n\n   * email – delivery of message via SMTP\n\n\n   * email-json – delivery of JSON-encoded message via SMTP\n\n\n   * sms – delivery of message via SMS\n\n\n   * sqs – delivery of JSON-encoded message to an Amazon SQS queue\n\n\n   * application – delivery of JSON-encoded message to an EndpointArn for\n   a mobile app and device\n\n\n   * lambda – delivery of JSON-encoded message to an Lambda function\n\n\n   * firehose – delivery of JSON-encoded message to an Amazon Kinesis Data\n   Firehose delivery stream."
                  type: "string"
                rawMessageDelivery:
                  type: "string"
                redrivePolicy:
                  type: "string"
                subscriptionRoleARN:
                  type: "string"
                topicARN:
                  description: "The ARN of the topic you want to subscribe to."
                  type: "string"
                topicRef:
                  description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t  name: my-api"
                  properties:
                    from:
                      description: "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)"
                      properties:
                        name:
                          type: "string"
                        namespace:
                          type: "string"
                      type: "object"
                  type: "object"
              required:
                - "protocol"
              type: "object"
            status:
              description: "SubscriptionStatus defines the observed state of Subscription"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nTODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                conditions:
                  description: "All CRS managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                confirmationWasAuthenticated:
                  type: "string"
                effectiveDeliveryPolicy:
                  type: "string"
                owner:
                  type: "string"
                pendingConfirmation:
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
