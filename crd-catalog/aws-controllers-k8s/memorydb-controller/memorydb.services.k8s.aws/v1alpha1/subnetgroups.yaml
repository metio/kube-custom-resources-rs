apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "subnetgroups.memorydb.services.k8s.aws"
spec:
  group: "memorydb.services.k8s.aws"
  names:
    kind: "SubnetGroup"
    listKind: "SubnetGroupList"
    plural: "subnetgroups"
    singular: "subnetgroup"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "SubnetGroup is the Schema for the SubnetGroups API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "SubnetGroupSpec defines the desired state of SubnetGroup.\n\n\nRepresents the output of one of the following operations:\n\n\n   * CreateSubnetGroup\n\n\n   * UpdateSubnetGroup\n\n\nA subnet group is a collection of subnets (typically private) that you can\ndesignate for your clusters running in an Amazon Virtual Private Cloud (VPC)\nenvironment."
              properties:
                description:
                  description: "A description for the subnet group."
                  type: "string"
                name:
                  description: "The name of the subnet group."
                  type: "string"
                subnetIDs:
                  description: "A list of VPC subnet IDs for the subnet group."
                  items:
                    type: "string"
                  type: "array"
                subnetRefs:
                  items:
                    description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t  name: my-api"
                    properties:
                      from:
                        description: "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)"
                        properties:
                          name:
                            type: "string"
                          namespace:
                            type: "string"
                        type: "object"
                    type: "object"
                  type: "array"
                tags:
                  description: "A list of tags to be added to this resource. A tag is a key-value pair. A\ntag key must be accompanied by a tag value, although null is accepted."
                  items:
                    description: "A tag that can be added to an MemoryDB resource. Tags are composed of a Key/Value\npair. You can use tags to categorize and track all your MemoryDB resources.\nWhen you add or remove tags on clusters, those actions will be replicated\nto all nodes in the cluster. A tag with a null Value is permitted. For more\ninformation, see Tagging your MemoryDB resources (https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging-resources.html)"
                    properties:
                      key:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
              required:
                - "name"
              type: "object"
            status:
              description: "SubnetGroupStatus defines the observed state of SubnetGroup"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nTODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                conditions:
                  description: "All CRS managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                subnets:
                  description: "A list of subnets associated with the subnet group."
                  items:
                    description: "Represents the subnet associated with a cluster. This parameter refers to\nsubnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with\nMemoryDB."
                    properties:
                      availabilityZone:
                        description: "Indicates if the cluster has a Multi-AZ configuration (multiaz) or not (singleaz)."
                        properties:
                          name:
                            type: "string"
                        type: "object"
                      identifier:
                        type: "string"
                    type: "object"
                  type: "array"
                vpcID:
                  description: "The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
