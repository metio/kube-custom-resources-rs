apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.16.2"
  name: "eventdatastores.cloudtrail.services.k8s.aws"
spec:
  group: "cloudtrail.services.k8s.aws"
  names:
    kind: "EventDataStore"
    listKind: "EventDataStoreList"
    plural: "eventdatastores"
    singular: "eventdatastore"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "EventDataStore is the Schema for the EventDataStores API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "EventDataStoreSpec defines the desired state of EventDataStore.\n\nA storage lake of event data against which you can run complex SQL-based\nqueries. An event data store can include events that you have logged on your\naccount. To select events for an event data store, use advanced event selectors\n(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-lake-concepts.html#adv-event-selectors)."
              properties:
                advancedEventSelectors:
                  description: "The advanced event selectors to use to select the events for the data store.\nYou can configure up to five advanced event selectors for each event data\nstore.\n\nFor more information about how to use advanced event selectors to log CloudTrail\nevents, see Log events by using advanced event selectors (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced)\nin the CloudTrail User Guide.\n\nFor more information about how to use advanced event selectors to include\nConfig configuration items in your event data store, see Create an event\ndata store for Config configuration items (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/lake-eds-cli.html#lake-cli-create-eds-config)\nin the CloudTrail User Guide.\n\nFor more information about how to use advanced event selectors to include\nevents outside of Amazon Web Services events in your event data store, see\nCreate an integration to log events from outside Amazon Web Services (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/lake-integrations-cli.html#lake-cli-create-integration)\nin the CloudTrail User Guide."
                  items:
                    description: "Advanced event selectors let you create fine-grained selectors for CloudTrail\nmanagement, data, and network activity events. They help you control costs\nby logging only those events that are important to you. For more information\nabout configuring advanced event selectors, see the Logging data events (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html),\nLogging network activity events (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-network-events-with-cloudtrail.html),\nand Logging management events (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-events-with-cloudtrail.html)\ntopics in the CloudTrail User Guide.\n\nYou cannot apply both event selectors and advanced event selectors to a trail.\n\nSupported CloudTrail event record fields for management events\n\n   * eventCategory (required)\n\n   * eventSource\n\n   * readOnly\n\nThe following additional fields are available for event data stores:\n\n   * eventName\n\n   * eventType\n\n   * sessionCredentialFromConsole\n\n   * userIdentity.arn\n\nSupported CloudTrail event record fields for data events\n\n   * eventCategory (required)\n\n   * resources.type (required)\n\n   * readOnly\n\n   * eventName\n\n   * resources.ARN\n\nThe following additional fields are available for event data stores:\n\n   * eventSource\n\n   * eventType\n\n   * sessionCredentialFromConsole\n\n   * userIdentity.arn\n\nSupported CloudTrail event record fields for network activity events\n\nNetwork activity events is in preview release for CloudTrail and is subject\nto change.\n\n   * eventCategory (required)\n\n   * eventSource (required)\n\n   * eventName\n\n   * errorCode - The only valid value for errorCode is VpceAccessDenied.\n\n   * vpcEndpointId\n\nFor event data stores for CloudTrail Insights events, Config configuration\nitems, Audit Manager evidence, or events outside of Amazon Web Services,\nthe only supported field is eventCategory."
                    properties:
                      fieldSelectors:
                        items:
                          description: "A single selector statement in an advanced event selector."
                          properties:
                            endsWith:
                              items:
                                type: "string"
                              type: "array"
                            equals:
                              items:
                                type: "string"
                              type: "array"
                            field:
                              type: "string"
                            notEndsWith:
                              items:
                                type: "string"
                              type: "array"
                            notEquals:
                              items:
                                type: "string"
                              type: "array"
                            notStartsWith:
                              items:
                                type: "string"
                              type: "array"
                            startsWith:
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        type: "array"
                      name:
                        type: "string"
                    type: "object"
                  type: "array"
                multiRegionEnabled:
                  description: "Specifies whether the event data store includes events from all Regions,\nor only from the Region in which the event data store is created."
                  type: "boolean"
                name:
                  description: "The name of the event data store."
                  type: "string"
                organizationEnabled:
                  description: "Specifies whether an event data store collects events logged for an organization\nin Organizations."
                  type: "boolean"
                retentionPeriod:
                  description: "The retention period of the event data store, in days. If BillingMode is\nset to EXTENDABLE_RETENTION_PRICING, you can set a retention period of up\nto 3653 days, the equivalent of 10 years. If BillingMode is set to FIXED_RETENTION_PRICING,\nyou can set a retention period of up to 2557 days, the equivalent of seven\nyears.\n\nCloudTrail Lake determines whether to retain an event by checking if the\neventTime of the event is within the specified retention period. For example,\nif you set a retention period of 90 days, CloudTrail will remove events when\nthe eventTime is older than 90 days.\n\nIf you plan to copy trail events to this event data store, we recommend that\nyou consider both the age of the events that you want to copy as well as\nhow long you want to keep the copied events in your event data store. For\nexample, if you copy trail events that are 5 years old and specify a retention\nperiod of 7 years, the event data store will retain those events for two\nyears."
                  format: "int64"
                  type: "integer"
                tags:
                  items:
                    description: "A custom key-value pair associated with a resource such as a CloudTrail trail,\nevent data store, dashboard, or channel."
                    properties:
                      key:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                terminationProtectionEnabled:
                  description: "Specifies whether termination protection is enabled for the event data store.\nIf termination protection is enabled, you cannot delete the event data store\nuntil termination protection is disabled."
                  type: "boolean"
              required:
                - "name"
              type: "object"
            status:
              description: "EventDataStoreStatus defines the observed state of EventDataStore"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                conditions:
                  description: "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                createdTimestamp:
                  description: "The timestamp that shows when the event data store was created."
                  format: "date-time"
                  type: "string"
                status:
                  description: "The status of event data store creation."
                  type: "string"
                updatedTimestamp:
                  description: "The timestamp that shows when an event data store was updated, if applicable.\nUpdatedTimestamp is always either the same or newer than the time shown in\nCreatedTimestamp."
                  format: "date-time"
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
