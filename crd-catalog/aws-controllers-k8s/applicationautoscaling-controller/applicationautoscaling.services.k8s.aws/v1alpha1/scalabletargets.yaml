apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "scalabletargets.applicationautoscaling.services.k8s.aws"
spec:
  group: "applicationautoscaling.services.k8s.aws"
  names:
    kind: "ScalableTarget"
    listKind: "ScalableTargetList"
    plural: "scalabletargets"
    singular: "scalabletarget"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "ScalableTarget is the Schema for the ScalableTargets API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "ScalableTargetSpec defines the desired state of ScalableTarget.\n\n\nRepresents a scalable target."
              properties:
                maxCapacity:
                  description: "The maximum value that you plan to scale out to. When a scaling policy is\nin effect, Application Auto Scaling can scale out (expand) as needed to the\nmaximum capacity limit in response to changing demand. This property is required\nwhen registering a new scalable target.\n\n\nAlthough you can specify a large maximum capacity, note that service quotas\nmay impose lower limits. Each service has its own default quotas for the\nmaximum capacity of the resource. If you want to specify a higher limit,\nyou can request an increase. For more information, consult the documentation\nfor that service. For information about the default quotas for each service,\nsee Service Endpoints and Quotas (https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html)\nin the Amazon Web Services General Reference."
                  format: "int64"
                  type: "integer"
                minCapacity:
                  description: "The minimum value that you plan to scale in to. When a scaling policy is\nin effect, Application Auto Scaling can scale in (contract) as needed to\nthe minimum capacity limit in response to changing demand. This property\nis required when registering a new scalable target.\n\n\nFor certain resources, the minimum value allowed is 0. This includes Lambda\nprovisioned concurrency, Spot Fleet, ECS services, Aurora DB clusters, EMR\nclusters, and custom resources. For all other resources, the minimum value\nallowed is 1."
                  format: "int64"
                  type: "integer"
                resourceID:
                  description: "The identifier of the resource that is associated with the scalable target.\nThis string consists of the resource type and unique identifier.\n\n\n   * ECS service - The resource type is service and the unique identifier\n   is the cluster name and service name. Example: service/default/sample-webapp.\n\n\n   * Spot Fleet - The resource type is spot-fleet-request and the unique\n   identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.\n\n\n   * EMR cluster - The resource type is instancegroup and the unique identifier\n   is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.\n\n\n   * AppStream 2.0 fleet - The resource type is fleet and the unique identifier\n   is the fleet name. Example: fleet/sample-fleet.\n\n\n   * DynamoDB table - The resource type is table and the unique identifier\n   is the table name. Example: table/my-table.\n\n\n   * DynamoDB global secondary index - The resource type is index and the\n   unique identifier is the index name. Example: table/my-table/index/my-table-index.\n\n\n   * Aurora DB cluster - The resource type is cluster and the unique identifier\n   is the cluster name. Example: cluster:my-db-cluster.\n\n\n   * SageMaker endpoint variant - The resource type is variant and the unique\n   identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.\n\n\n   * Custom resources are not supported with a resource type. This parameter\n   must specify the OutputValue from the CloudFormation template stack used\n   to access the resources. The unique identifier is defined by the service\n   provider. More information is available in our GitHub repository (https://github.com/aws/aws-auto-scaling-custom-resource).\n\n\n   * Amazon Comprehend document classification endpoint - The resource type\n   and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.\n\n\n   * Amazon Comprehend entity recognizer endpoint - The resource type and\n   unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.\n\n\n   * Lambda provisioned concurrency - The resource type is function and the\n   unique identifier is the function name with a function version or alias\n   name suffix that is not $LATEST. Example: function:my-function:prod or\n   function:my-function:1.\n\n\n   * Amazon Keyspaces table - The resource type is table and the unique identifier\n   is the table name. Example: keyspace/mykeyspace/table/mytable.\n\n\n   * Amazon MSK cluster - The resource type and unique identifier are specified\n   using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.\n\n\n   * Amazon ElastiCache replication group - The resource type is replication-group\n   and the unique identifier is the replication group name. Example: replication-group/mycluster.\n\n\n   * Neptune cluster - The resource type is cluster and the unique identifier\n   is the cluster name. Example: cluster:mycluster."
                  type: "string"
                roleARN:
                  description: "This parameter is required for services that do not support service-linked\nroles (such as Amazon EMR), and it must specify the ARN of an IAM role that\nallows Application Auto Scaling to modify the scalable target on your behalf.\n\n\nIf the service supports service-linked roles, Application Auto Scaling uses\na service-linked role, which it creates if it does not yet exist. For more\ninformation, see Application Auto Scaling IAM roles (https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles)."
                  type: "string"
                scalableDimension:
                  description: "The scalable dimension associated with the scalable target. This string consists\nof the service namespace, resource type, and scaling property.\n\n\n   * ecs:service:DesiredCount - The desired task count of an ECS service.\n\n\n   * elasticmapreduce:instancegroup:InstanceCount - The instance count of\n   an EMR Instance Group.\n\n\n   * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot\n   Fleet.\n\n\n   * appstream:fleet:DesiredCapacity - The desired capacity of an AppStream\n   2.0 fleet.\n\n\n   * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for\n   a DynamoDB table.\n\n\n   * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for\n   a DynamoDB table.\n\n\n   * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for\n   a DynamoDB global secondary index.\n\n\n   * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for\n   a DynamoDB global secondary index.\n\n\n   * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora\n   DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible\n   edition.\n\n\n   * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances\n   for an SageMaker model endpoint variant.\n\n\n   * custom-resource:ResourceType:Property - The scalable dimension for a\n   custom resource provided by your own application or service.\n\n\n   * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The\n   number of inference units for an Amazon Comprehend document classification\n   endpoint.\n\n\n   * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number\n   of inference units for an Amazon Comprehend entity recognizer endpoint.\n\n\n   * lambda:function:ProvisionedConcurrency - The provisioned concurrency\n   for a Lambda function.\n\n\n   * cassandra:table:ReadCapacityUnits - The provisioned read capacity for\n   an Amazon Keyspaces table.\n\n\n   * cassandra:table:WriteCapacityUnits - The provisioned write capacity\n   for an Amazon Keyspaces table.\n\n\n   * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB)\n   for brokers in an Amazon MSK cluster.\n\n\n   * elasticache:replication-group:NodeGroups - The number of node groups\n   for an Amazon ElastiCache replication group.\n\n\n   * elasticache:replication-group:Replicas - The number of replicas per\n   node group for an Amazon ElastiCache replication group.\n\n\n   * neptune:cluster:ReadReplicaCount - The count of read replicas in an\n   Amazon Neptune DB cluster."
                  type: "string"
                serviceNamespace:
                  description: "The namespace of the Amazon Web Services service that provides the resource.\nFor a resource provided by your own application or service, use custom-resource\ninstead."
                  type: "string"
                suspendedState:
                  description: "An embedded object that contains attributes and attribute values that are\nused to suspend and resume automatic scaling. Setting the value of an attribute\nto true suspends the specified scaling activities. Setting it to false (default)\nresumes the specified scaling activities.\n\n\nSuspension Outcomes\n\n\n   * For DynamicScalingInSuspended, while a suspension is in effect, all\n   scale-in activities that are triggered by a scaling policy are suspended.\n\n\n   * For DynamicScalingOutSuspended, while a suspension is in effect, all\n   scale-out activities that are triggered by a scaling policy are suspended.\n\n\n   * For ScheduledScalingSuspended, while a suspension is in effect, all\n   scaling activities that involve scheduled actions are suspended.\n\n\nFor more information, see Suspending and resuming scaling (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html)\nin the Application Auto Scaling User Guide."
                  properties:
                    dynamicScalingInSuspended:
                      type: "boolean"
                    dynamicScalingOutSuspended:
                      type: "boolean"
                    scheduledScalingSuspended:
                      type: "boolean"
                  type: "object"
              required:
                - "resourceID"
                - "scalableDimension"
                - "serviceNamespace"
              type: "object"
            status:
              description: "ScalableTargetStatus defines the observed state of ScalableTarget"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nTODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                conditions:
                  description: "All CRS managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                creationTime:
                  description: "The Unix timestamp for when the scalable target was created."
                  format: "date-time"
                  type: "string"
                lastModifiedTime:
                  description: "The Unix timestamp for when the scalable target was created."
                  format: "date-time"
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
