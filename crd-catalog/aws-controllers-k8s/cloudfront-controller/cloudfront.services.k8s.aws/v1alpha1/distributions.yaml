apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "distributions.cloudfront.services.k8s.aws"
spec:
  group: "cloudfront.services.k8s.aws"
  names:
    kind: "Distribution"
    listKind: "DistributionList"
    plural: "distributions"
    singular: "distribution"
  scope: "Namespaced"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "Distribution is the Schema for the Distributions API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "DistributionSpec defines the desired state of Distribution.\n\n\nA distribution tells CloudFront where you want content to be delivered from,\nand the details about how to track and manage content delivery."
              properties:
                distributionConfig:
                  description: "The distribution's configuration information."
                  properties:
                    aliases:
                      description: "A complex type that contains information about CNAMEs (alternate domain names),\nif any, for this distribution."
                      properties:
                        items:
                          items:
                            type: "string"
                          type: "array"
                      type: "object"
                    cacheBehaviors:
                      description: "A complex type that contains zero or more CacheBehavior elements."
                      properties:
                        items:
                          items:
                            description: "A complex type that describes how CloudFront processes requests.\n\n\nYou must create at least as many cache behaviors (including the default cache\nbehavior) as you have origins if you want CloudFront to serve objects from\nall of the origins. Each cache behavior specifies the one origin from which\nyou want CloudFront to get objects. If you have two origins and only the\ndefault cache behavior, the default cache behavior will cause CloudFront\nto get objects from one of the origins, but the other origin is never used.\n\n\nFor the current quota (formerly known as limit) on the number of cache behaviors\nthat you can add to a distribution, see Quotas (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html)\nin the Amazon CloudFront Developer Guide.\n\n\nIf you don't want to specify any cache behaviors, include only an empty CacheBehaviors\nelement. Don't include an empty CacheBehavior element because this is invalid.\n\n\nTo delete all cache behaviors in an existing distribution, update the distribution\nconfiguration and include only an empty CacheBehaviors element.\n\n\nTo add, change, or remove one or more cache behaviors, update the distribution\nconfiguration and specify all of the cache behaviors that you want to include\nin the updated distribution.\n\n\nFor more information about cache behaviors, see Cache Behavior Settings (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior)\nin the Amazon CloudFront Developer Guide."
                            properties:
                              allowedMethods:
                                description: "A complex type that controls which HTTP methods CloudFront processes and\nforwards to your Amazon S3 bucket or your custom origin. There are three\nchoices:\n\n\n   * CloudFront forwards only GET and HEAD requests.\n\n\n   * CloudFront forwards only GET, HEAD, and OPTIONS requests.\n\n\n   * CloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST, and DELETE\n   requests.\n\n\nIf you pick the third choice, you may need to restrict access to your Amazon\nS3 bucket or to your custom origin so users can't perform operations that\nyou don't want them to. For example, you might not want users to have permissions\nto delete objects from your origin."
                                properties:
                                  cachedMethods:
                                    description: "A complex type that controls whether CloudFront caches the response to requests\nusing the specified HTTP methods. There are two choices:\n\n\n   * CloudFront caches responses to GET and HEAD requests.\n\n\n   * CloudFront caches responses to GET, HEAD, and OPTIONS requests.\n\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to\nforward Access-Control-Request-Method, Access-Control-Request-Headers, and\nOrigin headers for the responses to be cached correctly."
                                    properties:
                                      items:
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  items:
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              cachePolicyID:
                                type: "string"
                              compress:
                                type: "boolean"
                              defaultTTL:
                                format: "int64"
                                type: "integer"
                              fieldLevelEncryptionID:
                                type: "string"
                              forwardedValues:
                                description: "This field is deprecated. We recommend that you use a cache policy or an\norigin request policy instead of this field.\n\n\nIf you want to include values in the cache key, use a cache policy. For more\ninformation, see Creating cache policies (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)\nin the Amazon CloudFront Developer Guide.\n\n\nIf you want to send values to the origin but not include them in the cache\nkey, use an origin request policy. For more information, see Creating origin\nrequest policies (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)\nin the Amazon CloudFront Developer Guide.\n\n\nA complex type that specifies how CloudFront handles query strings, cookies,\nand HTTP headers."
                                properties:
                                  cookies:
                                    description: "This field is deprecated. We recommend that you use a cache policy or an\norigin request policy instead of this field.\n\n\nIf you want to include cookies in the cache key, use CookiesConfig in a cache\npolicy. See CachePolicy.\n\n\nIf you want to send cookies to the origin but not include them in the cache\nkey, use CookiesConfig in an origin request policy. See OriginRequestPolicy.\n\n\nA complex type that specifies whether you want CloudFront to forward cookies\nto the origin and, if so, which ones. For more information about forwarding\ncookies to the origin, see Caching Content Based on Cookies (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html)\nin the Amazon CloudFront Developer Guide."
                                    properties:
                                      forward:
                                        type: "string"
                                      whitelistedNames:
                                        description: "Contains a list of cookie names."
                                        properties:
                                          items:
                                            items:
                                              type: "string"
                                            type: "array"
                                        type: "object"
                                    type: "object"
                                  headers:
                                    description: "Contains a list of HTTP header names."
                                    properties:
                                      items:
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  queryString:
                                    type: "boolean"
                                  queryStringCacheKeys:
                                    description: "This field is deprecated. We recommend that you use a cache policy or an\norigin request policy instead of this field.\n\n\nIf you want to include query strings in the cache key, use QueryStringsConfig\nin a cache policy. See CachePolicy.\n\n\nIf you want to send query strings to the origin but not include them in the\ncache key, use QueryStringsConfig in an origin request policy. See OriginRequestPolicy.\n\n\nA complex type that contains information about the query string parameters\nthat you want CloudFront to use for caching for a cache behavior."
                                    properties:
                                      items:
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                type: "object"
                              functionAssociations:
                                description: "A list of CloudFront functions that are associated with a cache behavior\nin a CloudFront distribution. CloudFront functions must be published to the\nLIVE stage to associate them with a cache behavior."
                                properties:
                                  items:
                                    items:
                                      description: "A CloudFront function that is associated with a cache behavior in a CloudFront\ndistribution."
                                      properties:
                                        eventType:
                                          type: "string"
                                        functionARN:
                                          type: "string"
                                      type: "object"
                                    type: "array"
                                type: "object"
                              lambdaFunctionAssociations:
                                description: "A complex type that specifies a list of Lambda@Edge functions associations\nfor a cache behavior.\n\n\nIf you want to invoke one or more Lambda@Edge functions triggered by requests\nthat match the PathPattern of the cache behavior, specify the applicable\nvalues for Quantity and Items. Note that there can be up to 4 LambdaFunctionAssociation\nitems in this list (one for each possible value of EventType) and each EventType\ncan be associated with only one function.\n\n\nIf you don't want to invoke any Lambda@Edge functions for the requests that\nmatch PathPattern, specify 0 for Quantity and omit Items."
                                properties:
                                  items:
                                    items:
                                      description: "A complex type that contains a Lambda@Edge function association."
                                      properties:
                                        eventType:
                                          type: "string"
                                        includeBody:
                                          type: "boolean"
                                        lambdaFunctionARN:
                                          type: "string"
                                      type: "object"
                                    type: "array"
                                type: "object"
                              maxTTL:
                                format: "int64"
                                type: "integer"
                              minTTL:
                                format: "int64"
                                type: "integer"
                              originRequestPolicyID:
                                type: "string"
                              pathPattern:
                                type: "string"
                              realtimeLogConfigARN:
                                type: "string"
                              responseHeadersPolicyID:
                                type: "string"
                              smoothStreaming:
                                type: "boolean"
                              targetOriginID:
                                type: "string"
                              trustedKeyGroups:
                                description: "A list of key groups whose public keys CloudFront can use to verify the signatures\nof signed URLs and signed cookies."
                                properties:
                                  enabled:
                                    type: "boolean"
                                  items:
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              trustedSigners:
                                description: "A list of Amazon Web Services accounts whose public keys CloudFront can use\nto verify the signatures of signed URLs and signed cookies."
                                properties:
                                  enabled:
                                    type: "boolean"
                                  items:
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              viewerProtocolPolicy:
                                type: "string"
                            type: "object"
                          type: "array"
                      type: "object"
                    comment:
                      type: "string"
                    continuousDeploymentPolicyID:
                      type: "string"
                    customErrorResponses:
                      description: "A complex type that controls:\n\n\n   * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range\n   with custom error messages before returning the response to the viewer.\n\n\n   * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\n\nFor more information about custom error pages, see Customizing Error Responses\n(https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html)\nin the Amazon CloudFront Developer Guide."
                      properties:
                        items:
                          items:
                            description: "A complex type that controls:\n\n\n   * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range\n   with custom error messages before returning the response to the viewer.\n\n\n   * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\n\nFor more information about custom error pages, see Customizing Error Responses\n(https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html)\nin the Amazon CloudFront Developer Guide."
                            properties:
                              errorCachingMinTTL:
                                format: "int64"
                                type: "integer"
                              errorCode:
                                format: "int64"
                                type: "integer"
                              responseCode:
                                type: "string"
                              responsePagePath:
                                type: "string"
                            type: "object"
                          type: "array"
                      type: "object"
                    defaultCacheBehavior:
                      description: "A complex type that describes the default cache behavior if you don't specify\na CacheBehavior element or if request URLs don't match any of the values\nof PathPattern in CacheBehavior elements. You must create exactly one default\ncache behavior."
                      properties:
                        allowedMethods:
                          description: "A complex type that controls which HTTP methods CloudFront processes and\nforwards to your Amazon S3 bucket or your custom origin. There are three\nchoices:\n\n\n   * CloudFront forwards only GET and HEAD requests.\n\n\n   * CloudFront forwards only GET, HEAD, and OPTIONS requests.\n\n\n   * CloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST, and DELETE\n   requests.\n\n\nIf you pick the third choice, you may need to restrict access to your Amazon\nS3 bucket or to your custom origin so users can't perform operations that\nyou don't want them to. For example, you might not want users to have permissions\nto delete objects from your origin."
                          properties:
                            cachedMethods:
                              description: "A complex type that controls whether CloudFront caches the response to requests\nusing the specified HTTP methods. There are two choices:\n\n\n   * CloudFront caches responses to GET and HEAD requests.\n\n\n   * CloudFront caches responses to GET, HEAD, and OPTIONS requests.\n\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to\nforward Access-Control-Request-Method, Access-Control-Request-Headers, and\nOrigin headers for the responses to be cached correctly."
                              properties:
                                items:
                                  items:
                                    type: "string"
                                  type: "array"
                              type: "object"
                            items:
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        cachePolicyID:
                          type: "string"
                        compress:
                          type: "boolean"
                        defaultTTL:
                          format: "int64"
                          type: "integer"
                        fieldLevelEncryptionID:
                          type: "string"
                        forwardedValues:
                          description: "This field is deprecated. We recommend that you use a cache policy or an\norigin request policy instead of this field.\n\n\nIf you want to include values in the cache key, use a cache policy. For more\ninformation, see Creating cache policies (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)\nin the Amazon CloudFront Developer Guide.\n\n\nIf you want to send values to the origin but not include them in the cache\nkey, use an origin request policy. For more information, see Creating origin\nrequest policies (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)\nin the Amazon CloudFront Developer Guide.\n\n\nA complex type that specifies how CloudFront handles query strings, cookies,\nand HTTP headers."
                          properties:
                            cookies:
                              description: "This field is deprecated. We recommend that you use a cache policy or an\norigin request policy instead of this field.\n\n\nIf you want to include cookies in the cache key, use CookiesConfig in a cache\npolicy. See CachePolicy.\n\n\nIf you want to send cookies to the origin but not include them in the cache\nkey, use CookiesConfig in an origin request policy. See OriginRequestPolicy.\n\n\nA complex type that specifies whether you want CloudFront to forward cookies\nto the origin and, if so, which ones. For more information about forwarding\ncookies to the origin, see Caching Content Based on Cookies (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html)\nin the Amazon CloudFront Developer Guide."
                              properties:
                                forward:
                                  type: "string"
                                whitelistedNames:
                                  description: "Contains a list of cookie names."
                                  properties:
                                    items:
                                      items:
                                        type: "string"
                                      type: "array"
                                  type: "object"
                              type: "object"
                            headers:
                              description: "Contains a list of HTTP header names."
                              properties:
                                items:
                                  items:
                                    type: "string"
                                  type: "array"
                              type: "object"
                            queryString:
                              type: "boolean"
                            queryStringCacheKeys:
                              description: "This field is deprecated. We recommend that you use a cache policy or an\norigin request policy instead of this field.\n\n\nIf you want to include query strings in the cache key, use QueryStringsConfig\nin a cache policy. See CachePolicy.\n\n\nIf you want to send query strings to the origin but not include them in the\ncache key, use QueryStringsConfig in an origin request policy. See OriginRequestPolicy.\n\n\nA complex type that contains information about the query string parameters\nthat you want CloudFront to use for caching for a cache behavior."
                              properties:
                                items:
                                  items:
                                    type: "string"
                                  type: "array"
                              type: "object"
                          type: "object"
                        functionAssociations:
                          description: "A list of CloudFront functions that are associated with a cache behavior\nin a CloudFront distribution. CloudFront functions must be published to the\nLIVE stage to associate them with a cache behavior."
                          properties:
                            items:
                              items:
                                description: "A CloudFront function that is associated with a cache behavior in a CloudFront\ndistribution."
                                properties:
                                  eventType:
                                    type: "string"
                                  functionARN:
                                    type: "string"
                                type: "object"
                              type: "array"
                          type: "object"
                        lambdaFunctionAssociations:
                          description: "A complex type that specifies a list of Lambda@Edge functions associations\nfor a cache behavior.\n\n\nIf you want to invoke one or more Lambda@Edge functions triggered by requests\nthat match the PathPattern of the cache behavior, specify the applicable\nvalues for Quantity and Items. Note that there can be up to 4 LambdaFunctionAssociation\nitems in this list (one for each possible value of EventType) and each EventType\ncan be associated with only one function.\n\n\nIf you don't want to invoke any Lambda@Edge functions for the requests that\nmatch PathPattern, specify 0 for Quantity and omit Items."
                          properties:
                            items:
                              items:
                                description: "A complex type that contains a Lambda@Edge function association."
                                properties:
                                  eventType:
                                    type: "string"
                                  includeBody:
                                    type: "boolean"
                                  lambdaFunctionARN:
                                    type: "string"
                                type: "object"
                              type: "array"
                          type: "object"
                        maxTTL:
                          format: "int64"
                          type: "integer"
                        minTTL:
                          format: "int64"
                          type: "integer"
                        originRequestPolicyID:
                          type: "string"
                        realtimeLogConfigARN:
                          type: "string"
                        responseHeadersPolicyID:
                          type: "string"
                        smoothStreaming:
                          type: "boolean"
                        targetOriginID:
                          type: "string"
                        trustedKeyGroups:
                          description: "A list of key groups whose public keys CloudFront can use to verify the signatures\nof signed URLs and signed cookies."
                          properties:
                            enabled:
                              type: "boolean"
                            items:
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        trustedSigners:
                          description: "A list of Amazon Web Services accounts whose public keys CloudFront can use\nto verify the signatures of signed URLs and signed cookies."
                          properties:
                            enabled:
                              type: "boolean"
                            items:
                              items:
                                type: "string"
                              type: "array"
                          type: "object"
                        viewerProtocolPolicy:
                          type: "string"
                      type: "object"
                    defaultRootObject:
                      type: "string"
                    enabled:
                      type: "boolean"
                    httpVersion:
                      type: "string"
                    isIPV6Enabled:
                      type: "boolean"
                    logging:
                      description: "A complex type that controls whether access logs are written for the distribution."
                      properties:
                        bucket:
                          type: "string"
                        enabled:
                          type: "boolean"
                        includeCookies:
                          type: "boolean"
                        prefix:
                          type: "string"
                      type: "object"
                    originGroups:
                      description: "A complex data type for the origin groups specified for a distribution."
                      properties:
                        items:
                          description: "List of origin groups for a distribution."
                          items:
                            description: "An origin group includes two origins (a primary origin and a second origin\nto failover to) and a failover criteria that you specify. You create an origin\ngroup to support origin failover in CloudFront. When you create or update\na distribution, you can specifiy the origin group instead of a single origin,\nand CloudFront will failover from the primary origin to the second origin\nunder the failover conditions that you've chosen."
                            properties:
                              failoverCriteria:
                                description: "A complex data type that includes information about the failover criteria\nfor an origin group, including the status codes for which CloudFront will\nfailover from the primary origin to the second origin."
                                properties:
                                  statusCodes:
                                    description: "A complex data type for the status codes that you specify that, when returned\nby a primary origin, trigger CloudFront to failover to a second origin."
                                    properties:
                                      items:
                                        description: "List of status codes for origin failover."
                                        items:
                                          format: "int64"
                                          type: "integer"
                                        type: "array"
                                    type: "object"
                                type: "object"
                              id:
                                type: "string"
                              members:
                                description: "A complex data type for the origins included in an origin group."
                                properties:
                                  items:
                                    description: "List of origins in an origin group."
                                    items:
                                      description: "An origin in an origin group."
                                      properties:
                                        originID:
                                          type: "string"
                                      type: "object"
                                    type: "array"
                                type: "object"
                            type: "object"
                          type: "array"
                      type: "object"
                    origins:
                      description: "Contains information about the origins for this distribution."
                      properties:
                        items:
                          items:
                            description: "An origin.\n\n\nAn origin is the location where content is stored, and from which CloudFront\ngets content to serve to viewers. To specify an origin:\n\n\n   * Use S3OriginConfig to specify an Amazon S3 bucket that is not configured\n   with static website hosting.\n\n\n   * Use CustomOriginConfig to specify all other kinds of origins, including:\n   An Amazon S3 bucket that is configured with static website hosting An\n   Elastic Load Balancing load balancer An AWS Elemental MediaPackage endpoint\n   An AWS Elemental MediaStore container Any other HTTP server, running on\n   an Amazon EC2 instance or any other kind of host\n\n\nFor the current maximum number of origins that you can specify per distribution,\nsee General Quotas on Web Distributions (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions)\nin the Amazon CloudFront Developer Guide (quotas were formerly referred to\nas limits)."
                            properties:
                              connectionAttempts:
                                format: "int64"
                                type: "integer"
                              connectionTimeout:
                                format: "int64"
                                type: "integer"
                              customHeaders:
                                description: "A complex type that contains the list of Custom Headers for each origin."
                                properties:
                                  items:
                                    items:
                                      description: "A complex type that contains HeaderName and HeaderValue elements, if any,\nfor this distribution."
                                      properties:
                                        headerName:
                                          type: "string"
                                        headerValue:
                                          type: "string"
                                      type: "object"
                                    type: "array"
                                type: "object"
                              customOriginConfig:
                                description: "A custom origin. A custom origin is any origin that is not an Amazon S3 bucket,\nwith one exception. An Amazon S3 bucket that is configured with static website\nhosting (https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html)\nis a custom origin."
                                properties:
                                  httpPort:
                                    format: "int64"
                                    type: "integer"
                                  httpSPort:
                                    format: "int64"
                                    type: "integer"
                                  originKeepaliveTimeout:
                                    format: "int64"
                                    type: "integer"
                                  originProtocolPolicy:
                                    type: "string"
                                  originReadTimeout:
                                    format: "int64"
                                    type: "integer"
                                  originSSLProtocols:
                                    description: "A complex type that contains information about the SSL/TLS protocols that\nCloudFront can use when establishing an HTTPS connection with your origin."
                                    properties:
                                      items:
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                type: "object"
                              domainName:
                                type: "string"
                              id:
                                type: "string"
                              originAccessControlID:
                                type: "string"
                              originPath:
                                type: "string"
                              originShield:
                                description: "CloudFront Origin Shield.\n\n\nUsing Origin Shield can help reduce the load on your origin. For more information,\nsee Using Origin Shield (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html)\nin the Amazon CloudFront Developer Guide."
                                properties:
                                  enabled:
                                    type: "boolean"
                                  originShieldRegion:
                                    type: "string"
                                type: "object"
                              s3OriginConfig:
                                description: "A complex type that contains information about the Amazon S3 origin. If the\norigin is a custom origin or an S3 bucket that is configured as a website\nendpoint, use the CustomOriginConfig element instead."
                                properties:
                                  originAccessIdentity:
                                    type: "string"
                                type: "object"
                            type: "object"
                          type: "array"
                      type: "object"
                    priceClass:
                      type: "string"
                    restrictions:
                      description: "A complex type that identifies ways in which you want to restrict distribution\nof your content."
                      properties:
                        geoRestriction:
                          description: "A complex type that controls the countries in which your content is distributed.\nCloudFront determines the location of your users using MaxMind GeoIP databases."
                          properties:
                            items:
                              items:
                                type: "string"
                              type: "array"
                            restrictionType:
                              type: "string"
                          type: "object"
                      type: "object"
                    staging:
                      type: "boolean"
                    viewerCertificate:
                      description: "A complex type that determines the distribution's SSL/TLS configuration for\ncommunicating with viewers.\n\n\nIf the distribution doesn't use Aliases (also known as alternate domain names\nor CNAMEs)—that is, if the distribution uses the CloudFront domain name\nsuch as d111111abcdef8.cloudfront.net—set CloudFrontDefaultCertificate\nto true and leave all other fields empty.\n\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), use\nthe fields in this type to specify the following settings:\n\n\n   * Which viewers the distribution accepts HTTPS connections from: only\n   viewers that support server name indication (SNI) (https://en.wikipedia.org/wiki/Server_Name_Indication)\n   (recommended), or all viewers including those that don't support SNI.\n   To accept HTTPS connections from only viewers that support SNI, set SSLSupportMethod\n   to sni-only. This is recommended. Most browsers and clients support SNI.\n   To accept HTTPS connections from all viewers, including those that don't\n   support SNI, set SSLSupportMethod to vip. This is not recommended, and\n   results in additional monthly charges from CloudFront.\n\n\n   * The minimum SSL/TLS protocol version that the distribution can use to\n   communicate with viewers. To specify a minimum version, choose a value\n   for MinimumProtocolVersion. For more information, see Security Policy\n   (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)\n   in the Amazon CloudFront Developer Guide.\n\n\n   * The location of the SSL/TLS certificate, Certificate Manager (ACM) (https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html)\n   (recommended) or Identity and Access Management (IAM) (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html).\n   You specify the location by setting a value in one of the following fields\n   (not both): ACMCertificateArn IAMCertificateId\n\n\nAll distributions support HTTPS connections from viewers. To require viewers\nto use HTTPS only, or to redirect them from HTTP to HTTPS, use ViewerProtocolPolicy\nin the CacheBehavior or DefaultCacheBehavior. To specify how CloudFront should\nuse SSL/TLS to communicate with your custom origin, use CustomOriginConfig.\n\n\nFor more information, see Using HTTPS with CloudFront (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html)\nand Using Alternate Domain Names and HTTPS (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html)\nin the Amazon CloudFront Developer Guide."
                      properties:
                        acmCertificateARN:
                          type: "string"
                        acmCertificateRef:
                          description: "Reference field for ACMCertificateARN"
                          properties:
                            from:
                              description: "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)"
                              properties:
                                name:
                                  type: "string"
                                namespace:
                                  type: "string"
                              type: "object"
                          type: "object"
                        certificate:
                          type: "string"
                        certificateSource:
                          type: "string"
                        cloudFrontDefaultCertificate:
                          type: "boolean"
                        iamCertificateID:
                          type: "string"
                        minimumProtocolVersion:
                          type: "string"
                        sslSupportMethod:
                          type: "string"
                      type: "object"
                    webACLID:
                      type: "string"
                  type: "object"
              required:
                - "distributionConfig"
              type: "object"
            status:
              description: "DistributionStatus defines the observed state of Distribution"
              properties:
                ackResourceMetadata:
                  description: "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource"
                  properties:
                    arn:
                      description: "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nTODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse\nhttps://github.com/aws/aws-controllers-k8s/issues/270"
                      type: "string"
                    ownerAccountID:
                      description: "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource."
                      type: "string"
                    region:
                      description: "Region is the AWS region in which the resource exists or will exist."
                      type: "string"
                  required:
                    - "ownerAccountID"
                    - "region"
                  type: "object"
                activeTrustedKeyGroups:
                  description: "This field contains a list of key groups and the public keys in each key\ngroup that CloudFront can use to verify the signatures of signed URLs or\nsigned cookies."
                  properties:
                    enabled:
                      type: "boolean"
                    items:
                      items:
                        description: "A list of identifiers for the public keys that CloudFront can use to verify\nthe signatures of signed URLs and signed cookies."
                        properties:
                          keyGroupID:
                            type: "string"
                          keyPairIDs:
                            description: "A list of CloudFront key pair identifiers."
                            properties:
                              items:
                                items:
                                  type: "string"
                                type: "array"
                              quantity:
                                format: "int64"
                                type: "integer"
                            type: "object"
                        type: "object"
                      type: "array"
                  type: "object"
                activeTrustedSigners:
                  description: "We recommend using TrustedKeyGroups instead of TrustedSigners.\n\n\nThis field contains a list of Amazon Web Services account IDs and the active\nCloudFront key pairs in each account that CloudFront can use to verify the\nsignatures of signed URLs or signed cookies."
                  properties:
                    enabled:
                      type: "boolean"
                    items:
                      items:
                        description: "A list of Amazon Web Services accounts and the active CloudFront key pairs\nin each account that CloudFront can use to verify the signatures of signed\nURLs and signed cookies."
                        properties:
                          awsAccountNumber:
                            type: "string"
                          keyPairIDs:
                            description: "A list of CloudFront key pair identifiers."
                            properties:
                              items:
                                items:
                                  type: "string"
                                type: "array"
                              quantity:
                                format: "int64"
                                type: "integer"
                            type: "object"
                        type: "object"
                      type: "array"
                  type: "object"
                aliasICPRecordals:
                  description: "Amazon Web Services services in China customers must file for an Internet\nContent Provider (ICP) recordal if they want to serve content publicly on\nan alternate domain name, also known as a CNAME, that they've added to CloudFront.\nAliasICPRecordal provides the ICP recordal status for CNAMEs associated with\ndistributions.\n\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials\n(https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html)\nin Getting Started with Amazon Web Services services in China."
                  items:
                    description: "Amazon Web Services services in China customers must file for an Internet\nContent Provider (ICP) recordal if they want to serve content publicly on\nan alternate domain name, also known as a CNAME, that they've added to CloudFront.\nAliasICPRecordal provides the ICP recordal status for CNAMEs associated with\ndistributions. The status is returned in the CloudFront response; you can't\nconfigure it yourself.\n\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials\n(https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html)\nin Getting Started with Amazon Web Services services in China."
                    properties:
                      cname:
                        type: "string"
                      iCPRecordalStatus:
                        type: "string"
                    type: "object"
                  type: "array"
                callerReference:
                  type: "string"
                conditions:
                  description: "All CRS managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource"
                  items:
                    description: "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource"
                    properties:
                      lastTransitionTime:
                        description: "Last time the condition transitioned from one status to another."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "A human readable message indicating details about the transition."
                        type: "string"
                      reason:
                        description: "The reason for the condition's last transition."
                        type: "string"
                      status:
                        description: "Status of the condition, one of True, False, Unknown."
                        type: "string"
                      type:
                        description: "Type is the type of the Condition"
                        type: "string"
                    required:
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                domainName:
                  description: "The distribution's CloudFront domain name. For example: d111111abcdef8.cloudfront.net."
                  type: "string"
                eTag:
                  description: "The current version of the distribution created."
                  type: "string"
                id:
                  description: "The distribution's identifier. For example: E1U5RQF7T870K0."
                  type: "string"
                inProgressInvalidationBatches:
                  description: "The number of invalidation batches currently in progress."
                  format: "int64"
                  type: "integer"
                lastModifiedTime:
                  description: "The date and time when the distribution was last modified."
                  format: "date-time"
                  type: "string"
                status:
                  description: "The distribution's status. When the status is Deployed, the distribution's\ninformation is fully propagated to all CloudFront edge locations."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
