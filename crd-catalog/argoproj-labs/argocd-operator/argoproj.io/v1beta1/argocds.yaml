apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "argocds.argoproj.io"
spec:
  group: "argoproj.io"
  names:
    kind: "ArgoCD"
    listKind: "ArgoCDList"
    plural: "argocds"
    singular: "argocd"
  scope: "Namespaced"
  versions:
    - name: "v1beta1"
      schema:
        openAPIV3Schema:
          description: "ArgoCD is the Schema for the argocds API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "ArgoCDSpec defines the desired state of ArgoCD"
              properties:
                aggregatedClusterRoles:
                  description: "AggregatedClusterRoles will allow users to have aggregated ClusterRoles for a cluster scoped instance."
                  type: "boolean"
                applicationInstanceLabelKey:
                  description: "ApplicationInstanceLabelKey is the key name where Argo CD injects the app name as a tracking label."
                  type: "string"
                applicationSet:
                  description: "ArgoCDApplicationSet defines whether the Argo CD ApplicationSet controller should be installed."
                  properties:
                    enabled:
                      description: "Enabled is the flag to enable the Application Set Controller during ArgoCD installation. (optional, default `true`)"
                      type: "boolean"
                    env:
                      description: "Env lets you specify environment for applicationSet controller pods"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    extraCommandArgs:
                      description: "ExtraCommandArgs allows users to pass command line arguments to ApplicationSet controller.\nThey get added to default command line arguments provided by the operator.\nPlease note that the command line arguments provided as part of ExtraCommandArgs\nwill not overwrite the default command line arguments."
                      items:
                        type: "string"
                      type: "array"
                    image:
                      description: "Image is the Argo CD ApplicationSet image (optional)"
                      type: "string"
                    logLevel:
                      description: "LogLevel describes the log level that should be used by the ApplicationSet controller. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug,info, error, and warn."
                      type: "string"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for ApplicationSet."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    scmProviders:
                      description: "SCMProviders defines the list of allowed custom SCM provider API URLs"
                      items:
                        type: "string"
                      type: "array"
                    scmRootCAConfigMap:
                      description: "SCMRootCAConfigMap is the name of the config map that stores the Gitlab SCM Provider's TLS certificate which will be mounted on the ApplicationSet Controller (optional)."
                      type: "string"
                    sourceNamespaces:
                      description: "SourceNamespaces defines the namespaces applicationset resources are allowed to be created in"
                      items:
                        type: "string"
                      type: "array"
                    version:
                      description: "Version is the Argo CD ApplicationSet image tag. (optional)"
                      type: "string"
                    webhookServer:
                      description: "WebhookServerSpec defines the options for the ApplicationSet Webhook Server component."
                      properties:
                        host:
                          description: "Host is the hostname to use for Ingress/Route resources."
                          type: "string"
                        ingress:
                          description: "Ingress defines the desired state for an Ingress for the Application set webhook component."
                          properties:
                            annotations:
                              additionalProperties:
                                type: "string"
                              description: "Annotations is the map of annotations to apply to the Ingress."
                              type: "object"
                            enabled:
                              description: "Enabled will toggle the creation of the Ingress."
                              type: "boolean"
                            ingressClassName:
                              description: "IngressClassName for the Ingress resource."
                              type: "string"
                            path:
                              description: "Path used for the Ingress resource."
                              type: "string"
                            tls:
                              description: "TLS configuration. Currently the Ingress only supports a single TLS\nport, 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI."
                              items:
                                description: "IngressTLS describes the transport layer security associated with an ingress."
                                properties:
                                  hosts:
                                    description: "hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  secretName:
                                    description: "secretName is the name of the secret used to terminate TLS traffic on\nport 443. Field is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the \"Host\" header is used for routing."
                                    type: "string"
                                type: "object"
                              type: "array"
                          required:
                            - "enabled"
                          type: "object"
                        route:
                          description: "Route defines the desired state for an OpenShift Route for the Application set webhook component."
                          properties:
                            annotations:
                              additionalProperties:
                                type: "string"
                              description: "Annotations is the map of annotations to use for the Route resource."
                              type: "object"
                            enabled:
                              description: "Enabled will toggle the creation of the OpenShift Route."
                              type: "boolean"
                            labels:
                              additionalProperties:
                                type: "string"
                              description: "Labels is the map of labels to use for the Route resource"
                              type: "object"
                            path:
                              description: "Path the router watches for, to route traffic for to the service."
                              type: "string"
                            tls:
                              description: "TLS provides the ability to configure certificates and termination for the Route."
                              properties:
                                caCertificate:
                                  description: "caCertificate provides the cert authority certificate contents"
                                  type: "string"
                                certificate:
                                  description: "certificate provides certificate contents"
                                  type: "string"
                                destinationCACertificate:
                                  description: "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt\ntermination this file should be provided in order to have routers use it for health checks on the secure connection.\nIf this field is not specified, the router may provide its own destination CA and perform hostname validation using\nthe short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically\nverify."
                                  type: "string"
                                insecureEdgeTerminationPolicy:
                                  description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While\neach router may make its own decisions on which ports to expose, this is normally port 80.\n\n\n* Allow - traffic is sent to the server on the insecure port (default)\n* Disable - no traffic is allowed on the insecure port.\n* Redirect - clients are redirected to the secure port."
                                  type: "string"
                                key:
                                  description: "key provides key file contents"
                                  type: "string"
                                termination:
                                  description: "termination indicates termination type."
                                  type: "string"
                              required:
                                - "termination"
                              type: "object"
                            wildcardPolicy:
                              description: "WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed."
                              type: "string"
                          required:
                            - "enabled"
                          type: "object"
                      type: "object"
                  type: "object"
                banner:
                  description: "Banner defines an additional banner to be displayed in Argo CD UI"
                  properties:
                    content:
                      description: "Content defines the banner message content to display"
                      type: "string"
                    url:
                      description: "URL defines an optional URL to be used as banner message link"
                      type: "string"
                  required:
                    - "content"
                  type: "object"
                configManagementPlugins:
                  description: "ConfigManagementPlugins is used to specify additional config management plugins."
                  type: "string"
                controller:
                  description: "Controller defines the Application Controller options for ArgoCD."
                  properties:
                    appSync:
                      description: "AppSync is used to control the sync frequency, by default the ArgoCD\ncontroller polls Git every 3m.\n\n\nSet this to a duration, e.g. 10m or 600s to control the synchronisation\nfrequency."
                      type: "string"
                    enabled:
                      description: "Enabled is the flag to enable the Application Controller during ArgoCD installation. (optional, default `true`)"
                      type: "boolean"
                    env:
                      description: "Env lets you specify environment for application controller pods"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    extraCommandArgs:
                      description: "Extra Command arguments allows users to pass command line arguments to controller workload. They get added to default command line arguments provided\nby the operator.\nPlease note that the command line arguments provided as part of ExtraCommandArgs will not overwrite the default command line arguments."
                      items:
                        type: "string"
                      type: "array"
                    initContainers:
                      description: "InitContainers defines the list of initialization containers for the Application Controller component."
                      items:
                        description: "A single application container that you want to run within a pod."
                        properties:
                          args:
                            description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          command:
                            description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          env:
                            description: "List of environment variables to set in the container.\nCannot be updated."
                            items:
                              description: "EnvVar represents an environment variable present in a Container."
                              properties:
                                name:
                                  description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                  type: "string"
                                value:
                                  description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                  type: "string"
                                valueFrom:
                                  description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                  properties:
                                    configMapKeyRef:
                                      description: "Selects a key of a ConfigMap."
                                      properties:
                                        key:
                                          description: "The key to select."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the ConfigMap or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    fieldRef:
                                      description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    secretKeyRef:
                                      description: "Selects a key of a secret in the pod's namespace"
                                      properties:
                                        key:
                                          description: "The key of the secret to select from.  Must be a valid secret key."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          envFrom:
                            description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                            items:
                              description: "EnvFromSource represents the source of a set of ConfigMaps"
                              properties:
                                configMapRef:
                                  description: "The ConfigMap to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                prefix:
                                  description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                  type: "string"
                                secretRef:
                                  description: "The Secret to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                            type: "array"
                          image:
                            description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                            type: "string"
                          imagePullPolicy:
                            description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                            type: "string"
                          lifecycle:
                            description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                            properties:
                              postStart:
                                description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                              preStop:
                                description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                            type: "object"
                          livenessProbe:
                            description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          name:
                            description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                            type: "string"
                          ports:
                            description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                            items:
                              description: "ContainerPort represents a network port in a single container."
                              properties:
                                containerPort:
                                  description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                                  format: "int32"
                                  type: "integer"
                                hostIP:
                                  description: "What host IP to bind the external port to."
                                  type: "string"
                                hostPort:
                                  description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                                  format: "int32"
                                  type: "integer"
                                name:
                                  description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                                  type: "string"
                                protocol:
                                  default: "TCP"
                                  description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                                  type: "string"
                              required:
                                - "containerPort"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "containerPort"
                              - "protocol"
                            x-kubernetes-list-type: "map"
                          readinessProbe:
                            description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          resizePolicy:
                            description: "Resources resize policy for the container."
                            items:
                              description: "ContainerResizePolicy represents resource resize policy for the container."
                              properties:
                                resourceName:
                                  description: "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory."
                                  type: "string"
                                restartPolicy:
                                  description: "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired."
                                  type: "string"
                              required:
                                - "resourceName"
                                - "restartPolicy"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          resources:
                            description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          restartPolicy:
                            description: "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted."
                            type: "string"
                          securityContext:
                            description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                            properties:
                              allowPrivilegeEscalation:
                                description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              capabilities:
                                description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  add:
                                    description: "Added capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                  drop:
                                    description: "Removed capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                type: "object"
                              privileged:
                                description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              procMount:
                                description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "string"
                              readOnlyRootFilesystem:
                                description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              runAsGroup:
                                description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              runAsNonRoot:
                                description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "boolean"
                              runAsUser:
                                description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              seLinuxOptions:
                                description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  level:
                                    description: "Level is SELinux level label that applies to the container."
                                    type: "string"
                                  role:
                                    description: "Role is a SELinux role label that applies to the container."
                                    type: "string"
                                  type:
                                    description: "Type is a SELinux type label that applies to the container."
                                    type: "string"
                                  user:
                                    description: "User is a SELinux user label that applies to the container."
                                    type: "string"
                                type: "object"
                              seccompProfile:
                                description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  localhostProfile:
                                    description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                                    type: "string"
                                  type:
                                    description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                    type: "string"
                                required:
                                  - "type"
                                type: "object"
                              windowsOptions:
                                description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                                properties:
                                  gmsaCredentialSpec:
                                    description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                    type: "string"
                                  gmsaCredentialSpecName:
                                    description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                    type: "string"
                                  hostProcess:
                                    description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                                    type: "boolean"
                                  runAsUserName:
                                    description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                    type: "string"
                                type: "object"
                            type: "object"
                          startupProbe:
                            description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          stdin:
                            description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                            type: "boolean"
                          stdinOnce:
                            description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                            type: "boolean"
                          terminationMessagePath:
                            description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                            type: "string"
                          terminationMessagePolicy:
                            description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                            type: "string"
                          tty:
                            description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                            type: "boolean"
                          volumeDevices:
                            description: "volumeDevices is the list of block devices to be used by the container."
                            items:
                              description: "volumeDevice describes a mapping of a raw block device within a container."
                              properties:
                                devicePath:
                                  description: "devicePath is the path inside of the container that the device will be mapped to."
                                  type: "string"
                                name:
                                  description: "name must match the name of a persistentVolumeClaim in the pod"
                                  type: "string"
                              required:
                                - "devicePath"
                                - "name"
                              type: "object"
                            type: "array"
                          volumeMounts:
                            description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                            items:
                              description: "VolumeMount describes a mounting of a Volume within a container."
                              properties:
                                mountPath:
                                  description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                                  type: "string"
                                mountPropagation:
                                  description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                                  type: "string"
                                name:
                                  description: "This must match the Name of a Volume."
                                  type: "string"
                                readOnly:
                                  description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                                  type: "boolean"
                                subPath:
                                  description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                                  type: "string"
                                subPathExpr:
                                  description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                                  type: "string"
                              required:
                                - "mountPath"
                                - "name"
                              type: "object"
                            type: "array"
                          workingDir:
                            description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    logFormat:
                      description: "LogFormat refers to the log format used by the Application Controller component. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json."
                      type: "string"
                    logLevel:
                      description: "LogLevel refers to the log level used by the Application Controller component. Defaults to ArgoCDDefaultLogLevel if not configured. Valid options are debug, info, error, and warn."
                      type: "string"
                    parallelismLimit:
                      description: "ParallelismLimit defines the limit for parallel kubectl operations"
                      format: "int32"
                      type: "integer"
                    processors:
                      description: "Processors contains the options for the Application Controller processors."
                      properties:
                        operation:
                          description: "Operation is the number of application operation processors."
                          format: "int32"
                          type: "integer"
                        status:
                          description: "Status is the number of application status processors."
                          format: "int32"
                          type: "integer"
                      type: "object"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for the Application Controller."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    sharding:
                      description: "Sharding contains the options for the Application Controller sharding configuration."
                      properties:
                        clustersPerShard:
                          description: "ClustersPerShard defines the maximum number of clusters managed by each argocd shard"
                          format: "int32"
                          minimum: 1.0
                          type: "integer"
                        dynamicScalingEnabled:
                          description: "DynamicScalingEnabled defines whether dynamic scaling should be enabled for Application Controller component"
                          type: "boolean"
                        enabled:
                          description: "Enabled defines whether sharding should be enabled on the Application Controller component."
                          type: "boolean"
                        maxShards:
                          description: "MaxShards defines the maximum number of shards at any given point"
                          format: "int32"
                          type: "integer"
                        minShards:
                          description: "MinShards defines the minimum number of shards at any given point"
                          format: "int32"
                          minimum: 1.0
                          type: "integer"
                        replicas:
                          description: "Replicas defines the number of replicas to run in the Application controller shard."
                          format: "int32"
                          type: "integer"
                      type: "object"
                    sidecarContainers:
                      description: "SidecarContainers defines the list of sidecar containers for the controller deployment"
                      items:
                        description: "A single application container that you want to run within a pod."
                        properties:
                          args:
                            description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          command:
                            description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          env:
                            description: "List of environment variables to set in the container.\nCannot be updated."
                            items:
                              description: "EnvVar represents an environment variable present in a Container."
                              properties:
                                name:
                                  description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                  type: "string"
                                value:
                                  description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                  type: "string"
                                valueFrom:
                                  description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                  properties:
                                    configMapKeyRef:
                                      description: "Selects a key of a ConfigMap."
                                      properties:
                                        key:
                                          description: "The key to select."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the ConfigMap or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    fieldRef:
                                      description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    secretKeyRef:
                                      description: "Selects a key of a secret in the pod's namespace"
                                      properties:
                                        key:
                                          description: "The key of the secret to select from.  Must be a valid secret key."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          envFrom:
                            description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                            items:
                              description: "EnvFromSource represents the source of a set of ConfigMaps"
                              properties:
                                configMapRef:
                                  description: "The ConfigMap to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                prefix:
                                  description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                  type: "string"
                                secretRef:
                                  description: "The Secret to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                            type: "array"
                          image:
                            description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                            type: "string"
                          imagePullPolicy:
                            description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                            type: "string"
                          lifecycle:
                            description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                            properties:
                              postStart:
                                description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                              preStop:
                                description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                            type: "object"
                          livenessProbe:
                            description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          name:
                            description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                            type: "string"
                          ports:
                            description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                            items:
                              description: "ContainerPort represents a network port in a single container."
                              properties:
                                containerPort:
                                  description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                                  format: "int32"
                                  type: "integer"
                                hostIP:
                                  description: "What host IP to bind the external port to."
                                  type: "string"
                                hostPort:
                                  description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                                  format: "int32"
                                  type: "integer"
                                name:
                                  description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                                  type: "string"
                                protocol:
                                  default: "TCP"
                                  description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                                  type: "string"
                              required:
                                - "containerPort"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "containerPort"
                              - "protocol"
                            x-kubernetes-list-type: "map"
                          readinessProbe:
                            description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          resizePolicy:
                            description: "Resources resize policy for the container."
                            items:
                              description: "ContainerResizePolicy represents resource resize policy for the container."
                              properties:
                                resourceName:
                                  description: "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory."
                                  type: "string"
                                restartPolicy:
                                  description: "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired."
                                  type: "string"
                              required:
                                - "resourceName"
                                - "restartPolicy"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          resources:
                            description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          restartPolicy:
                            description: "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted."
                            type: "string"
                          securityContext:
                            description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                            properties:
                              allowPrivilegeEscalation:
                                description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              capabilities:
                                description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  add:
                                    description: "Added capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                  drop:
                                    description: "Removed capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                type: "object"
                              privileged:
                                description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              procMount:
                                description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "string"
                              readOnlyRootFilesystem:
                                description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              runAsGroup:
                                description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              runAsNonRoot:
                                description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "boolean"
                              runAsUser:
                                description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              seLinuxOptions:
                                description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  level:
                                    description: "Level is SELinux level label that applies to the container."
                                    type: "string"
                                  role:
                                    description: "Role is a SELinux role label that applies to the container."
                                    type: "string"
                                  type:
                                    description: "Type is a SELinux type label that applies to the container."
                                    type: "string"
                                  user:
                                    description: "User is a SELinux user label that applies to the container."
                                    type: "string"
                                type: "object"
                              seccompProfile:
                                description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  localhostProfile:
                                    description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                                    type: "string"
                                  type:
                                    description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                    type: "string"
                                required:
                                  - "type"
                                type: "object"
                              windowsOptions:
                                description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                                properties:
                                  gmsaCredentialSpec:
                                    description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                    type: "string"
                                  gmsaCredentialSpecName:
                                    description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                    type: "string"
                                  hostProcess:
                                    description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                                    type: "boolean"
                                  runAsUserName:
                                    description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                    type: "string"
                                type: "object"
                            type: "object"
                          startupProbe:
                            description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          stdin:
                            description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                            type: "boolean"
                          stdinOnce:
                            description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                            type: "boolean"
                          terminationMessagePath:
                            description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                            type: "string"
                          terminationMessagePolicy:
                            description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                            type: "string"
                          tty:
                            description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                            type: "boolean"
                          volumeDevices:
                            description: "volumeDevices is the list of block devices to be used by the container."
                            items:
                              description: "volumeDevice describes a mapping of a raw block device within a container."
                              properties:
                                devicePath:
                                  description: "devicePath is the path inside of the container that the device will be mapped to."
                                  type: "string"
                                name:
                                  description: "name must match the name of a persistentVolumeClaim in the pod"
                                  type: "string"
                              required:
                                - "devicePath"
                                - "name"
                              type: "object"
                            type: "array"
                          volumeMounts:
                            description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                            items:
                              description: "VolumeMount describes a mounting of a Volume within a container."
                              properties:
                                mountPath:
                                  description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                                  type: "string"
                                mountPropagation:
                                  description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                                  type: "string"
                                name:
                                  description: "This must match the Name of a Volume."
                                  type: "string"
                                readOnly:
                                  description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                                  type: "boolean"
                                subPath:
                                  description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                                  type: "string"
                                subPathExpr:
                                  description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                                  type: "string"
                              required:
                                - "mountPath"
                                - "name"
                              type: "object"
                            type: "array"
                          workingDir:
                            description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    volumeMounts:
                      description: "VolumeMounts adds volumeMounts to the Argo CD Controller container."
                      items:
                        description: "VolumeMount describes a mounting of a Volume within a container."
                        properties:
                          mountPath:
                            description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                            type: "string"
                          mountPropagation:
                            description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                            type: "string"
                          name:
                            description: "This must match the Name of a Volume."
                            type: "string"
                          readOnly:
                            description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                            type: "boolean"
                          subPath:
                            description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                            type: "string"
                          subPathExpr:
                            description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                            type: "string"
                        required:
                          - "mountPath"
                          - "name"
                        type: "object"
                      type: "array"
                    volumes:
                      description: "Volumes adds volumes to the Argo CD Controller container."
                      items:
                        description: "Volume represents a named volume in a pod that may be accessed by any container in the pod."
                        properties:
                          awsElasticBlockStore:
                            description: "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              partition:
                                description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                format: "int32"
                                type: "integer"
                              readOnly:
                                description: "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                type: "boolean"
                              volumeID:
                                description: "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          azureDisk:
                            description: "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
                            properties:
                              cachingMode:
                                description: "cachingMode is the Host Caching mode: None, Read Only, Read Write."
                                type: "string"
                              diskName:
                                description: "diskName is the Name of the data disk in the blob storage"
                                type: "string"
                              diskURI:
                                description: "diskURI is the URI of data disk in the blob storage"
                                type: "string"
                              fsType:
                                description: "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              kind:
                                description: "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                                type: "string"
                              readOnly:
                                description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                            required:
                              - "diskName"
                              - "diskURI"
                            type: "object"
                          azureFile:
                            description: "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
                            properties:
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretName:
                                description: "secretName is the  name of secret that contains Azure Storage Account Name and Key"
                                type: "string"
                              shareName:
                                description: "shareName is the azure share Name"
                                type: "string"
                            required:
                              - "secretName"
                              - "shareName"
                            type: "object"
                          cephfs:
                            description: "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
                            properties:
                              monitors:
                                description: "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                items:
                                  type: "string"
                                type: "array"
                              path:
                                description: "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                                type: "string"
                              readOnly:
                                description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "boolean"
                              secretFile:
                                description: "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "string"
                              secretRef:
                                description: "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              user:
                                description: "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "string"
                            required:
                              - "monitors"
                            type: "object"
                          cinder:
                            description: "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "boolean"
                              secretRef:
                                description: "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              volumeID:
                                description: "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          configMap:
                            description: "configMap represents a configMap that should populate this volume"
                            properties:
                              defaultMode:
                                description: "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                items:
                                  description: "Maps a string key to a path within a volume."
                                  properties:
                                    key:
                                      description: "key is the key to project."
                                      type: "string"
                                    mode:
                                      description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                      type: "string"
                                  required:
                                    - "key"
                                    - "path"
                                  type: "object"
                                type: "array"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "optional specify whether the ConfigMap or its keys must be defined"
                                type: "boolean"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          csi:
                            description: "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
                            properties:
                              driver:
                                description: "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
                                type: "string"
                              fsType:
                                description: "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply."
                                type: "string"
                              nodePublishSecretRef:
                                description: "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              readOnly:
                                description: "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write)."
                                type: "boolean"
                              volumeAttributes:
                                additionalProperties:
                                  type: "string"
                                description: "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values."
                                type: "object"
                            required:
                              - "driver"
                            type: "object"
                          downwardAPI:
                            description: "downwardAPI represents downward API about the pod that should populate this volume"
                            properties:
                              defaultMode:
                                description: "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "Items is a list of downward API volume file"
                                items:
                                  description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                  properties:
                                    fieldRef:
                                      description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    mode:
                                      description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                      type: "string"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "path"
                                  type: "object"
                                type: "array"
                            type: "object"
                          emptyDir:
                            description: "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                            properties:
                              medium:
                                description: "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                type: "string"
                              sizeLimit:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                            type: "object"
                          ephemeral:
                            description: "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time."
                            properties:
                              volumeClaimTemplate:
                                description: "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\n\nRequired, must not be nil."
                                properties:
                                  metadata:
                                    description: "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation."
                                    type: "object"
                                  spec:
                                    description: "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
                                    properties:
                                      accessModes:
                                        description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                        items:
                                          type: "string"
                                        type: "array"
                                      dataSource:
                                        description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                                        properties:
                                          apiGroup:
                                            description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                            type: "string"
                                          kind:
                                            description: "Kind is the type of resource being referenced"
                                            type: "string"
                                          name:
                                            description: "Name is the name of resource being referenced"
                                            type: "string"
                                        required:
                                          - "kind"
                                          - "name"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      dataSourceRef:
                                        description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                        properties:
                                          apiGroup:
                                            description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                            type: "string"
                                          kind:
                                            description: "Kind is the type of resource being referenced"
                                            type: "string"
                                          name:
                                            description: "Name is the name of resource being referenced"
                                            type: "string"
                                          namespace:
                                            description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                            type: "string"
                                        required:
                                          - "kind"
                                          - "name"
                                        type: "object"
                                      resources:
                                        description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                        properties:
                                          claims:
                                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                            items:
                                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                              properties:
                                                name:
                                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                  type: "string"
                                              required:
                                                - "name"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-map-keys:
                                              - "name"
                                            x-kubernetes-list-type: "map"
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                        type: "object"
                                      selector:
                                        description: "selector is a label query over volumes to consider for binding."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      storageClassName:
                                        description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                        type: "string"
                                      volumeMode:
                                        description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                                        type: "string"
                                      volumeName:
                                        description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                                        type: "string"
                                    type: "object"
                                required:
                                  - "spec"
                                type: "object"
                            type: "object"
                          fc:
                            description: "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              lun:
                                description: "lun is Optional: FC target lun number"
                                format: "int32"
                                type: "integer"
                              readOnly:
                                description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              targetWWNs:
                                description: "targetWWNs is Optional: FC target worldwide names (WWNs)"
                                items:
                                  type: "string"
                                type: "array"
                              wwids:
                                description: "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          flexVolume:
                            description: "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
                            properties:
                              driver:
                                description: "driver is the name of the driver to use for this volume."
                                type: "string"
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                type: "string"
                              options:
                                additionalProperties:
                                  type: "string"
                                description: "options is Optional: this field holds extra command options if any."
                                type: "object"
                              readOnly:
                                description: "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            required:
                              - "driver"
                            type: "object"
                          flocker:
                            description: "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
                            properties:
                              datasetName:
                                description: "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated"
                                type: "string"
                              datasetUUID:
                                description: "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset"
                                type: "string"
                            type: "object"
                          gcePersistentDisk:
                            description: "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            properties:
                              fsType:
                                description: "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              partition:
                                description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                format: "int32"
                                type: "integer"
                              pdName:
                                description: "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                type: "boolean"
                            required:
                              - "pdName"
                            type: "object"
                          gitRepo:
                            description: "gitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
                            properties:
                              directory:
                                description: "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name."
                                type: "string"
                              repository:
                                description: "repository is the URL"
                                type: "string"
                              revision:
                                description: "revision is the commit hash for the specified revision."
                                type: "string"
                            required:
                              - "repository"
                            type: "object"
                          glusterfs:
                            description: "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md"
                            properties:
                              endpoints:
                                description: "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "string"
                              path:
                                description: "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "boolean"
                            required:
                              - "endpoints"
                              - "path"
                            type: "object"
                          hostPath:
                            description: "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write."
                            properties:
                              path:
                                description: "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                type: "string"
                              type:
                                description: "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                type: "string"
                            required:
                              - "path"
                            type: "object"
                          iscsi:
                            description: "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md"
                            properties:
                              chapAuthDiscovery:
                                description: "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication"
                                type: "boolean"
                              chapAuthSession:
                                description: "chapAuthSession defines whether support iSCSI Session CHAP authentication"
                                type: "boolean"
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              initiatorName:
                                description: "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection."
                                type: "string"
                              iqn:
                                description: "iqn is the target iSCSI Qualified Name."
                                type: "string"
                              iscsiInterface:
                                description: "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp)."
                                type: "string"
                              lun:
                                description: "lun represents iSCSI Target Lun number."
                                format: "int32"
                                type: "integer"
                              portals:
                                description: "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                items:
                                  type: "string"
                                type: "array"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false."
                                type: "boolean"
                              secretRef:
                                description: "secretRef is the CHAP Secret for iSCSI target and initiator authentication"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              targetPortal:
                                description: "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                type: "string"
                            required:
                              - "iqn"
                              - "lun"
                              - "targetPortal"
                            type: "object"
                          name:
                            description: "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: "string"
                          nfs:
                            description: "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            properties:
                              path:
                                description: "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "boolean"
                              server:
                                description: "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "string"
                            required:
                              - "path"
                              - "server"
                            type: "object"
                          persistentVolumeClaim:
                            description: "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                            properties:
                              claimName:
                                description: "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                                type: "string"
                              readOnly:
                                description: "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false."
                                type: "boolean"
                            required:
                              - "claimName"
                            type: "object"
                          photonPersistentDisk:
                            description: "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              pdID:
                                description: "pdID is the ID that identifies Photon Controller persistent disk"
                                type: "string"
                            required:
                              - "pdID"
                            type: "object"
                          portworxVolume:
                            description: "portworxVolume represents a portworx volume attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              volumeID:
                                description: "volumeID uniquely identifies a Portworx volume"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          projected:
                            description: "projected items for all in one resources secrets, configmaps, and downward API"
                            properties:
                              defaultMode:
                                description: "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              sources:
                                description: "sources is the list of volume projections"
                                items:
                                  description: "Projection that may be projected along with other supported volume types"
                                  properties:
                                    configMap:
                                      description: "configMap information about the configMap data to project"
                                      properties:
                                        items:
                                          description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                          items:
                                            description: "Maps a string key to a path within a volume."
                                            properties:
                                              key:
                                                description: "key is the key to project."
                                                type: "string"
                                              mode:
                                                description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                type: "string"
                                            required:
                                              - "key"
                                              - "path"
                                            type: "object"
                                          type: "array"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "optional specify whether the ConfigMap or its keys must be defined"
                                          type: "boolean"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    downwardAPI:
                                      description: "downwardAPI information about the downwardAPI data to project"
                                      properties:
                                        items:
                                          description: "Items is a list of DownwardAPIVolume file"
                                          items:
                                            description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                            properties:
                                              fieldRef:
                                                description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                                properties:
                                                  apiVersion:
                                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                    type: "string"
                                                  fieldPath:
                                                    description: "Path of the field to select in the specified API version."
                                                    type: "string"
                                                required:
                                                  - "fieldPath"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              mode:
                                                description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                                type: "string"
                                              resourceFieldRef:
                                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                                properties:
                                                  containerName:
                                                    description: "Container name: required for volumes, optional for env vars"
                                                    type: "string"
                                                  divisor:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: "Required: resource to select"
                                                    type: "string"
                                                required:
                                                  - "resource"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                            required:
                                              - "path"
                                            type: "object"
                                          type: "array"
                                      type: "object"
                                    secret:
                                      description: "secret information about the secret data to project"
                                      properties:
                                        items:
                                          description: "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                          items:
                                            description: "Maps a string key to a path within a volume."
                                            properties:
                                              key:
                                                description: "key is the key to project."
                                                type: "string"
                                              mode:
                                                description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                type: "string"
                                            required:
                                              - "key"
                                              - "path"
                                            type: "object"
                                          type: "array"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "optional field specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    serviceAccountToken:
                                      description: "serviceAccountToken is information about the serviceAccountToken data to project"
                                      properties:
                                        audience:
                                          description: "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver."
                                          type: "string"
                                        expirationSeconds:
                                          description: "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes."
                                          format: "int64"
                                          type: "integer"
                                        path:
                                          description: "path is the path relative to the mount point of the file to project the\ntoken into."
                                          type: "string"
                                      required:
                                        - "path"
                                      type: "object"
                                  type: "object"
                                type: "array"
                            type: "object"
                          quobyte:
                            description: "quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
                            properties:
                              group:
                                description: "group to map volume access to\nDefault is no group"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false."
                                type: "boolean"
                              registry:
                                description: "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
                                type: "string"
                              tenant:
                                description: "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin"
                                type: "string"
                              user:
                                description: "user to map volume access to\nDefaults to serivceaccount user"
                                type: "string"
                              volume:
                                description: "volume is a string that references an already created Quobyte volume by name."
                                type: "string"
                            required:
                              - "registry"
                              - "volume"
                            type: "object"
                          rbd:
                            description: "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              image:
                                description: "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              keyring:
                                description: "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              monitors:
                                description: "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                items:
                                  type: "string"
                                type: "array"
                              pool:
                                description: "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "boolean"
                              secretRef:
                                description: "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              user:
                                description: "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                            required:
                              - "image"
                              - "monitors"
                            type: "object"
                          scaleIO:
                            description: "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\"."
                                type: "string"
                              gateway:
                                description: "gateway is the host address of the ScaleIO API Gateway."
                                type: "string"
                              protectionDomain:
                                description: "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage."
                                type: "string"
                              readOnly:
                                description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              sslEnabled:
                                description: "sslEnabled Flag enable/disable SSL communication with Gateway, default false"
                                type: "boolean"
                              storageMode:
                                description: "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned."
                                type: "string"
                              storagePool:
                                description: "storagePool is the ScaleIO Storage Pool associated with the protection domain."
                                type: "string"
                              system:
                                description: "system is the name of the storage system as configured in ScaleIO."
                                type: "string"
                              volumeName:
                                description: "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
                                type: "string"
                            required:
                              - "gateway"
                              - "secretRef"
                              - "system"
                            type: "object"
                          secret:
                            description: "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                            properties:
                              defaultMode:
                                description: "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                items:
                                  description: "Maps a string key to a path within a volume."
                                  properties:
                                    key:
                                      description: "key is the key to project."
                                      type: "string"
                                    mode:
                                      description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                      type: "string"
                                  required:
                                    - "key"
                                    - "path"
                                  type: "object"
                                type: "array"
                              optional:
                                description: "optional field specify whether the Secret or its keys must be defined"
                                type: "boolean"
                              secretName:
                                description: "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                type: "string"
                            type: "object"
                          storageos:
                            description: "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              volumeName:
                                description: "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
                                type: "string"
                              volumeNamespace:
                                description: "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created."
                                type: "string"
                            type: "object"
                          vsphereVolume:
                            description: "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              storagePolicyID:
                                description: "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
                                type: "string"
                              storagePolicyName:
                                description: "storagePolicyName is the storage Policy Based Management (SPBM) profile name."
                                type: "string"
                              volumePath:
                                description: "volumePath is the path that identifies vSphere volume vmdk"
                                type: "string"
                            required:
                              - "volumePath"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                  type: "object"
                defaultClusterScopedRoleDisabled:
                  description: "DefaultClusterScopedRoleDisabled will disable creation of default ClusterRoles for a cluster scoped instance."
                  type: "boolean"
                disableAdmin:
                  description: "DisableAdmin will disable the admin user."
                  type: "boolean"
                extraConfig:
                  additionalProperties:
                    type: "string"
                  description: "ExtraConfig can be used to add fields to Argo CD configmap that are not supported by Argo CD CRD.\n\n\nNote: ExtraConfig takes precedence over Argo CD CRD.\nFor example, A user sets `argocd.Spec.DisableAdmin` = true and also\n`a.Spec.ExtraConfig[\"admin.enabled\"]` = true. In this case, operator updates\nArgo CD Configmap as follows -> argocd-cm.Data[\"admin.enabled\"] = true."
                  type: "object"
                gaAnonymizeUsers:
                  description: "GAAnonymizeUsers toggles user IDs being hashed before sending to google analytics."
                  type: "boolean"
                gaTrackingID:
                  description: "GATrackingID is the google analytics tracking ID to use."
                  type: "string"
                grafana:
                  description: "Deprecated: Grafana defines the Grafana server options for ArgoCD."
                  properties:
                    enabled:
                      description: "Enabled will toggle Grafana support globally for ArgoCD."
                      type: "boolean"
                    host:
                      description: "Host is the hostname to use for Ingress/Route resources."
                      type: "string"
                    image:
                      description: "Image is the Grafana container image."
                      type: "string"
                    ingress:
                      description: "Ingress defines the desired state for an Ingress for the Grafana component."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is the map of annotations to apply to the Ingress."
                          type: "object"
                        enabled:
                          description: "Enabled will toggle the creation of the Ingress."
                          type: "boolean"
                        ingressClassName:
                          description: "IngressClassName for the Ingress resource."
                          type: "string"
                        path:
                          description: "Path used for the Ingress resource."
                          type: "string"
                        tls:
                          description: "TLS configuration. Currently the Ingress only supports a single TLS\nport, 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI."
                          items:
                            description: "IngressTLS describes the transport layer security associated with an ingress."
                            properties:
                              hosts:
                                description: "hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              secretName:
                                description: "secretName is the name of the secret used to terminate TLS traffic on\nport 443. Field is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the \"Host\" header is used for routing."
                                type: "string"
                            type: "object"
                          type: "array"
                      required:
                        - "enabled"
                      type: "object"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for Grafana."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    route:
                      description: "Route defines the desired state for an OpenShift Route for the Grafana component."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is the map of annotations to use for the Route resource."
                          type: "object"
                        enabled:
                          description: "Enabled will toggle the creation of the OpenShift Route."
                          type: "boolean"
                        labels:
                          additionalProperties:
                            type: "string"
                          description: "Labels is the map of labels to use for the Route resource"
                          type: "object"
                        path:
                          description: "Path the router watches for, to route traffic for to the service."
                          type: "string"
                        tls:
                          description: "TLS provides the ability to configure certificates and termination for the Route."
                          properties:
                            caCertificate:
                              description: "caCertificate provides the cert authority certificate contents"
                              type: "string"
                            certificate:
                              description: "certificate provides certificate contents"
                              type: "string"
                            destinationCACertificate:
                              description: "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt\ntermination this file should be provided in order to have routers use it for health checks on the secure connection.\nIf this field is not specified, the router may provide its own destination CA and perform hostname validation using\nthe short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically\nverify."
                              type: "string"
                            insecureEdgeTerminationPolicy:
                              description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While\neach router may make its own decisions on which ports to expose, this is normally port 80.\n\n\n* Allow - traffic is sent to the server on the insecure port (default)\n* Disable - no traffic is allowed on the insecure port.\n* Redirect - clients are redirected to the secure port."
                              type: "string"
                            key:
                              description: "key provides key file contents"
                              type: "string"
                            termination:
                              description: "termination indicates termination type."
                              type: "string"
                          required:
                            - "termination"
                          type: "object"
                        wildcardPolicy:
                          description: "WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed."
                          type: "string"
                      required:
                        - "enabled"
                      type: "object"
                    size:
                      description: "Size is the replica count for the Grafana Deployment."
                      format: "int32"
                      type: "integer"
                    version:
                      description: "Version is the Grafana container image tag."
                      type: "string"
                  required:
                    - "enabled"
                  type: "object"
                ha:
                  description: "HA options for High Availability support for the Redis component."
                  properties:
                    enabled:
                      description: "Enabled will toggle HA support globally for Argo CD."
                      type: "boolean"
                    redisProxyImage:
                      description: "RedisProxyImage is the Redis HAProxy container image."
                      type: "string"
                    redisProxyVersion:
                      description: "RedisProxyVersion is the Redis HAProxy container image tag."
                      type: "string"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for HA."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                  required:
                    - "enabled"
                  type: "object"
                helpChatText:
                  description: "HelpChatText is the text for getting chat help, defaults to \"Chat now!\""
                  type: "string"
                helpChatURL:
                  description: "HelpChatURL is the URL for getting chat help, this will typically be your Slack channel for support."
                  type: "string"
                image:
                  description: "Image is the ArgoCD container image for all ArgoCD components."
                  type: "string"
                import:
                  description: "Import is the import/restore options for ArgoCD."
                  properties:
                    name:
                      description: "Name of an ArgoCDExport from which to import data."
                      type: "string"
                    namespace:
                      description: "Namespace for the ArgoCDExport, defaults to the same namespace as the ArgoCD."
                      type: "string"
                  required:
                    - "name"
                  type: "object"
                initialRepositories:
                  description: "InitialRepositories to configure Argo CD with upon creation of the cluster."
                  type: "string"
                initialSSHKnownHosts:
                  description: "InitialSSHKnownHosts defines the SSH known hosts data upon creation of the cluster for connecting Git repositories via SSH."
                  properties:
                    excludedefaulthosts:
                      description: "ExcludeDefaultHosts describes whether you would like to include the default\nlist of SSH Known Hosts provided by ArgoCD."
                      type: "boolean"
                    keys:
                      description: "Keys describes a custom set of SSH Known Hosts that you would like to\nhave included in your ArgoCD server."
                      type: "string"
                  type: "object"
                kustomizeBuildOptions:
                  description: "KustomizeBuildOptions is used to specify build options/parameters to use with `kustomize build`."
                  type: "string"
                kustomizeVersions:
                  description: "KustomizeVersions is a listing of configured versions of Kustomize to be made available within ArgoCD."
                  items:
                    description: "KustomizeVersionSpec is used to specify information about a kustomize version to be used within ArgoCD."
                    properties:
                      path:
                        description: "Path is the path to a configured kustomize version on the filesystem of your repo server."
                        type: "string"
                      version:
                        description: "Version is a configured kustomize version in the format of vX.Y.Z"
                        type: "string"
                    type: "object"
                  type: "array"
                monitoring:
                  description: "Monitoring defines whether workload status monitoring configuration for this instance."
                  properties:
                    disableMetrics:
                      description: "DisableMetrics field can be used to enable or disable the collection of Metrics on Openshift"
                      type: "boolean"
                    enabled:
                      description: "Enabled defines whether workload status monitoring is enabled for this instance or not"
                      type: "boolean"
                  required:
                    - "enabled"
                  type: "object"
                nodePlacement:
                  description: "NodePlacement defines NodeSelectors and Taints for Argo CD workloads"
                  properties:
                    nodeSelector:
                      additionalProperties:
                        type: "string"
                      description: "NodeSelector is a field of PodSpec, it is a map of key value pairs used for node selection"
                      type: "object"
                    tolerations:
                      description: "Tolerations allow the pods to schedule onto nodes with matching taints"
                      items:
                        description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                        properties:
                          effect:
                            description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                            type: "string"
                          key:
                            description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                            type: "string"
                          operator:
                            description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                            type: "string"
                          tolerationSeconds:
                            description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                            format: "int64"
                            type: "integer"
                          value:
                            description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                            type: "string"
                        type: "object"
                      type: "array"
                  type: "object"
                notifications:
                  description: "Notifications defines whether the Argo CD Notifications controller should be installed."
                  properties:
                    enabled:
                      description: "Enabled defines whether argocd-notifications controller should be deployed or not"
                      type: "boolean"
                    env:
                      description: "Env let you specify environment variables for Notifications pods"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    image:
                      description: "Image is the Argo CD Notifications image (optional)"
                      type: "string"
                    logLevel:
                      description: "LogLevel describes the log level that should be used by the argocd-notifications. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug,info, error, and warn."
                      type: "string"
                    replicas:
                      description: "Replicas defines the number of replicas to run for notifications-controller"
                      format: "int32"
                      type: "integer"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for Argo CD Notifications."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    version:
                      description: "Version is the Argo CD Notifications image tag. (optional)"
                      type: "string"
                  required:
                    - "enabled"
                  type: "object"
                oidcConfig:
                  description: "OIDCConfig is the OIDC configuration as an alternative to dex."
                  type: "string"
                prometheus:
                  description: "Prometheus defines the Prometheus server options for ArgoCD."
                  properties:
                    enabled:
                      description: "Enabled will toggle Prometheus support globally for ArgoCD."
                      type: "boolean"
                    host:
                      description: "Host is the hostname to use for Ingress/Route resources."
                      type: "string"
                    ingress:
                      description: "Ingress defines the desired state for an Ingress for the Prometheus component."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is the map of annotations to apply to the Ingress."
                          type: "object"
                        enabled:
                          description: "Enabled will toggle the creation of the Ingress."
                          type: "boolean"
                        ingressClassName:
                          description: "IngressClassName for the Ingress resource."
                          type: "string"
                        path:
                          description: "Path used for the Ingress resource."
                          type: "string"
                        tls:
                          description: "TLS configuration. Currently the Ingress only supports a single TLS\nport, 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI."
                          items:
                            description: "IngressTLS describes the transport layer security associated with an ingress."
                            properties:
                              hosts:
                                description: "hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              secretName:
                                description: "secretName is the name of the secret used to terminate TLS traffic on\nport 443. Field is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the \"Host\" header is used for routing."
                                type: "string"
                            type: "object"
                          type: "array"
                      required:
                        - "enabled"
                      type: "object"
                    route:
                      description: "Route defines the desired state for an OpenShift Route for the Prometheus component."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is the map of annotations to use for the Route resource."
                          type: "object"
                        enabled:
                          description: "Enabled will toggle the creation of the OpenShift Route."
                          type: "boolean"
                        labels:
                          additionalProperties:
                            type: "string"
                          description: "Labels is the map of labels to use for the Route resource"
                          type: "object"
                        path:
                          description: "Path the router watches for, to route traffic for to the service."
                          type: "string"
                        tls:
                          description: "TLS provides the ability to configure certificates and termination for the Route."
                          properties:
                            caCertificate:
                              description: "caCertificate provides the cert authority certificate contents"
                              type: "string"
                            certificate:
                              description: "certificate provides certificate contents"
                              type: "string"
                            destinationCACertificate:
                              description: "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt\ntermination this file should be provided in order to have routers use it for health checks on the secure connection.\nIf this field is not specified, the router may provide its own destination CA and perform hostname validation using\nthe short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically\nverify."
                              type: "string"
                            insecureEdgeTerminationPolicy:
                              description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While\neach router may make its own decisions on which ports to expose, this is normally port 80.\n\n\n* Allow - traffic is sent to the server on the insecure port (default)\n* Disable - no traffic is allowed on the insecure port.\n* Redirect - clients are redirected to the secure port."
                              type: "string"
                            key:
                              description: "key provides key file contents"
                              type: "string"
                            termination:
                              description: "termination indicates termination type."
                              type: "string"
                          required:
                            - "termination"
                          type: "object"
                        wildcardPolicy:
                          description: "WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed."
                          type: "string"
                      required:
                        - "enabled"
                      type: "object"
                    size:
                      description: "Size is the replica count for the Prometheus StatefulSet."
                      format: "int32"
                      type: "integer"
                  required:
                    - "enabled"
                  type: "object"
                rbac:
                  description: "RBAC defines the RBAC configuration for Argo CD."
                  properties:
                    defaultPolicy:
                      description: "DefaultPolicy is the name of the default role which Argo CD will falls back to, when\nauthorizing API requests (optional). If omitted or empty, users may be still be able to login,\nbut will see no apps, projects, etc..."
                      type: "string"
                    policy:
                      description: "Policy is CSV containing user-defined RBAC policies and role definitions.\nPolicy rules are in the form:\n  p, subject, resource, action, object, effect\nRole definitions and bindings are in the form:\n  g, subject, inherited-subject\nSee https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md for additional information."
                      type: "string"
                    policyMatcherMode:
                      description: "PolicyMatcherMode configures the matchers function mode for casbin.\nThere are two options for this, 'glob' for glob matcher or 'regex' for regex matcher."
                      type: "string"
                    scopes:
                      description: "Scopes controls which OIDC scopes to examine during rbac enforcement (in addition to `sub` scope).\nIf omitted, defaults to: '[groups]'."
                      type: "string"
                  type: "object"
                redis:
                  description: "Redis defines the Redis server options for ArgoCD."
                  properties:
                    autotls:
                      description: "AutoTLS specifies the method to use for automatic TLS configuration for the redis server\nThe value specified here can currently be:\n- openshift - Use the OpenShift service CA to request TLS config"
                      type: "string"
                    disableTLSVerification:
                      description: "DisableTLSVerification defines whether redis server API should be accessed using strict TLS validation"
                      type: "boolean"
                    enabled:
                      description: "Enabled is the flag to enable Redis during ArgoCD installation. (optional, default `true`)"
                      type: "boolean"
                    image:
                      description: "Image is the Redis container image."
                      type: "string"
                    remote:
                      description: "Remote specifies the remote URL of the Redis container. (optional, by default, a local instance managed by the operator is used.)"
                      type: "string"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for Redis."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    version:
                      description: "Version is the Redis container image tag."
                      type: "string"
                  type: "object"
                repo:
                  description: "Repo defines the repo server options for Argo CD."
                  properties:
                    autotls:
                      description: "AutoTLS specifies the method to use for automatic TLS configuration for the repo server\nThe value specified here can currently be:\n- openshift - Use the OpenShift service CA to request TLS config"
                      type: "string"
                    enabled:
                      description: "Enabled is the flag to enable Repo Server during ArgoCD installation. (optional, default `true`)"
                      type: "boolean"
                    env:
                      description: "Env lets you specify environment for repo server pods"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    execTimeout:
                      description: "ExecTimeout specifies the timeout in seconds for tool execution"
                      type: "integer"
                    extraRepoCommandArgs:
                      description: "Extra Command arguments allows users to pass command line arguments to repo server workload. They get added to default command line arguments provided\nby the operator.\nPlease note that the command line arguments provided as part of ExtraRepoCommandArgs will not overwrite the default command line arguments."
                      items:
                        type: "string"
                      type: "array"
                    image:
                      description: "Image is the ArgoCD Repo Server container image."
                      type: "string"
                    initContainers:
                      description: "InitContainers defines the list of initialization containers for the repo server deployment"
                      items:
                        description: "A single application container that you want to run within a pod."
                        properties:
                          args:
                            description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          command:
                            description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          env:
                            description: "List of environment variables to set in the container.\nCannot be updated."
                            items:
                              description: "EnvVar represents an environment variable present in a Container."
                              properties:
                                name:
                                  description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                  type: "string"
                                value:
                                  description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                  type: "string"
                                valueFrom:
                                  description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                  properties:
                                    configMapKeyRef:
                                      description: "Selects a key of a ConfigMap."
                                      properties:
                                        key:
                                          description: "The key to select."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the ConfigMap or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    fieldRef:
                                      description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    secretKeyRef:
                                      description: "Selects a key of a secret in the pod's namespace"
                                      properties:
                                        key:
                                          description: "The key of the secret to select from.  Must be a valid secret key."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          envFrom:
                            description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                            items:
                              description: "EnvFromSource represents the source of a set of ConfigMaps"
                              properties:
                                configMapRef:
                                  description: "The ConfigMap to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                prefix:
                                  description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                  type: "string"
                                secretRef:
                                  description: "The Secret to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                            type: "array"
                          image:
                            description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                            type: "string"
                          imagePullPolicy:
                            description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                            type: "string"
                          lifecycle:
                            description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                            properties:
                              postStart:
                                description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                              preStop:
                                description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                            type: "object"
                          livenessProbe:
                            description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          name:
                            description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                            type: "string"
                          ports:
                            description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                            items:
                              description: "ContainerPort represents a network port in a single container."
                              properties:
                                containerPort:
                                  description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                                  format: "int32"
                                  type: "integer"
                                hostIP:
                                  description: "What host IP to bind the external port to."
                                  type: "string"
                                hostPort:
                                  description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                                  format: "int32"
                                  type: "integer"
                                name:
                                  description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                                  type: "string"
                                protocol:
                                  default: "TCP"
                                  description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                                  type: "string"
                              required:
                                - "containerPort"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "containerPort"
                              - "protocol"
                            x-kubernetes-list-type: "map"
                          readinessProbe:
                            description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          resizePolicy:
                            description: "Resources resize policy for the container."
                            items:
                              description: "ContainerResizePolicy represents resource resize policy for the container."
                              properties:
                                resourceName:
                                  description: "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory."
                                  type: "string"
                                restartPolicy:
                                  description: "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired."
                                  type: "string"
                              required:
                                - "resourceName"
                                - "restartPolicy"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          resources:
                            description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          restartPolicy:
                            description: "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted."
                            type: "string"
                          securityContext:
                            description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                            properties:
                              allowPrivilegeEscalation:
                                description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              capabilities:
                                description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  add:
                                    description: "Added capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                  drop:
                                    description: "Removed capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                type: "object"
                              privileged:
                                description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              procMount:
                                description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "string"
                              readOnlyRootFilesystem:
                                description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              runAsGroup:
                                description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              runAsNonRoot:
                                description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "boolean"
                              runAsUser:
                                description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              seLinuxOptions:
                                description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  level:
                                    description: "Level is SELinux level label that applies to the container."
                                    type: "string"
                                  role:
                                    description: "Role is a SELinux role label that applies to the container."
                                    type: "string"
                                  type:
                                    description: "Type is a SELinux type label that applies to the container."
                                    type: "string"
                                  user:
                                    description: "User is a SELinux user label that applies to the container."
                                    type: "string"
                                type: "object"
                              seccompProfile:
                                description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  localhostProfile:
                                    description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                                    type: "string"
                                  type:
                                    description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                    type: "string"
                                required:
                                  - "type"
                                type: "object"
                              windowsOptions:
                                description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                                properties:
                                  gmsaCredentialSpec:
                                    description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                    type: "string"
                                  gmsaCredentialSpecName:
                                    description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                    type: "string"
                                  hostProcess:
                                    description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                                    type: "boolean"
                                  runAsUserName:
                                    description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                    type: "string"
                                type: "object"
                            type: "object"
                          startupProbe:
                            description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          stdin:
                            description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                            type: "boolean"
                          stdinOnce:
                            description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                            type: "boolean"
                          terminationMessagePath:
                            description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                            type: "string"
                          terminationMessagePolicy:
                            description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                            type: "string"
                          tty:
                            description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                            type: "boolean"
                          volumeDevices:
                            description: "volumeDevices is the list of block devices to be used by the container."
                            items:
                              description: "volumeDevice describes a mapping of a raw block device within a container."
                              properties:
                                devicePath:
                                  description: "devicePath is the path inside of the container that the device will be mapped to."
                                  type: "string"
                                name:
                                  description: "name must match the name of a persistentVolumeClaim in the pod"
                                  type: "string"
                              required:
                                - "devicePath"
                                - "name"
                              type: "object"
                            type: "array"
                          volumeMounts:
                            description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                            items:
                              description: "VolumeMount describes a mounting of a Volume within a container."
                              properties:
                                mountPath:
                                  description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                                  type: "string"
                                mountPropagation:
                                  description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                                  type: "string"
                                name:
                                  description: "This must match the Name of a Volume."
                                  type: "string"
                                readOnly:
                                  description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                                  type: "boolean"
                                subPath:
                                  description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                                  type: "string"
                                subPathExpr:
                                  description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                                  type: "string"
                              required:
                                - "mountPath"
                                - "name"
                              type: "object"
                            type: "array"
                          workingDir:
                            description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    logFormat:
                      description: "LogFormat describes the log format that should be used by the Repo Server. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json."
                      type: "string"
                    logLevel:
                      description: "LogLevel describes the log level that should be used by the Repo Server. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug, info, error, and warn."
                      type: "string"
                    mountsatoken:
                      description: "MountSAToken describes whether you would like to have the Repo server mount the service account token"
                      type: "boolean"
                    remote:
                      description: "Remote specifies the remote URL of the Repo Server container. (optional, by default, a local instance managed by the operator is used.)"
                      type: "string"
                    replicas:
                      description: "Replicas defines the number of replicas for argocd-repo-server. Value should be greater than or equal to 0. Default is nil."
                      format: "int32"
                      type: "integer"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for Redis."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    serviceaccount:
                      description: "ServiceAccount defines the ServiceAccount user that you would like the Repo server to use"
                      type: "string"
                    sidecarContainers:
                      description: "SidecarContainers defines the list of sidecar containers for the repo server deployment"
                      items:
                        description: "A single application container that you want to run within a pod."
                        properties:
                          args:
                            description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          command:
                            description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          env:
                            description: "List of environment variables to set in the container.\nCannot be updated."
                            items:
                              description: "EnvVar represents an environment variable present in a Container."
                              properties:
                                name:
                                  description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                  type: "string"
                                value:
                                  description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                  type: "string"
                                valueFrom:
                                  description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                  properties:
                                    configMapKeyRef:
                                      description: "Selects a key of a ConfigMap."
                                      properties:
                                        key:
                                          description: "The key to select."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the ConfigMap or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    fieldRef:
                                      description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    secretKeyRef:
                                      description: "Selects a key of a secret in the pod's namespace"
                                      properties:
                                        key:
                                          description: "The key of the secret to select from.  Must be a valid secret key."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          envFrom:
                            description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                            items:
                              description: "EnvFromSource represents the source of a set of ConfigMaps"
                              properties:
                                configMapRef:
                                  description: "The ConfigMap to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                prefix:
                                  description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                  type: "string"
                                secretRef:
                                  description: "The Secret to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                            type: "array"
                          image:
                            description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                            type: "string"
                          imagePullPolicy:
                            description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                            type: "string"
                          lifecycle:
                            description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                            properties:
                              postStart:
                                description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                              preStop:
                                description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                            type: "object"
                          livenessProbe:
                            description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          name:
                            description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                            type: "string"
                          ports:
                            description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                            items:
                              description: "ContainerPort represents a network port in a single container."
                              properties:
                                containerPort:
                                  description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                                  format: "int32"
                                  type: "integer"
                                hostIP:
                                  description: "What host IP to bind the external port to."
                                  type: "string"
                                hostPort:
                                  description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                                  format: "int32"
                                  type: "integer"
                                name:
                                  description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                                  type: "string"
                                protocol:
                                  default: "TCP"
                                  description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                                  type: "string"
                              required:
                                - "containerPort"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "containerPort"
                              - "protocol"
                            x-kubernetes-list-type: "map"
                          readinessProbe:
                            description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          resizePolicy:
                            description: "Resources resize policy for the container."
                            items:
                              description: "ContainerResizePolicy represents resource resize policy for the container."
                              properties:
                                resourceName:
                                  description: "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory."
                                  type: "string"
                                restartPolicy:
                                  description: "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired."
                                  type: "string"
                              required:
                                - "resourceName"
                                - "restartPolicy"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          resources:
                            description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          restartPolicy:
                            description: "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted."
                            type: "string"
                          securityContext:
                            description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                            properties:
                              allowPrivilegeEscalation:
                                description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              capabilities:
                                description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  add:
                                    description: "Added capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                  drop:
                                    description: "Removed capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                type: "object"
                              privileged:
                                description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              procMount:
                                description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "string"
                              readOnlyRootFilesystem:
                                description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              runAsGroup:
                                description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              runAsNonRoot:
                                description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "boolean"
                              runAsUser:
                                description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              seLinuxOptions:
                                description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  level:
                                    description: "Level is SELinux level label that applies to the container."
                                    type: "string"
                                  role:
                                    description: "Role is a SELinux role label that applies to the container."
                                    type: "string"
                                  type:
                                    description: "Type is a SELinux type label that applies to the container."
                                    type: "string"
                                  user:
                                    description: "User is a SELinux user label that applies to the container."
                                    type: "string"
                                type: "object"
                              seccompProfile:
                                description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  localhostProfile:
                                    description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                                    type: "string"
                                  type:
                                    description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                    type: "string"
                                required:
                                  - "type"
                                type: "object"
                              windowsOptions:
                                description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                                properties:
                                  gmsaCredentialSpec:
                                    description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                    type: "string"
                                  gmsaCredentialSpecName:
                                    description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                    type: "string"
                                  hostProcess:
                                    description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                                    type: "boolean"
                                  runAsUserName:
                                    description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                    type: "string"
                                type: "object"
                            type: "object"
                          startupProbe:
                            description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          stdin:
                            description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                            type: "boolean"
                          stdinOnce:
                            description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                            type: "boolean"
                          terminationMessagePath:
                            description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                            type: "string"
                          terminationMessagePolicy:
                            description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                            type: "string"
                          tty:
                            description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                            type: "boolean"
                          volumeDevices:
                            description: "volumeDevices is the list of block devices to be used by the container."
                            items:
                              description: "volumeDevice describes a mapping of a raw block device within a container."
                              properties:
                                devicePath:
                                  description: "devicePath is the path inside of the container that the device will be mapped to."
                                  type: "string"
                                name:
                                  description: "name must match the name of a persistentVolumeClaim in the pod"
                                  type: "string"
                              required:
                                - "devicePath"
                                - "name"
                              type: "object"
                            type: "array"
                          volumeMounts:
                            description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                            items:
                              description: "VolumeMount describes a mounting of a Volume within a container."
                              properties:
                                mountPath:
                                  description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                                  type: "string"
                                mountPropagation:
                                  description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                                  type: "string"
                                name:
                                  description: "This must match the Name of a Volume."
                                  type: "string"
                                readOnly:
                                  description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                                  type: "boolean"
                                subPath:
                                  description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                                  type: "string"
                                subPathExpr:
                                  description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                                  type: "string"
                              required:
                                - "mountPath"
                                - "name"
                              type: "object"
                            type: "array"
                          workingDir:
                            description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    verifytls:
                      description: "VerifyTLS defines whether repo server API should be accessed using strict TLS validation"
                      type: "boolean"
                    version:
                      description: "Version is the ArgoCD Repo Server container image tag."
                      type: "string"
                    volumeMounts:
                      description: "VolumeMounts adds volumeMounts to the repo server container"
                      items:
                        description: "VolumeMount describes a mounting of a Volume within a container."
                        properties:
                          mountPath:
                            description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                            type: "string"
                          mountPropagation:
                            description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                            type: "string"
                          name:
                            description: "This must match the Name of a Volume."
                            type: "string"
                          readOnly:
                            description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                            type: "boolean"
                          subPath:
                            description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                            type: "string"
                          subPathExpr:
                            description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                            type: "string"
                        required:
                          - "mountPath"
                          - "name"
                        type: "object"
                      type: "array"
                    volumes:
                      description: "Volumes adds volumes to the repo server deployment"
                      items:
                        description: "Volume represents a named volume in a pod that may be accessed by any container in the pod."
                        properties:
                          awsElasticBlockStore:
                            description: "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              partition:
                                description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                format: "int32"
                                type: "integer"
                              readOnly:
                                description: "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                type: "boolean"
                              volumeID:
                                description: "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          azureDisk:
                            description: "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
                            properties:
                              cachingMode:
                                description: "cachingMode is the Host Caching mode: None, Read Only, Read Write."
                                type: "string"
                              diskName:
                                description: "diskName is the Name of the data disk in the blob storage"
                                type: "string"
                              diskURI:
                                description: "diskURI is the URI of data disk in the blob storage"
                                type: "string"
                              fsType:
                                description: "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              kind:
                                description: "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                                type: "string"
                              readOnly:
                                description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                            required:
                              - "diskName"
                              - "diskURI"
                            type: "object"
                          azureFile:
                            description: "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
                            properties:
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretName:
                                description: "secretName is the  name of secret that contains Azure Storage Account Name and Key"
                                type: "string"
                              shareName:
                                description: "shareName is the azure share Name"
                                type: "string"
                            required:
                              - "secretName"
                              - "shareName"
                            type: "object"
                          cephfs:
                            description: "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
                            properties:
                              monitors:
                                description: "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                items:
                                  type: "string"
                                type: "array"
                              path:
                                description: "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                                type: "string"
                              readOnly:
                                description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "boolean"
                              secretFile:
                                description: "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "string"
                              secretRef:
                                description: "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              user:
                                description: "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "string"
                            required:
                              - "monitors"
                            type: "object"
                          cinder:
                            description: "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "boolean"
                              secretRef:
                                description: "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              volumeID:
                                description: "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          configMap:
                            description: "configMap represents a configMap that should populate this volume"
                            properties:
                              defaultMode:
                                description: "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                items:
                                  description: "Maps a string key to a path within a volume."
                                  properties:
                                    key:
                                      description: "key is the key to project."
                                      type: "string"
                                    mode:
                                      description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                      type: "string"
                                  required:
                                    - "key"
                                    - "path"
                                  type: "object"
                                type: "array"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "optional specify whether the ConfigMap or its keys must be defined"
                                type: "boolean"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          csi:
                            description: "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
                            properties:
                              driver:
                                description: "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
                                type: "string"
                              fsType:
                                description: "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply."
                                type: "string"
                              nodePublishSecretRef:
                                description: "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              readOnly:
                                description: "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write)."
                                type: "boolean"
                              volumeAttributes:
                                additionalProperties:
                                  type: "string"
                                description: "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values."
                                type: "object"
                            required:
                              - "driver"
                            type: "object"
                          downwardAPI:
                            description: "downwardAPI represents downward API about the pod that should populate this volume"
                            properties:
                              defaultMode:
                                description: "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "Items is a list of downward API volume file"
                                items:
                                  description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                  properties:
                                    fieldRef:
                                      description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    mode:
                                      description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                      type: "string"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "path"
                                  type: "object"
                                type: "array"
                            type: "object"
                          emptyDir:
                            description: "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                            properties:
                              medium:
                                description: "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                type: "string"
                              sizeLimit:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                            type: "object"
                          ephemeral:
                            description: "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time."
                            properties:
                              volumeClaimTemplate:
                                description: "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\n\nRequired, must not be nil."
                                properties:
                                  metadata:
                                    description: "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation."
                                    type: "object"
                                  spec:
                                    description: "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
                                    properties:
                                      accessModes:
                                        description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                        items:
                                          type: "string"
                                        type: "array"
                                      dataSource:
                                        description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                                        properties:
                                          apiGroup:
                                            description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                            type: "string"
                                          kind:
                                            description: "Kind is the type of resource being referenced"
                                            type: "string"
                                          name:
                                            description: "Name is the name of resource being referenced"
                                            type: "string"
                                        required:
                                          - "kind"
                                          - "name"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      dataSourceRef:
                                        description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                        properties:
                                          apiGroup:
                                            description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                            type: "string"
                                          kind:
                                            description: "Kind is the type of resource being referenced"
                                            type: "string"
                                          name:
                                            description: "Name is the name of resource being referenced"
                                            type: "string"
                                          namespace:
                                            description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                            type: "string"
                                        required:
                                          - "kind"
                                          - "name"
                                        type: "object"
                                      resources:
                                        description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                        properties:
                                          claims:
                                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                            items:
                                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                              properties:
                                                name:
                                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                  type: "string"
                                              required:
                                                - "name"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-map-keys:
                                              - "name"
                                            x-kubernetes-list-type: "map"
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                        type: "object"
                                      selector:
                                        description: "selector is a label query over volumes to consider for binding."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      storageClassName:
                                        description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                        type: "string"
                                      volumeMode:
                                        description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                                        type: "string"
                                      volumeName:
                                        description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                                        type: "string"
                                    type: "object"
                                required:
                                  - "spec"
                                type: "object"
                            type: "object"
                          fc:
                            description: "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              lun:
                                description: "lun is Optional: FC target lun number"
                                format: "int32"
                                type: "integer"
                              readOnly:
                                description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              targetWWNs:
                                description: "targetWWNs is Optional: FC target worldwide names (WWNs)"
                                items:
                                  type: "string"
                                type: "array"
                              wwids:
                                description: "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          flexVolume:
                            description: "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
                            properties:
                              driver:
                                description: "driver is the name of the driver to use for this volume."
                                type: "string"
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                type: "string"
                              options:
                                additionalProperties:
                                  type: "string"
                                description: "options is Optional: this field holds extra command options if any."
                                type: "object"
                              readOnly:
                                description: "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            required:
                              - "driver"
                            type: "object"
                          flocker:
                            description: "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
                            properties:
                              datasetName:
                                description: "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated"
                                type: "string"
                              datasetUUID:
                                description: "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset"
                                type: "string"
                            type: "object"
                          gcePersistentDisk:
                            description: "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            properties:
                              fsType:
                                description: "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              partition:
                                description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                format: "int32"
                                type: "integer"
                              pdName:
                                description: "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                type: "boolean"
                            required:
                              - "pdName"
                            type: "object"
                          gitRepo:
                            description: "gitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
                            properties:
                              directory:
                                description: "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name."
                                type: "string"
                              repository:
                                description: "repository is the URL"
                                type: "string"
                              revision:
                                description: "revision is the commit hash for the specified revision."
                                type: "string"
                            required:
                              - "repository"
                            type: "object"
                          glusterfs:
                            description: "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md"
                            properties:
                              endpoints:
                                description: "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "string"
                              path:
                                description: "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "boolean"
                            required:
                              - "endpoints"
                              - "path"
                            type: "object"
                          hostPath:
                            description: "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write."
                            properties:
                              path:
                                description: "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                type: "string"
                              type:
                                description: "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                type: "string"
                            required:
                              - "path"
                            type: "object"
                          iscsi:
                            description: "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md"
                            properties:
                              chapAuthDiscovery:
                                description: "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication"
                                type: "boolean"
                              chapAuthSession:
                                description: "chapAuthSession defines whether support iSCSI Session CHAP authentication"
                                type: "boolean"
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              initiatorName:
                                description: "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection."
                                type: "string"
                              iqn:
                                description: "iqn is the target iSCSI Qualified Name."
                                type: "string"
                              iscsiInterface:
                                description: "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp)."
                                type: "string"
                              lun:
                                description: "lun represents iSCSI Target Lun number."
                                format: "int32"
                                type: "integer"
                              portals:
                                description: "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                items:
                                  type: "string"
                                type: "array"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false."
                                type: "boolean"
                              secretRef:
                                description: "secretRef is the CHAP Secret for iSCSI target and initiator authentication"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              targetPortal:
                                description: "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                type: "string"
                            required:
                              - "iqn"
                              - "lun"
                              - "targetPortal"
                            type: "object"
                          name:
                            description: "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: "string"
                          nfs:
                            description: "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            properties:
                              path:
                                description: "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "boolean"
                              server:
                                description: "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "string"
                            required:
                              - "path"
                              - "server"
                            type: "object"
                          persistentVolumeClaim:
                            description: "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                            properties:
                              claimName:
                                description: "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                                type: "string"
                              readOnly:
                                description: "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false."
                                type: "boolean"
                            required:
                              - "claimName"
                            type: "object"
                          photonPersistentDisk:
                            description: "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              pdID:
                                description: "pdID is the ID that identifies Photon Controller persistent disk"
                                type: "string"
                            required:
                              - "pdID"
                            type: "object"
                          portworxVolume:
                            description: "portworxVolume represents a portworx volume attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              volumeID:
                                description: "volumeID uniquely identifies a Portworx volume"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          projected:
                            description: "projected items for all in one resources secrets, configmaps, and downward API"
                            properties:
                              defaultMode:
                                description: "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              sources:
                                description: "sources is the list of volume projections"
                                items:
                                  description: "Projection that may be projected along with other supported volume types"
                                  properties:
                                    configMap:
                                      description: "configMap information about the configMap data to project"
                                      properties:
                                        items:
                                          description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                          items:
                                            description: "Maps a string key to a path within a volume."
                                            properties:
                                              key:
                                                description: "key is the key to project."
                                                type: "string"
                                              mode:
                                                description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                type: "string"
                                            required:
                                              - "key"
                                              - "path"
                                            type: "object"
                                          type: "array"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "optional specify whether the ConfigMap or its keys must be defined"
                                          type: "boolean"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    downwardAPI:
                                      description: "downwardAPI information about the downwardAPI data to project"
                                      properties:
                                        items:
                                          description: "Items is a list of DownwardAPIVolume file"
                                          items:
                                            description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                            properties:
                                              fieldRef:
                                                description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                                properties:
                                                  apiVersion:
                                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                    type: "string"
                                                  fieldPath:
                                                    description: "Path of the field to select in the specified API version."
                                                    type: "string"
                                                required:
                                                  - "fieldPath"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              mode:
                                                description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                                type: "string"
                                              resourceFieldRef:
                                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                                properties:
                                                  containerName:
                                                    description: "Container name: required for volumes, optional for env vars"
                                                    type: "string"
                                                  divisor:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: "Required: resource to select"
                                                    type: "string"
                                                required:
                                                  - "resource"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                            required:
                                              - "path"
                                            type: "object"
                                          type: "array"
                                      type: "object"
                                    secret:
                                      description: "secret information about the secret data to project"
                                      properties:
                                        items:
                                          description: "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                          items:
                                            description: "Maps a string key to a path within a volume."
                                            properties:
                                              key:
                                                description: "key is the key to project."
                                                type: "string"
                                              mode:
                                                description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                type: "string"
                                            required:
                                              - "key"
                                              - "path"
                                            type: "object"
                                          type: "array"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "optional field specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    serviceAccountToken:
                                      description: "serviceAccountToken is information about the serviceAccountToken data to project"
                                      properties:
                                        audience:
                                          description: "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver."
                                          type: "string"
                                        expirationSeconds:
                                          description: "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes."
                                          format: "int64"
                                          type: "integer"
                                        path:
                                          description: "path is the path relative to the mount point of the file to project the\ntoken into."
                                          type: "string"
                                      required:
                                        - "path"
                                      type: "object"
                                  type: "object"
                                type: "array"
                            type: "object"
                          quobyte:
                            description: "quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
                            properties:
                              group:
                                description: "group to map volume access to\nDefault is no group"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false."
                                type: "boolean"
                              registry:
                                description: "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
                                type: "string"
                              tenant:
                                description: "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin"
                                type: "string"
                              user:
                                description: "user to map volume access to\nDefaults to serivceaccount user"
                                type: "string"
                              volume:
                                description: "volume is a string that references an already created Quobyte volume by name."
                                type: "string"
                            required:
                              - "registry"
                              - "volume"
                            type: "object"
                          rbd:
                            description: "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              image:
                                description: "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              keyring:
                                description: "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              monitors:
                                description: "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                items:
                                  type: "string"
                                type: "array"
                              pool:
                                description: "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "boolean"
                              secretRef:
                                description: "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              user:
                                description: "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                            required:
                              - "image"
                              - "monitors"
                            type: "object"
                          scaleIO:
                            description: "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\"."
                                type: "string"
                              gateway:
                                description: "gateway is the host address of the ScaleIO API Gateway."
                                type: "string"
                              protectionDomain:
                                description: "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage."
                                type: "string"
                              readOnly:
                                description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              sslEnabled:
                                description: "sslEnabled Flag enable/disable SSL communication with Gateway, default false"
                                type: "boolean"
                              storageMode:
                                description: "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned."
                                type: "string"
                              storagePool:
                                description: "storagePool is the ScaleIO Storage Pool associated with the protection domain."
                                type: "string"
                              system:
                                description: "system is the name of the storage system as configured in ScaleIO."
                                type: "string"
                              volumeName:
                                description: "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
                                type: "string"
                            required:
                              - "gateway"
                              - "secretRef"
                              - "system"
                            type: "object"
                          secret:
                            description: "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                            properties:
                              defaultMode:
                                description: "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                items:
                                  description: "Maps a string key to a path within a volume."
                                  properties:
                                    key:
                                      description: "key is the key to project."
                                      type: "string"
                                    mode:
                                      description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                      type: "string"
                                  required:
                                    - "key"
                                    - "path"
                                  type: "object"
                                type: "array"
                              optional:
                                description: "optional field specify whether the Secret or its keys must be defined"
                                type: "boolean"
                              secretName:
                                description: "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                type: "string"
                            type: "object"
                          storageos:
                            description: "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              volumeName:
                                description: "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
                                type: "string"
                              volumeNamespace:
                                description: "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created."
                                type: "string"
                            type: "object"
                          vsphereVolume:
                            description: "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              storagePolicyID:
                                description: "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
                                type: "string"
                              storagePolicyName:
                                description: "storagePolicyName is the storage Policy Based Management (SPBM) profile name."
                                type: "string"
                              volumePath:
                                description: "volumePath is the path that identifies vSphere volume vmdk"
                                type: "string"
                            required:
                              - "volumePath"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                  type: "object"
                repositoryCredentials:
                  description: "RepositoryCredentials are the Git pull credentials to configure Argo CD with upon creation of the cluster."
                  type: "string"
                resourceActions:
                  description: "ResourceActions customizes resource action behavior."
                  items:
                    description: "Resource Customization for custom action"
                    properties:
                      action:
                        type: "string"
                      group:
                        type: "string"
                      kind:
                        type: "string"
                    type: "object"
                  type: "array"
                resourceExclusions:
                  description: "ResourceExclusions is used to completely ignore entire classes of resource group/kinds."
                  type: "string"
                resourceHealthChecks:
                  description: "ResourceHealthChecks customizes resource health check behavior."
                  items:
                    description: "Resource Customization for custom health check"
                    properties:
                      check:
                        type: "string"
                      group:
                        type: "string"
                      kind:
                        type: "string"
                    type: "object"
                  type: "array"
                resourceIgnoreDifferences:
                  description: "ResourceIgnoreDifferences customizes resource ignore difference behavior."
                  properties:
                    all:
                      properties:
                        jqPathExpressions:
                          items:
                            type: "string"
                          type: "array"
                        jsonPointers:
                          items:
                            type: "string"
                          type: "array"
                        managedFieldsManagers:
                          items:
                            type: "string"
                          type: "array"
                      type: "object"
                    resourceIdentifiers:
                      items:
                        description: "Resource Customization fields for ignore difference"
                        properties:
                          customization:
                            properties:
                              jqPathExpressions:
                                items:
                                  type: "string"
                                type: "array"
                              jsonPointers:
                                items:
                                  type: "string"
                                type: "array"
                              managedFieldsManagers:
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          group:
                            type: "string"
                          kind:
                            type: "string"
                        type: "object"
                      type: "array"
                  type: "object"
                resourceInclusions:
                  description: "ResourceInclusions is used to only include specific group/kinds in the\nreconciliation process."
                  type: "string"
                resourceTrackingMethod:
                  description: "ResourceTrackingMethod defines how Argo CD should track resources that it manages"
                  type: "string"
                server:
                  description: "Server defines the options for the ArgoCD Server component."
                  properties:
                    autoscale:
                      description: "Autoscale defines the autoscale options for the Argo CD Server component."
                      properties:
                        enabled:
                          description: "Enabled will toggle autoscaling support for the Argo CD Server component."
                          type: "boolean"
                        hpa:
                          description: "HPA defines the HorizontalPodAutoscaler options for the Argo CD Server component."
                          properties:
                            maxReplicas:
                              description: "maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas."
                              format: "int32"
                              type: "integer"
                            minReplicas:
                              description: "minReplicas is the lower limit for the number of replicas to which the autoscaler\ncan scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the\nalpha feature gate HPAScaleToZero is enabled and at least one Object or External\nmetric is configured.  Scaling is active as long as at least one metric value is\navailable."
                              format: "int32"
                              type: "integer"
                            scaleTargetRef:
                              description: "reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption\nand will set the desired number of pods by using its Scale subresource."
                              properties:
                                apiVersion:
                                  description: "apiVersion is the API version of the referent"
                                  type: "string"
                                kind:
                                  description: "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                  type: "string"
                                name:
                                  description: "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                  type: "string"
                              required:
                                - "kind"
                                - "name"
                              type: "object"
                              x-kubernetes-map-type: "atomic"
                            targetCPUUtilizationPercentage:
                              description: "targetCPUUtilizationPercentage is the target average CPU utilization (represented as a percentage of requested CPU) over all the pods;\nif not specified the default autoscaling policy will be used."
                              format: "int32"
                              type: "integer"
                          required:
                            - "maxReplicas"
                            - "scaleTargetRef"
                          type: "object"
                      required:
                        - "enabled"
                      type: "object"
                    enabled:
                      description: "Enabled is the flag to enable ArgoCD Server during ArgoCD installation. (optional, default `true`)"
                      type: "boolean"
                    env:
                      description: "Env lets you specify environment for API server pods"
                      items:
                        description: "EnvVar represents an environment variable present in a Container."
                        properties:
                          name:
                            description: "Name of the environment variable. Must be a C_IDENTIFIER."
                            type: "string"
                          value:
                            description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                            type: "string"
                          valueFrom:
                            description: "Source for the environment variable's value. Cannot be used if value is not empty."
                            properties:
                              configMapKeyRef:
                                description: "Selects a key of a ConfigMap."
                                properties:
                                  key:
                                    description: "The key to select."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the ConfigMap or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                properties:
                                  apiVersion:
                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                    type: "string"
                                  fieldPath:
                                    description: "Path of the field to select in the specified API version."
                                    type: "string"
                                required:
                                  - "fieldPath"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: "string"
                                  divisor:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: "string"
                                required:
                                  - "resource"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              secretKeyRef:
                                description: "Selects a key of a secret in the pod's namespace"
                                properties:
                                  key:
                                    description: "The key of the secret to select from.  Must be a valid secret key."
                                    type: "string"
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                  optional:
                                    description: "Specify whether the Secret or its key must be defined"
                                    type: "boolean"
                                required:
                                  - "key"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    extraCommandArgs:
                      description: "Extra Command arguments that would append to the Argo CD server command.\nExtraCommandArgs will not be added, if one of these commands is already part of the server command\nwith same or different value."
                      items:
                        type: "string"
                      type: "array"
                    grpc:
                      description: "GRPC defines the state for the Argo CD Server GRPC options."
                      properties:
                        host:
                          description: "Host is the hostname to use for Ingress/Route resources."
                          type: "string"
                        ingress:
                          description: "Ingress defines the desired state for the Argo CD Server GRPC Ingress."
                          properties:
                            annotations:
                              additionalProperties:
                                type: "string"
                              description: "Annotations is the map of annotations to apply to the Ingress."
                              type: "object"
                            enabled:
                              description: "Enabled will toggle the creation of the Ingress."
                              type: "boolean"
                            ingressClassName:
                              description: "IngressClassName for the Ingress resource."
                              type: "string"
                            path:
                              description: "Path used for the Ingress resource."
                              type: "string"
                            tls:
                              description: "TLS configuration. Currently the Ingress only supports a single TLS\nport, 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI."
                              items:
                                description: "IngressTLS describes the transport layer security associated with an ingress."
                                properties:
                                  hosts:
                                    description: "hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
                                    items:
                                      type: "string"
                                    type: "array"
                                    x-kubernetes-list-type: "atomic"
                                  secretName:
                                    description: "secretName is the name of the secret used to terminate TLS traffic on\nport 443. Field is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the \"Host\" header is used for routing."
                                    type: "string"
                                type: "object"
                              type: "array"
                          required:
                            - "enabled"
                          type: "object"
                      type: "object"
                    host:
                      description: "Host is the hostname to use for Ingress/Route resources."
                      type: "string"
                    ingress:
                      description: "Ingress defines the desired state for an Ingress for the Argo CD Server component."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is the map of annotations to apply to the Ingress."
                          type: "object"
                        enabled:
                          description: "Enabled will toggle the creation of the Ingress."
                          type: "boolean"
                        ingressClassName:
                          description: "IngressClassName for the Ingress resource."
                          type: "string"
                        path:
                          description: "Path used for the Ingress resource."
                          type: "string"
                        tls:
                          description: "TLS configuration. Currently the Ingress only supports a single TLS\nport, 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI."
                          items:
                            description: "IngressTLS describes the transport layer security associated with an ingress."
                            properties:
                              hosts:
                                description: "hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified."
                                items:
                                  type: "string"
                                type: "array"
                                x-kubernetes-list-type: "atomic"
                              secretName:
                                description: "secretName is the name of the secret used to terminate TLS traffic on\nport 443. Field is left optional to allow TLS routing based on SNI\nhostname alone. If the SNI host in a listener conflicts with the \"Host\"\nheader field used by an IngressRule, the SNI host is used for termination\nand value of the \"Host\" header is used for routing."
                                type: "string"
                            type: "object"
                          type: "array"
                      required:
                        - "enabled"
                      type: "object"
                    initContainers:
                      description: "InitContainers defines the list of initialization containers for the Argo CD Server component."
                      items:
                        description: "A single application container that you want to run within a pod."
                        properties:
                          args:
                            description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          command:
                            description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          env:
                            description: "List of environment variables to set in the container.\nCannot be updated."
                            items:
                              description: "EnvVar represents an environment variable present in a Container."
                              properties:
                                name:
                                  description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                  type: "string"
                                value:
                                  description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                  type: "string"
                                valueFrom:
                                  description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                  properties:
                                    configMapKeyRef:
                                      description: "Selects a key of a ConfigMap."
                                      properties:
                                        key:
                                          description: "The key to select."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the ConfigMap or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    fieldRef:
                                      description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    secretKeyRef:
                                      description: "Selects a key of a secret in the pod's namespace"
                                      properties:
                                        key:
                                          description: "The key of the secret to select from.  Must be a valid secret key."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          envFrom:
                            description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                            items:
                              description: "EnvFromSource represents the source of a set of ConfigMaps"
                              properties:
                                configMapRef:
                                  description: "The ConfigMap to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                prefix:
                                  description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                  type: "string"
                                secretRef:
                                  description: "The Secret to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                            type: "array"
                          image:
                            description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                            type: "string"
                          imagePullPolicy:
                            description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                            type: "string"
                          lifecycle:
                            description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                            properties:
                              postStart:
                                description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                              preStop:
                                description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                            type: "object"
                          livenessProbe:
                            description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          name:
                            description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                            type: "string"
                          ports:
                            description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                            items:
                              description: "ContainerPort represents a network port in a single container."
                              properties:
                                containerPort:
                                  description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                                  format: "int32"
                                  type: "integer"
                                hostIP:
                                  description: "What host IP to bind the external port to."
                                  type: "string"
                                hostPort:
                                  description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                                  format: "int32"
                                  type: "integer"
                                name:
                                  description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                                  type: "string"
                                protocol:
                                  default: "TCP"
                                  description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                                  type: "string"
                              required:
                                - "containerPort"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "containerPort"
                              - "protocol"
                            x-kubernetes-list-type: "map"
                          readinessProbe:
                            description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          resizePolicy:
                            description: "Resources resize policy for the container."
                            items:
                              description: "ContainerResizePolicy represents resource resize policy for the container."
                              properties:
                                resourceName:
                                  description: "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory."
                                  type: "string"
                                restartPolicy:
                                  description: "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired."
                                  type: "string"
                              required:
                                - "resourceName"
                                - "restartPolicy"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          resources:
                            description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          restartPolicy:
                            description: "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted."
                            type: "string"
                          securityContext:
                            description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                            properties:
                              allowPrivilegeEscalation:
                                description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              capabilities:
                                description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  add:
                                    description: "Added capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                  drop:
                                    description: "Removed capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                type: "object"
                              privileged:
                                description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              procMount:
                                description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "string"
                              readOnlyRootFilesystem:
                                description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              runAsGroup:
                                description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              runAsNonRoot:
                                description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "boolean"
                              runAsUser:
                                description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              seLinuxOptions:
                                description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  level:
                                    description: "Level is SELinux level label that applies to the container."
                                    type: "string"
                                  role:
                                    description: "Role is a SELinux role label that applies to the container."
                                    type: "string"
                                  type:
                                    description: "Type is a SELinux type label that applies to the container."
                                    type: "string"
                                  user:
                                    description: "User is a SELinux user label that applies to the container."
                                    type: "string"
                                type: "object"
                              seccompProfile:
                                description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  localhostProfile:
                                    description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                                    type: "string"
                                  type:
                                    description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                    type: "string"
                                required:
                                  - "type"
                                type: "object"
                              windowsOptions:
                                description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                                properties:
                                  gmsaCredentialSpec:
                                    description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                    type: "string"
                                  gmsaCredentialSpecName:
                                    description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                    type: "string"
                                  hostProcess:
                                    description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                                    type: "boolean"
                                  runAsUserName:
                                    description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                    type: "string"
                                type: "object"
                            type: "object"
                          startupProbe:
                            description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          stdin:
                            description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                            type: "boolean"
                          stdinOnce:
                            description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                            type: "boolean"
                          terminationMessagePath:
                            description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                            type: "string"
                          terminationMessagePolicy:
                            description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                            type: "string"
                          tty:
                            description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                            type: "boolean"
                          volumeDevices:
                            description: "volumeDevices is the list of block devices to be used by the container."
                            items:
                              description: "volumeDevice describes a mapping of a raw block device within a container."
                              properties:
                                devicePath:
                                  description: "devicePath is the path inside of the container that the device will be mapped to."
                                  type: "string"
                                name:
                                  description: "name must match the name of a persistentVolumeClaim in the pod"
                                  type: "string"
                              required:
                                - "devicePath"
                                - "name"
                              type: "object"
                            type: "array"
                          volumeMounts:
                            description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                            items:
                              description: "VolumeMount describes a mounting of a Volume within a container."
                              properties:
                                mountPath:
                                  description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                                  type: "string"
                                mountPropagation:
                                  description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                                  type: "string"
                                name:
                                  description: "This must match the Name of a Volume."
                                  type: "string"
                                readOnly:
                                  description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                                  type: "boolean"
                                subPath:
                                  description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                                  type: "string"
                                subPathExpr:
                                  description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                                  type: "string"
                              required:
                                - "mountPath"
                                - "name"
                              type: "object"
                            type: "array"
                          workingDir:
                            description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    insecure:
                      description: "Insecure toggles the insecure flag."
                      type: "boolean"
                    logFormat:
                      description: "LogFormat refers to the log level to be used by the ArgoCD Server component. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json."
                      type: "string"
                    logLevel:
                      description: "LogLevel refers to the log level to be used by the ArgoCD Server component. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug, info, error, and warn."
                      type: "string"
                    replicas:
                      description: "Replicas defines the number of replicas for argocd-server. Default is nil. Value should be greater than or equal to 0. Value will be ignored if Autoscaler is enabled."
                      format: "int32"
                      type: "integer"
                    resources:
                      description: "Resources defines the Compute Resources required by the container for the Argo CD server component."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    route:
                      description: "Route defines the desired state for an OpenShift Route for the Argo CD Server component."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is the map of annotations to use for the Route resource."
                          type: "object"
                        enabled:
                          description: "Enabled will toggle the creation of the OpenShift Route."
                          type: "boolean"
                        labels:
                          additionalProperties:
                            type: "string"
                          description: "Labels is the map of labels to use for the Route resource"
                          type: "object"
                        path:
                          description: "Path the router watches for, to route traffic for to the service."
                          type: "string"
                        tls:
                          description: "TLS provides the ability to configure certificates and termination for the Route."
                          properties:
                            caCertificate:
                              description: "caCertificate provides the cert authority certificate contents"
                              type: "string"
                            certificate:
                              description: "certificate provides certificate contents"
                              type: "string"
                            destinationCACertificate:
                              description: "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt\ntermination this file should be provided in order to have routers use it for health checks on the secure connection.\nIf this field is not specified, the router may provide its own destination CA and perform hostname validation using\nthe short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically\nverify."
                              type: "string"
                            insecureEdgeTerminationPolicy:
                              description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While\neach router may make its own decisions on which ports to expose, this is normally port 80.\n\n\n* Allow - traffic is sent to the server on the insecure port (default)\n* Disable - no traffic is allowed on the insecure port.\n* Redirect - clients are redirected to the secure port."
                              type: "string"
                            key:
                              description: "key provides key file contents"
                              type: "string"
                            termination:
                              description: "termination indicates termination type."
                              type: "string"
                          required:
                            - "termination"
                          type: "object"
                        wildcardPolicy:
                          description: "WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed."
                          type: "string"
                      required:
                        - "enabled"
                      type: "object"
                    service:
                      description: "Service defines the options for the Service backing the ArgoCD Server component."
                      properties:
                        type:
                          description: "Type is the ServiceType to use for the Service resource."
                          type: "string"
                      required:
                        - "type"
                      type: "object"
                    sidecarContainers:
                      description: "SidecarContainers defines the list of sidecar containers for the server deployment"
                      items:
                        description: "A single application container that you want to run within a pod."
                        properties:
                          args:
                            description: "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          command:
                            description: "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
                            items:
                              type: "string"
                            type: "array"
                          env:
                            description: "List of environment variables to set in the container.\nCannot be updated."
                            items:
                              description: "EnvVar represents an environment variable present in a Container."
                              properties:
                                name:
                                  description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                  type: "string"
                                value:
                                  description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                  type: "string"
                                valueFrom:
                                  description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                  properties:
                                    configMapKeyRef:
                                      description: "Selects a key of a ConfigMap."
                                      properties:
                                        key:
                                          description: "The key to select."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the ConfigMap or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    fieldRef:
                                      description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    secretKeyRef:
                                      description: "Selects a key of a secret in the pod's namespace"
                                      properties:
                                        key:
                                          description: "The key of the secret to select from.  Must be a valid secret key."
                                          type: "string"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "Specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      required:
                                        - "key"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  type: "object"
                              required:
                                - "name"
                              type: "object"
                            type: "array"
                          envFrom:
                            description: "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated."
                            items:
                              description: "EnvFromSource represents the source of a set of ConfigMaps"
                              properties:
                                configMapRef:
                                  description: "The ConfigMap to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the ConfigMap must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                                prefix:
                                  description: "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                  type: "string"
                                secretRef:
                                  description: "The Secret to select from"
                                  properties:
                                    name:
                                      description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: "string"
                                    optional:
                                      description: "Specify whether the Secret must be defined"
                                      type: "boolean"
                                  type: "object"
                                  x-kubernetes-map-type: "atomic"
                              type: "object"
                            type: "array"
                          image:
                            description: "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets."
                            type: "string"
                          imagePullPolicy:
                            description: "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                            type: "string"
                          lifecycle:
                            description: "Actions that the management system should take in response to container lifecycle events.\nCannot be updated."
                            properties:
                              postStart:
                                description: "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                              preStop:
                                description: "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                                properties:
                                  exec:
                                    description: "Exec specifies the action to take."
                                    properties:
                                      command:
                                        description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                        items:
                                          type: "string"
                                        type: "array"
                                    type: "object"
                                  httpGet:
                                    description: "HTTPGet specifies the http request to perform."
                                    properties:
                                      host:
                                        description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                        type: "string"
                                      httpHeaders:
                                        description: "Custom headers to set in the request. HTTP allows repeated headers."
                                        items:
                                          description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                          properties:
                                            name:
                                              description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                              type: "string"
                                            value:
                                              description: "The header field value"
                                              type: "string"
                                          required:
                                            - "name"
                                            - "value"
                                          type: "object"
                                        type: "array"
                                      path:
                                        description: "Path to access on the HTTP server."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                        type: "string"
                                    required:
                                      - "port"
                                    type: "object"
                                  tcpSocket:
                                    description: "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified."
                                    properties:
                                      host:
                                        description: "Optional: Host name to connect to, defaults to the pod IP."
                                        type: "string"
                                      port:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - "port"
                                    type: "object"
                                type: "object"
                            type: "object"
                          livenessProbe:
                            description: "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          name:
                            description: "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                            type: "string"
                          ports:
                            description: "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated."
                            items:
                              description: "ContainerPort represents a network port in a single container."
                              properties:
                                containerPort:
                                  description: "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                                  format: "int32"
                                  type: "integer"
                                hostIP:
                                  description: "What host IP to bind the external port to."
                                  type: "string"
                                hostPort:
                                  description: "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this."
                                  format: "int32"
                                  type: "integer"
                                name:
                                  description: "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services."
                                  type: "string"
                                protocol:
                                  default: "TCP"
                                  description: "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\"."
                                  type: "string"
                              required:
                                - "containerPort"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-map-keys:
                              - "containerPort"
                              - "protocol"
                            x-kubernetes-list-type: "map"
                          readinessProbe:
                            description: "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          resizePolicy:
                            description: "Resources resize policy for the container."
                            items:
                              description: "ContainerResizePolicy represents resource resize policy for the container."
                              properties:
                                resourceName:
                                  description: "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory."
                                  type: "string"
                                restartPolicy:
                                  description: "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired."
                                  type: "string"
                              required:
                                - "resourceName"
                                - "restartPolicy"
                              type: "object"
                            type: "array"
                            x-kubernetes-list-type: "atomic"
                          resources:
                            description: "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            properties:
                              claims:
                                description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                items:
                                  description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                  properties:
                                    name:
                                      description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                      type: "string"
                                  required:
                                    - "name"
                                  type: "object"
                                type: "array"
                                x-kubernetes-list-map-keys:
                                  - "name"
                                x-kubernetes-list-type: "map"
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: "integer"
                                    - type: "string"
                                  pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                  x-kubernetes-int-or-string: true
                                description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                type: "object"
                            type: "object"
                          restartPolicy:
                            description: "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted."
                            type: "string"
                          securityContext:
                            description: "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                            properties:
                              allowPrivilegeEscalation:
                                description: "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              capabilities:
                                description: "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  add:
                                    description: "Added capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                  drop:
                                    description: "Removed capabilities"
                                    items:
                                      description: "Capability represent POSIX capabilities type"
                                      type: "string"
                                    type: "array"
                                type: "object"
                              privileged:
                                description: "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              procMount:
                                description: "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "string"
                              readOnlyRootFilesystem:
                                description: "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows."
                                type: "boolean"
                              runAsGroup:
                                description: "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              runAsNonRoot:
                                description: "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                type: "boolean"
                              runAsUser:
                                description: "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                format: "int64"
                                type: "integer"
                              seLinuxOptions:
                                description: "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  level:
                                    description: "Level is SELinux level label that applies to the container."
                                    type: "string"
                                  role:
                                    description: "Role is a SELinux role label that applies to the container."
                                    type: "string"
                                  type:
                                    description: "Type is a SELinux type label that applies to the container."
                                    type: "string"
                                  user:
                                    description: "User is a SELinux user label that applies to the container."
                                    type: "string"
                                type: "object"
                              seccompProfile:
                                description: "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows."
                                properties:
                                  localhostProfile:
                                    description: "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type."
                                    type: "string"
                                  type:
                                    description: "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied."
                                    type: "string"
                                required:
                                  - "type"
                                type: "object"
                              windowsOptions:
                                description: "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux."
                                properties:
                                  gmsaCredentialSpec:
                                    description: "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field."
                                    type: "string"
                                  gmsaCredentialSpecName:
                                    description: "GMSACredentialSpecName is the name of the GMSA credential spec to use."
                                    type: "string"
                                  hostProcess:
                                    description: "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true."
                                    type: "boolean"
                                  runAsUserName:
                                    description: "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence."
                                    type: "string"
                                type: "object"
                            type: "object"
                          startupProbe:
                            description: "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            properties:
                              exec:
                                description: "Exec specifies the action to take."
                                properties:
                                  command:
                                    description: "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy."
                                    items:
                                      type: "string"
                                    type: "array"
                                type: "object"
                              failureThreshold:
                                description: "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              grpc:
                                description: "GRPC specifies an action involving a GRPC port."
                                properties:
                                  port:
                                    description: "Port number of the gRPC service. Number must be in the range 1 to 65535."
                                    format: "int32"
                                    type: "integer"
                                  service:
                                    description: "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              httpGet:
                                description: "HTTPGet specifies the http request to perform."
                                properties:
                                  host:
                                    description: "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead."
                                    type: "string"
                                  httpHeaders:
                                    description: "Custom headers to set in the request. HTTP allows repeated headers."
                                    items:
                                      description: "HTTPHeader describes a custom header to be used in HTTP probes"
                                      properties:
                                        name:
                                          description: "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                                          type: "string"
                                        value:
                                          description: "The header field value"
                                          type: "string"
                                      required:
                                        - "name"
                                        - "value"
                                      type: "object"
                                    type: "array"
                                  path:
                                    description: "Path to access on the HTTP server."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: "Scheme to use for connecting to the host.\nDefaults to HTTP."
                                    type: "string"
                                required:
                                  - "port"
                                type: "object"
                              initialDelaySeconds:
                                description: "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                              periodSeconds:
                                description: "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              successThreshold:
                                description: "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1."
                                format: "int32"
                                type: "integer"
                              tcpSocket:
                                description: "TCPSocket specifies an action involving a TCP port."
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: "string"
                                  port:
                                    anyOf:
                                      - type: "integer"
                                      - type: "string"
                                    description: "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
                                    x-kubernetes-int-or-string: true
                                required:
                                  - "port"
                                type: "object"
                              terminationGracePeriodSeconds:
                                description: "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset."
                                format: "int64"
                                type: "integer"
                              timeoutSeconds:
                                description: "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                format: "int32"
                                type: "integer"
                            type: "object"
                          stdin:
                            description: "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false."
                            type: "boolean"
                          stdinOnce:
                            description: "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false"
                            type: "boolean"
                          terminationMessagePath:
                            description: "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated."
                            type: "string"
                          terminationMessagePolicy:
                            description: "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated."
                            type: "string"
                          tty:
                            description: "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false."
                            type: "boolean"
                          volumeDevices:
                            description: "volumeDevices is the list of block devices to be used by the container."
                            items:
                              description: "volumeDevice describes a mapping of a raw block device within a container."
                              properties:
                                devicePath:
                                  description: "devicePath is the path inside of the container that the device will be mapped to."
                                  type: "string"
                                name:
                                  description: "name must match the name of a persistentVolumeClaim in the pod"
                                  type: "string"
                              required:
                                - "devicePath"
                                - "name"
                              type: "object"
                            type: "array"
                          volumeMounts:
                            description: "Pod volumes to mount into the container's filesystem.\nCannot be updated."
                            items:
                              description: "VolumeMount describes a mounting of a Volume within a container."
                              properties:
                                mountPath:
                                  description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                                  type: "string"
                                mountPropagation:
                                  description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                                  type: "string"
                                name:
                                  description: "This must match the Name of a Volume."
                                  type: "string"
                                readOnly:
                                  description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                                  type: "boolean"
                                subPath:
                                  description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                                  type: "string"
                                subPathExpr:
                                  description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                                  type: "string"
                              required:
                                - "mountPath"
                                - "name"
                              type: "object"
                            type: "array"
                          workingDir:
                            description: "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated."
                            type: "string"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                    volumeMounts:
                      description: "VolumeMounts adds volumeMounts to the Argo CD Server container."
                      items:
                        description: "VolumeMount describes a mounting of a Volume within a container."
                        properties:
                          mountPath:
                            description: "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                            type: "string"
                          mountPropagation:
                            description: "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10."
                            type: "string"
                          name:
                            description: "This must match the Name of a Volume."
                            type: "string"
                          readOnly:
                            description: "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false."
                            type: "boolean"
                          subPath:
                            description: "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root)."
                            type: "string"
                          subPathExpr:
                            description: "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive."
                            type: "string"
                        required:
                          - "mountPath"
                          - "name"
                        type: "object"
                      type: "array"
                    volumes:
                      description: "Volumes adds volumes to the Argo CD Server container."
                      items:
                        description: "Volume represents a named volume in a pod that may be accessed by any container in the pod."
                        properties:
                          awsElasticBlockStore:
                            description: "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              partition:
                                description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                format: "int32"
                                type: "integer"
                              readOnly:
                                description: "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                type: "boolean"
                              volumeID:
                                description: "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          azureDisk:
                            description: "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
                            properties:
                              cachingMode:
                                description: "cachingMode is the Host Caching mode: None, Read Only, Read Write."
                                type: "string"
                              diskName:
                                description: "diskName is the Name of the data disk in the blob storage"
                                type: "string"
                              diskURI:
                                description: "diskURI is the URI of data disk in the blob storage"
                                type: "string"
                              fsType:
                                description: "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              kind:
                                description: "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                                type: "string"
                              readOnly:
                                description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                            required:
                              - "diskName"
                              - "diskURI"
                            type: "object"
                          azureFile:
                            description: "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
                            properties:
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretName:
                                description: "secretName is the  name of secret that contains Azure Storage Account Name and Key"
                                type: "string"
                              shareName:
                                description: "shareName is the azure share Name"
                                type: "string"
                            required:
                              - "secretName"
                              - "shareName"
                            type: "object"
                          cephfs:
                            description: "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
                            properties:
                              monitors:
                                description: "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                items:
                                  type: "string"
                                type: "array"
                              path:
                                description: "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                                type: "string"
                              readOnly:
                                description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "boolean"
                              secretFile:
                                description: "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "string"
                              secretRef:
                                description: "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              user:
                                description: "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                                type: "string"
                            required:
                              - "monitors"
                            type: "object"
                          cinder:
                            description: "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "boolean"
                              secretRef:
                                description: "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              volumeID:
                                description: "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          configMap:
                            description: "configMap represents a configMap that should populate this volume"
                            properties:
                              defaultMode:
                                description: "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                items:
                                  description: "Maps a string key to a path within a volume."
                                  properties:
                                    key:
                                      description: "key is the key to project."
                                      type: "string"
                                    mode:
                                      description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                      type: "string"
                                  required:
                                    - "key"
                                    - "path"
                                  type: "object"
                                type: "array"
                              name:
                                description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                type: "string"
                              optional:
                                description: "optional specify whether the ConfigMap or its keys must be defined"
                                type: "boolean"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          csi:
                            description: "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
                            properties:
                              driver:
                                description: "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
                                type: "string"
                              fsType:
                                description: "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply."
                                type: "string"
                              nodePublishSecretRef:
                                description: "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              readOnly:
                                description: "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write)."
                                type: "boolean"
                              volumeAttributes:
                                additionalProperties:
                                  type: "string"
                                description: "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values."
                                type: "object"
                            required:
                              - "driver"
                            type: "object"
                          downwardAPI:
                            description: "downwardAPI represents downward API about the pod that should populate this volume"
                            properties:
                              defaultMode:
                                description: "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "Items is a list of downward API volume file"
                                items:
                                  description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                  properties:
                                    fieldRef:
                                      description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                      properties:
                                        apiVersion:
                                          description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                          type: "string"
                                        fieldPath:
                                          description: "Path of the field to select in the specified API version."
                                          type: "string"
                                      required:
                                        - "fieldPath"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    mode:
                                      description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                      type: "string"
                                    resourceFieldRef:
                                      description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                      properties:
                                        containerName:
                                          description: "Container name: required for volumes, optional for env vars"
                                          type: "string"
                                        divisor:
                                          anyOf:
                                            - type: "integer"
                                            - type: "string"
                                          description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                          pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: "Required: resource to select"
                                          type: "string"
                                      required:
                                        - "resource"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                  required:
                                    - "path"
                                  type: "object"
                                type: "array"
                            type: "object"
                          emptyDir:
                            description: "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                            properties:
                              medium:
                                description: "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                type: "string"
                              sizeLimit:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                description: "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                            type: "object"
                          ephemeral:
                            description: "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time."
                            properties:
                              volumeClaimTemplate:
                                description: "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `<pod name>-<volume name>` where\n`<volume name>` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\n\nRequired, must not be nil."
                                properties:
                                  metadata:
                                    description: "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation."
                                    type: "object"
                                  spec:
                                    description: "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here."
                                    properties:
                                      accessModes:
                                        description: "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                        items:
                                          type: "string"
                                        type: "array"
                                      dataSource:
                                        description: "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource."
                                        properties:
                                          apiGroup:
                                            description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                            type: "string"
                                          kind:
                                            description: "Kind is the type of resource being referenced"
                                            type: "string"
                                          name:
                                            description: "Name is the name of resource being referenced"
                                            type: "string"
                                        required:
                                          - "kind"
                                          - "name"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      dataSourceRef:
                                        description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                        properties:
                                          apiGroup:
                                            description: "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required."
                                            type: "string"
                                          kind:
                                            description: "Kind is the type of resource being referenced"
                                            type: "string"
                                          name:
                                            description: "Name is the name of resource being referenced"
                                            type: "string"
                                          namespace:
                                            description: "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                            type: "string"
                                        required:
                                          - "kind"
                                          - "name"
                                        type: "object"
                                      resources:
                                        description: "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                        properties:
                                          claims:
                                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                                            items:
                                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                              properties:
                                                name:
                                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                  type: "string"
                                              required:
                                                - "name"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-map-keys:
                                              - "name"
                                            x-kubernetes-list-type: "map"
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                        type: "object"
                                      selector:
                                        description: "selector is a label query over volumes to consider for binding."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      storageClassName:
                                        description: "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                        type: "string"
                                      volumeMode:
                                        description: "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec."
                                        type: "string"
                                      volumeName:
                                        description: "volumeName is the binding reference to the PersistentVolume backing this claim."
                                        type: "string"
                                    type: "object"
                                required:
                                  - "spec"
                                type: "object"
                            type: "object"
                          fc:
                            description: "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              lun:
                                description: "lun is Optional: FC target lun number"
                                format: "int32"
                                type: "integer"
                              readOnly:
                                description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              targetWWNs:
                                description: "targetWWNs is Optional: FC target worldwide names (WWNs)"
                                items:
                                  type: "string"
                                type: "array"
                              wwids:
                                description: "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          flexVolume:
                            description: "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
                            properties:
                              driver:
                                description: "driver is the name of the driver to use for this volume."
                                type: "string"
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                type: "string"
                              options:
                                additionalProperties:
                                  type: "string"
                                description: "options is Optional: this field holds extra command options if any."
                                type: "object"
                              readOnly:
                                description: "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                            required:
                              - "driver"
                            type: "object"
                          flocker:
                            description: "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
                            properties:
                              datasetName:
                                description: "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated"
                                type: "string"
                              datasetUUID:
                                description: "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset"
                                type: "string"
                            type: "object"
                          gcePersistentDisk:
                            description: "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            properties:
                              fsType:
                                description: "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              partition:
                                description: "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                format: "int32"
                                type: "integer"
                              pdName:
                                description: "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                                type: "boolean"
                            required:
                              - "pdName"
                            type: "object"
                          gitRepo:
                            description: "gitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
                            properties:
                              directory:
                                description: "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name."
                                type: "string"
                              repository:
                                description: "repository is the URL"
                                type: "string"
                              revision:
                                description: "revision is the commit hash for the specified revision."
                                type: "string"
                            required:
                              - "repository"
                            type: "object"
                          glusterfs:
                            description: "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md"
                            properties:
                              endpoints:
                                description: "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "string"
                              path:
                                description: "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                                type: "boolean"
                            required:
                              - "endpoints"
                              - "path"
                            type: "object"
                          hostPath:
                            description: "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write."
                            properties:
                              path:
                                description: "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                type: "string"
                              type:
                                description: "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                                type: "string"
                            required:
                              - "path"
                            type: "object"
                          iscsi:
                            description: "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md"
                            properties:
                              chapAuthDiscovery:
                                description: "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication"
                                type: "boolean"
                              chapAuthSession:
                                description: "chapAuthSession defines whether support iSCSI Session CHAP authentication"
                                type: "boolean"
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              initiatorName:
                                description: "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection."
                                type: "string"
                              iqn:
                                description: "iqn is the target iSCSI Qualified Name."
                                type: "string"
                              iscsiInterface:
                                description: "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp)."
                                type: "string"
                              lun:
                                description: "lun represents iSCSI Target Lun number."
                                format: "int32"
                                type: "integer"
                              portals:
                                description: "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                items:
                                  type: "string"
                                type: "array"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false."
                                type: "boolean"
                              secretRef:
                                description: "secretRef is the CHAP Secret for iSCSI target and initiator authentication"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              targetPortal:
                                description: "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                                type: "string"
                            required:
                              - "iqn"
                              - "lun"
                              - "targetPortal"
                            type: "object"
                          name:
                            description: "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: "string"
                          nfs:
                            description: "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            properties:
                              path:
                                description: "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "boolean"
                              server:
                                description: "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                                type: "string"
                            required:
                              - "path"
                              - "server"
                            type: "object"
                          persistentVolumeClaim:
                            description: "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                            properties:
                              claimName:
                                description: "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                                type: "string"
                              readOnly:
                                description: "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false."
                                type: "boolean"
                            required:
                              - "claimName"
                            type: "object"
                          photonPersistentDisk:
                            description: "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              pdID:
                                description: "pdID is the ID that identifies Photon Controller persistent disk"
                                type: "string"
                            required:
                              - "pdID"
                            type: "object"
                          portworxVolume:
                            description: "portworxVolume represents a portworx volume attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              volumeID:
                                description: "volumeID uniquely identifies a Portworx volume"
                                type: "string"
                            required:
                              - "volumeID"
                            type: "object"
                          projected:
                            description: "projected items for all in one resources secrets, configmaps, and downward API"
                            properties:
                              defaultMode:
                                description: "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              sources:
                                description: "sources is the list of volume projections"
                                items:
                                  description: "Projection that may be projected along with other supported volume types"
                                  properties:
                                    configMap:
                                      description: "configMap information about the configMap data to project"
                                      properties:
                                        items:
                                          description: "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                          items:
                                            description: "Maps a string key to a path within a volume."
                                            properties:
                                              key:
                                                description: "key is the key to project."
                                                type: "string"
                                              mode:
                                                description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                type: "string"
                                            required:
                                              - "key"
                                              - "path"
                                            type: "object"
                                          type: "array"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "optional specify whether the ConfigMap or its keys must be defined"
                                          type: "boolean"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    downwardAPI:
                                      description: "downwardAPI information about the downwardAPI data to project"
                                      properties:
                                        items:
                                          description: "Items is a list of DownwardAPIVolume file"
                                          items:
                                            description: "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                                            properties:
                                              fieldRef:
                                                description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                                properties:
                                                  apiVersion:
                                                    description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                                    type: "string"
                                                  fieldPath:
                                                    description: "Path of the field to select in the specified API version."
                                                    type: "string"
                                                required:
                                                  - "fieldPath"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              mode:
                                                description: "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                                type: "string"
                                              resourceFieldRef:
                                                description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                                properties:
                                                  containerName:
                                                    description: "Container name: required for volumes, optional for env vars"
                                                    type: "string"
                                                  divisor:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: "Required: resource to select"
                                                    type: "string"
                                                required:
                                                  - "resource"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                            required:
                                              - "path"
                                            type: "object"
                                          type: "array"
                                      type: "object"
                                    secret:
                                      description: "secret information about the secret data to project"
                                      properties:
                                        items:
                                          description: "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                          items:
                                            description: "Maps a string key to a path within a volume."
                                            properties:
                                              key:
                                                description: "key is the key to project."
                                                type: "string"
                                              mode:
                                                description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                                format: "int32"
                                                type: "integer"
                                              path:
                                                description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                                type: "string"
                                            required:
                                              - "key"
                                              - "path"
                                            type: "object"
                                          type: "array"
                                        name:
                                          description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                          type: "string"
                                        optional:
                                          description: "optional field specify whether the Secret or its key must be defined"
                                          type: "boolean"
                                      type: "object"
                                      x-kubernetes-map-type: "atomic"
                                    serviceAccountToken:
                                      description: "serviceAccountToken is information about the serviceAccountToken data to project"
                                      properties:
                                        audience:
                                          description: "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver."
                                          type: "string"
                                        expirationSeconds:
                                          description: "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes."
                                          format: "int64"
                                          type: "integer"
                                        path:
                                          description: "path is the path relative to the mount point of the file to project the\ntoken into."
                                          type: "string"
                                      required:
                                        - "path"
                                      type: "object"
                                  type: "object"
                                type: "array"
                            type: "object"
                          quobyte:
                            description: "quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
                            properties:
                              group:
                                description: "group to map volume access to\nDefault is no group"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false."
                                type: "boolean"
                              registry:
                                description: "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
                                type: "string"
                              tenant:
                                description: "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin"
                                type: "string"
                              user:
                                description: "user to map volume access to\nDefaults to serivceaccount user"
                                type: "string"
                              volume:
                                description: "volume is a string that references an already created Quobyte volume by name."
                                type: "string"
                            required:
                              - "registry"
                              - "volume"
                            type: "object"
                          rbd:
                            description: "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md"
                            properties:
                              fsType:
                                description: "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine"
                                type: "string"
                              image:
                                description: "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              keyring:
                                description: "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              monitors:
                                description: "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                items:
                                  type: "string"
                                type: "array"
                              pool:
                                description: "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                              readOnly:
                                description: "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "boolean"
                              secretRef:
                                description: "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              user:
                                description: "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                                type: "string"
                            required:
                              - "image"
                              - "monitors"
                            type: "object"
                          scaleIO:
                            description: "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\"."
                                type: "string"
                              gateway:
                                description: "gateway is the host address of the ScaleIO API Gateway."
                                type: "string"
                              protectionDomain:
                                description: "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage."
                                type: "string"
                              readOnly:
                                description: "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              sslEnabled:
                                description: "sslEnabled Flag enable/disable SSL communication with Gateway, default false"
                                type: "boolean"
                              storageMode:
                                description: "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned."
                                type: "string"
                              storagePool:
                                description: "storagePool is the ScaleIO Storage Pool associated with the protection domain."
                                type: "string"
                              system:
                                description: "system is the name of the storage system as configured in ScaleIO."
                                type: "string"
                              volumeName:
                                description: "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
                                type: "string"
                            required:
                              - "gateway"
                              - "secretRef"
                              - "system"
                            type: "object"
                          secret:
                            description: "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                            properties:
                              defaultMode:
                                description: "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                format: "int32"
                                type: "integer"
                              items:
                                description: "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'."
                                items:
                                  description: "Maps a string key to a path within a volume."
                                  properties:
                                    key:
                                      description: "key is the key to project."
                                      type: "string"
                                    mode:
                                      description: "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set."
                                      format: "int32"
                                      type: "integer"
                                    path:
                                      description: "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                                      type: "string"
                                  required:
                                    - "key"
                                    - "path"
                                  type: "object"
                                type: "array"
                              optional:
                                description: "optional field specify whether the Secret or its keys must be defined"
                                type: "boolean"
                              secretName:
                                description: "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                type: "string"
                            type: "object"
                          storageos:
                            description: "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
                            properties:
                              fsType:
                                description: "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              readOnly:
                                description: "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts."
                                type: "boolean"
                              secretRef:
                                description: "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted."
                                properties:
                                  name:
                                    description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: "string"
                                type: "object"
                                x-kubernetes-map-type: "atomic"
                              volumeName:
                                description: "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
                                type: "string"
                              volumeNamespace:
                                description: "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created."
                                type: "string"
                            type: "object"
                          vsphereVolume:
                            description: "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
                            properties:
                              fsType:
                                description: "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                type: "string"
                              storagePolicyID:
                                description: "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
                                type: "string"
                              storagePolicyName:
                                description: "storagePolicyName is the storage Policy Based Management (SPBM) profile name."
                                type: "string"
                              volumePath:
                                description: "volumePath is the path that identifies vSphere volume vmdk"
                                type: "string"
                            required:
                              - "volumePath"
                            type: "object"
                        required:
                          - "name"
                        type: "object"
                      type: "array"
                  type: "object"
                sourceNamespaces:
                  description: "SourceNamespaces defines the namespaces application resources are allowed to be created in"
                  items:
                    type: "string"
                  type: "array"
                sso:
                  description: "SSO defines the Single Sign-on configuration for Argo CD"
                  properties:
                    dex:
                      description: "Dex contains the configuration for Argo CD dex authentication"
                      properties:
                        config:
                          description: "Config is the dex connector configuration."
                          type: "string"
                        env:
                          description: "Env lets you specify environment variables for Dex."
                          items:
                            description: "EnvVar represents an environment variable present in a Container."
                            properties:
                              name:
                                description: "Name of the environment variable. Must be a C_IDENTIFIER."
                                type: "string"
                              value:
                                description: "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\"."
                                type: "string"
                              valueFrom:
                                description: "Source for the environment variable's value. Cannot be used if value is not empty."
                                properties:
                                  configMapKeyRef:
                                    description: "Selects a key of a ConfigMap."
                                    properties:
                                      key:
                                        description: "The key to select."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the ConfigMap or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  fieldRef:
                                    description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    properties:
                                      apiVersion:
                                        description: "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                                        type: "string"
                                      fieldPath:
                                        description: "Path of the field to select in the specified API version."
                                        type: "string"
                                    required:
                                      - "fieldPath"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  resourceFieldRef:
                                    description: "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                    properties:
                                      containerName:
                                        description: "Container name: required for volumes, optional for env vars"
                                        type: "string"
                                      divisor:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "Specifies the output format of the exposed resources, defaults to \"1\""
                                        pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: "Required: resource to select"
                                        type: "string"
                                    required:
                                      - "resource"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                  secretKeyRef:
                                    description: "Selects a key of a secret in the pod's namespace"
                                    properties:
                                      key:
                                        description: "The key of the secret to select from.  Must be a valid secret key."
                                        type: "string"
                                      name:
                                        description: "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?"
                                        type: "string"
                                      optional:
                                        description: "Specify whether the Secret or its key must be defined"
                                        type: "boolean"
                                    required:
                                      - "key"
                                    type: "object"
                                    x-kubernetes-map-type: "atomic"
                                type: "object"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                        groups:
                          description: "Optional list of required groups a user must be a member of"
                          items:
                            type: "string"
                          type: "array"
                        image:
                          description: "Image is the Dex container image."
                          type: "string"
                        openShiftOAuth:
                          description: "OpenShiftOAuth enables OpenShift OAuth authentication for the Dex server."
                          type: "boolean"
                        resources:
                          description: "Resources defines the Compute Resources required by the container for Dex."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                        version:
                          description: "Version is the Dex container image tag."
                          type: "string"
                      type: "object"
                    keycloak:
                      description: "Keycloak contains the configuration for Argo CD keycloak authentication"
                      properties:
                        host:
                          description: "Host is the hostname to use for Ingress/Route resources."
                          type: "string"
                        image:
                          description: "Image is the Keycloak container image."
                          type: "string"
                        resources:
                          description: "Resources defines the Compute Resources required by the container for Keycloak."
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                              items:
                                description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                properties:
                                  name:
                                    description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                    type: "string"
                                required:
                                  - "name"
                                type: "object"
                              type: "array"
                              x-kubernetes-list-map-keys:
                                - "name"
                              x-kubernetes-list-type: "map"
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: "integer"
                                  - type: "string"
                                pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                              type: "object"
                          type: "object"
                        rootCA:
                          description: "Custom root CA certificate for communicating with the Keycloak OIDC provider"
                          type: "string"
                        verifyTLS:
                          description: "VerifyTLS set to false disables strict TLS validation."
                          type: "boolean"
                        version:
                          description: "Version is the Keycloak container image tag."
                          type: "string"
                      type: "object"
                    provider:
                      description: "Provider installs and configures the given SSO Provider with Argo CD."
                      type: "string"
                  type: "object"
                statusBadgeEnabled:
                  description: "StatusBadgeEnabled toggles application status badge feature."
                  type: "boolean"
                tls:
                  description: "TLS defines the TLS options for ArgoCD."
                  properties:
                    ca:
                      description: "CA defines the CA options."
                      properties:
                        configMapName:
                          description: "ConfigMapName is the name of the ConfigMap containing the CA Certificate."
                          type: "string"
                        secretName:
                          description: "SecretName is the name of the Secret containing the CA Certificate and Key."
                          type: "string"
                      type: "object"
                    initialCerts:
                      additionalProperties:
                        type: "string"
                      description: "InitialCerts defines custom TLS certificates upon creation of the cluster for connecting Git repositories via HTTPS."
                      type: "object"
                  type: "object"
                usersAnonymousEnabled:
                  description: "UsersAnonymousEnabled toggles anonymous user access.\nThe anonymous users get default role permissions specified argocd-rbac-cm."
                  type: "boolean"
                version:
                  description: "Version is the tag to use with the ArgoCD container image for all ArgoCD components."
                  type: "string"
              type: "object"
            status:
              description: "ArgoCDStatus defines the observed state of ArgoCD"
              properties:
                applicationController:
                  description: "ApplicationController is a simple, high-level summary of where the Argo CD application controller component is in its lifecycle.\nThere are four possible ApplicationController values:\nPending: The Argo CD application controller component has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nRunning: All of the required Pods for the Argo CD application controller component are in a Ready state.\nFailed: At least one of the  Argo CD application controller component Pods had a failure.\nUnknown: The state of the Argo CD application controller component could not be obtained."
                  type: "string"
                applicationSetController:
                  description: "ApplicationSetController is a simple, high-level summary of where the Argo CD applicationSet controller component is in its lifecycle.\nThere are four possible ApplicationSetController values:\nPending: The Argo CD applicationSet controller component has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nRunning: All of the required Pods for the Argo CD applicationSet controller component are in a Ready state.\nFailed: At least one of the  Argo CD applicationSet controller component Pods had a failure.\nUnknown: The state of the Argo CD applicationSet controller component could not be obtained."
                  type: "string"
                host:
                  description: "Host is the hostname of the Ingress."
                  type: "string"
                notificationsController:
                  description: "NotificationsController is a simple, high-level summary of where the Argo CD notifications controller component is in its lifecycle.\nThere are four possible NotificationsController values:\nPending: The Argo CD notifications controller component has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nRunning: All of the required Pods for the Argo CD notifications controller component are in a Ready state.\nFailed: At least one of the  Argo CD notifications controller component Pods had a failure.\nUnknown: The state of the Argo CD notifications controller component could not be obtained."
                  type: "string"
                phase:
                  description: "Phase is a simple, high-level summary of where the ArgoCD is in its lifecycle.\nThere are four possible phase values:\nPending: The ArgoCD has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nAvailable: All of the resources for the ArgoCD are ready.\nFailed: At least one resource has experienced a failure.\nUnknown: The state of the ArgoCD phase could not be obtained."
                  type: "string"
                redis:
                  description: "Redis is a simple, high-level summary of where the Argo CD Redis component is in its lifecycle.\nThere are four possible redis values:\nPending: The Argo CD Redis component has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nRunning: All of the required Pods for the Argo CD Redis component are in a Ready state.\nFailed: At least one of the  Argo CD Redis component Pods had a failure.\nUnknown: The state of the Argo CD Redis component could not be obtained."
                  type: "string"
                redisTLSChecksum:
                  description: "RedisTLSChecksum contains the SHA256 checksum of the latest known state of tls.crt and tls.key in the argocd-operator-redis-tls secret."
                  type: "string"
                repo:
                  description: "Repo is a simple, high-level summary of where the Argo CD Repo component is in its lifecycle.\nThere are four possible repo values:\nPending: The Argo CD Repo component has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nRunning: All of the required Pods for the Argo CD Repo component are in a Ready state.\nFailed: At least one of the  Argo CD Repo component Pods had a failure.\nUnknown: The state of the Argo CD Repo component could not be obtained."
                  type: "string"
                repoTLSChecksum:
                  description: "RepoTLSChecksum contains the SHA256 checksum of the latest known state of tls.crt and tls.key in the argocd-repo-server-tls secret."
                  type: "string"
                server:
                  description: "Server is a simple, high-level summary of where the Argo CD server component is in its lifecycle.\nThere are four possible server values:\nPending: The Argo CD server component has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nRunning: All of the required Pods for the Argo CD server component are in a Ready state.\nFailed: At least one of the  Argo CD server component Pods had a failure.\nUnknown: The state of the Argo CD server component could not be obtained."
                  type: "string"
                sso:
                  description: "SSO is a simple, high-level summary of where the Argo CD SSO(Dex/Keycloak) component is in its lifecycle.\nThere are four possible sso values:\nPending: The Argo CD SSO component has been accepted by the Kubernetes system, but one or more of the required resources have not been created.\nRunning: All of the required Pods for the Argo CD SSO component are in a Ready state.\nFailed: At least one of the  Argo CD SSO component Pods had a failure.\nUnknown: The state of the Argo CD SSO component could not be obtained."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
