apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.11.1"
  name: "managedresources.automation.kubensync.com"
spec:
  group: "automation.kubensync.com"
  names:
    kind: "ManagedResource"
    listKind: "ManagedResourceList"
    plural: "managedresources"
    singular: "managedresource"
  scope: "Cluster"
  versions:
    - name: "v1alpha1"
      schema:
        openAPIV3Schema:
          description: "ManagedResource is the Schema for the managedresources API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "ManagedResourceSpec defines the desired state of ManagedResource"
              properties:
                avoidResourceUpdate:
                  description: "AvoidResourceUpdate defines if the created resources should be updated if they already exists. Default value is false."
                  type: "boolean"
                namespaceSelector:
                  description: "ManagedResourceSpecNamespaceSelector defines the selector used to specify which namespaces are affected"
                  properties:
                    labelSelector:
                      description: "Labels that the namespace must have to be selected"
                      properties:
                        matchExpressions:
                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                          items:
                            description: "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
                            properties:
                              key:
                                description: "key is the label key that the selector applies to."
                                type: "string"
                              operator:
                                description: "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                type: "string"
                              values:
                                description: "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                items:
                                  type: "string"
                                type: "array"
                            required:
                              - "key"
                              - "operator"
                            type: "object"
                          type: "array"
                        matchLabels:
                          additionalProperties:
                            type: "string"
                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                          type: "object"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                    regex:
                      description: "Regex that the namespace name must match to be selected"
                      type: "string"
                  type: "object"
                template:
                  description: "ManagedResourceSpecTemplate defines the resources to be created when a namespace matches the selector"
                  properties:
                    data:
                      description: "Data defines a set of refences to secrets or configmaps"
                      items:
                        description: "Describes extra data that will be loaded into the go template as inputs. They all will be inside `.Data` parent and all Secret/ConfigMap keys will be loaded. The format inside the template would look as follows `.Data.${Name}.${Key}`."
                        properties:
                          name:
                            description: "Name of the key where the contents will be created."
                            type: "string"
                          ref:
                            description: "Defines the reference to the resource that should be imported."
                            properties:
                              name:
                                description: "Name of the resource."
                                type: "string"
                              namespace:
                                description: "Namespace of the resource"
                                type: "string"
                            type: "object"
                          type:
                            description: "Defines the kind of resource the ref is pointing to. Could be `Secret` or `ConfigMap`."
                            type: "string"
                        type: "object"
                      type: "array"
                    literal:
                      description: "Literal defines a go template to be renderized for each namespace matching the selector"
                      type: "string"
                  type: "object"
              type: "object"
            status:
              description: "ManagedResourceStatus defines the observed state of ManagedResource"
              properties:
                createdResources:
                  items:
                    properties:
                      apiVersion:
                        type: "string"
                      kind:
                        type: "string"
                      name:
                        type: "string"
                      namespace:
                        type: "string"
                      triggerNamespace:
                        type: "string"
                      uid:
                        type: "string"
                    type: "object"
                  type: "array"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
