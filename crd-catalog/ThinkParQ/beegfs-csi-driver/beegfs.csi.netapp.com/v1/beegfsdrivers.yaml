apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "beegfsdrivers.beegfs.csi.netapp.com"
spec:
  group: "beegfs.csi.netapp.com"
  names:
    kind: "BeegfsDriver"
    listKind: "BeegfsDriverList"
    plural: "beegfsdrivers"
    singular: "beegfsdriver"
  scope: "Namespaced"
  versions:
    - name: "v1"
      schema:
        openAPIV3Schema:
          description: "Deploys the BeeGFS CSI driver"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "BeegfsDriverSpec defines the desired state of BeegfsDriver"
              properties:
                containerImageOverrides:
                  description: "A structure that allows for default container images and tags to be overridden. Use it in air-gapped networks,\nnetworks with private registry mirrors, or to pin a particular container version. Unless otherwise noted, versions\nother than the default are not supported."
                  properties:
                    beegfsCsiDriver:
                      description: "Defaults to ghcr.io/thinkparq/beegfs-csi-driver:<the operator version>."
                      properties:
                        image:
                          description: "A combination of registry and image (e.g. registry.k8s.io/csi-provisioner or ghcr.io/thinkparq/beegfs-csi-driver)."
                          type: "string"
                        tag:
                          description: "A tag (e.g. v2.2.2 or latest)."
                          type: "string"
                      type: "object"
                    csiNodeDriverRegistrar:
                      description: "Defaults to registry.k8s.io/sig-storage/csi-node-driver-registrar:<the most current version at operator release>."
                      properties:
                        image:
                          description: "A combination of registry and image (e.g. registry.k8s.io/csi-provisioner or ghcr.io/thinkparq/beegfs-csi-driver)."
                          type: "string"
                        tag:
                          description: "A tag (e.g. v2.2.2 or latest)."
                          type: "string"
                      type: "object"
                    csiProvisioner:
                      description: "Defaults to registry.k8s.io/sig-storage/csi-provisioner:<the most current version at operator release>."
                      properties:
                        image:
                          description: "A combination of registry and image (e.g. registry.k8s.io/csi-provisioner or ghcr.io/thinkparq/beegfs-csi-driver)."
                          type: "string"
                        tag:
                          description: "A tag (e.g. v2.2.2 or latest)."
                          type: "string"
                      type: "object"
                    csiResizer:
                      description: "Defaults to registry.k8s.io/sig-storage/csi-resizer:<the most current version at operator release>."
                      properties:
                        image:
                          description: "A combination of registry and image (e.g. registry.k8s.io/csi-provisioner or ghcr.io/thinkparq/beegfs-csi-driver)."
                          type: "string"
                        tag:
                          description: "A tag (e.g. v2.2.2 or latest)."
                          type: "string"
                      type: "object"
                    livenessProbe:
                      description: "Defaults to registry.k8s.io/sig-storage/livenessprobe:<the most current version at operator release>."
                      properties:
                        image:
                          description: "A combination of registry and image (e.g. registry.k8s.io/csi-provisioner or ghcr.io/thinkparq/beegfs-csi-driver)."
                          type: "string"
                        tag:
                          description: "A tag (e.g. v2.2.2 or latest)."
                          type: "string"
                      type: "object"
                  type: "object"
                containerResourceOverrides:
                  description: "The ContainerResourceOverrides allow for customization of the container resource limits and requests.\nEach container has default requests and limits for both cpu and memory resources. Only explicitly defined\noverrides will be applied, otherwise the default values will be used. For example, if the cpu limit for the\ncontroller's beegfs container is the only resource with an override set, only the controller's beegfs container\ncpu limit setting will be overridden. Every other value will use the default setting. Storage resources are not\nused by the BeeGFS CSI driver. Any storage resource values configured will be ignored."
                  properties:
                    controllerBeegfs:
                      description: "The resource specifications for the beegfs container of the BeeGFS driver controller pod.\nThe default values for requests are (cpu: 100m, memory: 16Mi).\nThe default values for limits are (cpu: None, memory: 256Mi)."
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    controllerCsiProvisioner:
                      description: "The resource specifications for the csi-provisioner container of the BeeGFS driver controller pod.\nThe default values for requests are (cpu: 80m, memory: 24Mi)\nThe default values for limits are (cpu: None, memory 256Mi)"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    nodeBeegfs:
                      description: "The resource specifications for the beegfs container of the BeeGFS driver node pod.\nThe default values for requests are (cpu: 100m, memory: 20Mi)\nThe default values for limits are (cpu: None, memory: 128Mi)"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    nodeDriverRegistrar:
                      description: "The resource specifications for the node-driver-registrar container of the BeeGFS driver node pod.\nThe default values for requests are (cpu: 80m, memory: 10Mi)\nThe default values for limits are (cpu: None, memory 128Mi)"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                    nodeLivenessProbe:
                      description: "The resource specifications for the liveness-probe container of the BeeGFS driver node pod.\nThe default values for requests are (cpu: 60m, memory: 20Mi)\nThe default values for limits are (cpu: None, memory: 128Mi)"
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers."
                          items:
                            description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                            properties:
                              name:
                                description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                type: "string"
                            required:
                              - "name"
                            type: "object"
                          type: "array"
                          x-kubernetes-list-map-keys:
                            - "name"
                          x-kubernetes-list-type: "map"
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: "integer"
                              - type: "string"
                            pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                            x-kubernetes-int-or-string: true
                          description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: "object"
                      type: "object"
                  type: "object"
                logLevel:
                  description: "The logging level of deployed containers expressed as an integer from 0 (low detail) to 5 (high detail). 0\nonly logs errors. 3 logs most RPC requests/responses and some detail about driver actions. 5 logs all RPC\nrequests/responses, including redundant/frequently occurring ones. Empty defaults to level 3."
                  maximum: 5.0
                  minimum: 0.0
                  type: "integer"
                nodeAffinityControllerService:
                  description: "The controller service consists of a single Pod. It preferably runs on an infrastructure/master node, but the\nrunning node must have the beegfs-utils and beegfs-client packages installed. E.g.\n\"preferred: node-role.kubernetes.io/master Exists\" and/or \"required: node.openshift.io/os_id NotIn rhcos\"."
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                      items:
                        description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                        properties:
                          preference:
                            description: "A node selector term, associated with the corresponding weight."
                            properties:
                              matchExpressions:
                                description: "A list of node selector requirements by node's labels."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchFields:
                                description: "A list of node selector requirements by node's fields."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          weight:
                            description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                            format: "int32"
                            type: "integer"
                        required:
                          - "preference"
                          - "weight"
                        type: "object"
                      type: "array"
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                      properties:
                        nodeSelectorTerms:
                          description: "Required. A list of node selector terms. The terms are ORed."
                          items:
                            description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                            properties:
                              matchExpressions:
                                description: "A list of node selector requirements by node's labels."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchFields:
                                description: "A list of node selector requirements by node's fields."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          type: "array"
                      required:
                        - "nodeSelectorTerms"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                  type: "object"
                nodeAffinityNodeService:
                  description: "The node service consists of one Pod running on each eligible node. It runs on every node expected to host a\nworkload that requires BeeGFS. Running nodes must have the beegfs-utils and beegfs-client packages installed.\nE.g. \"required: node.openshift.io/os_id NotIn rhcos\"."
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                      items:
                        description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                        properties:
                          preference:
                            description: "A node selector term, associated with the corresponding weight."
                            properties:
                              matchExpressions:
                                description: "A list of node selector requirements by node's labels."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchFields:
                                description: "A list of node selector requirements by node's fields."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          weight:
                            description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                            format: "int32"
                            type: "integer"
                        required:
                          - "preference"
                          - "weight"
                        type: "object"
                      type: "array"
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                      properties:
                        nodeSelectorTerms:
                          description: "Required. A list of node selector terms. The terms are ORed."
                          items:
                            description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                            properties:
                              matchExpressions:
                                description: "A list of node selector requirements by node's labels."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                              matchFields:
                                description: "A list of node selector requirements by node's fields."
                                items:
                                  description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                  properties:
                                    key:
                                      description: "The label key that the selector applies to."
                                      type: "string"
                                    operator:
                                      description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                      type: "string"
                                    values:
                                      description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                      items:
                                        type: "string"
                                      type: "array"
                                  required:
                                    - "key"
                                    - "operator"
                                  type: "object"
                                type: "array"
                            type: "object"
                            x-kubernetes-map-type: "atomic"
                          type: "array"
                      required:
                        - "nodeSelectorTerms"
                      type: "object"
                      x-kubernetes-map-type: "atomic"
                  type: "object"
                pluginConfig:
                  description: "The top level configuration structure containing default configuration (applied to all file systems on all nodes),\nfile system specific configuration, and node specific configuration. Fields from node and file system specific\nconfigurations override fields from the default configuration. Often not required."
                  properties:
                    config:
                      description: "The primary configuration structure containing all of the custom configuration (beegfs-client.conf keys/values and\nadditional CSI driver specific fields) associated with a single BeeGFS file system except for sysMgmtdHost, which is\nspecified elsewhere. WARNING: This structure includes a beegfsClientConf field. This field may not be rendered in\nform view by OpenShift or other graphical interfaces, but it can be critical in some environments. Add or modify it\nin YAML view."
                      properties:
                        beegfsClientConf:
                          additionalProperties:
                            type: "string"
                          description: "A map of additional key value pairs matching key value pairs in the beegfs-client.conf file. See\nbeegfs-client.conf for more details. Values MUST be specified as strings, even if they appear to be integers or\nbooleans (e.g. \"8000\", not 8000 and \"true\", not true)."
                          type: "object"
                        connInterfaces:
                          description: "A list of interfaces the BeeGFS client service can communicate over (e.g. \"ib0\" or \"eth0\"). Often not required.\nSee beegfs-client.conf for more details."
                          items:
                            type: "string"
                          type: "array"
                        connNetFilter:
                          description: "A list of subnets the BeeGFS client service can use for outgoing communication (e.g. \"10.10.10.10/24\"). Often\nnot required. See beegfs-client.conf for more details."
                          items:
                            type: "string"
                          type: "array"
                        connRDMAInterfaces:
                          description: "A list of interfaces the BeeGFS client will use for outbound RDMA connections. This is used in support\nof the BeeGFS multi-rail feature. This feature does not depend on or use the connInterfaces parameter.\nThis feature requires the BeeGFS client version 7.3.0 or later."
                          items:
                            type: "string"
                          type: "array"
                        connTcpOnlyFilter:
                          description: "A list of subnets in which RDMA communication cannot or should not be established (e.g. \"10.10.10.11/24\").\nOften not required. See beegfs-client.conf for more details."
                          items:
                            type: "string"
                          type: "array"
                      type: "object"
                    fileSystemSpecificConfigs:
                      description: "A list of file system specific configurations that override the default configuration for specific file systems."
                      items:
                        description: "A file system specific configuration that overrides the default configuration for a specific file system."
                        properties:
                          config:
                            description: "The primary configuration structure containing all of the custom configuration (beegfs-client.conf keys/values and\nadditional CSI driver specific fields) associated with a single BeeGFS file system except for sysMgmtdHost, which is\nspecified elsewhere. WARNING: This structure includes a beegfsClientConf field. This field may not be rendered in\nform view by OpenShift or other graphical interfaces, but it can be critical in some environments. Add or modify it\nin YAML view."
                            properties:
                              beegfsClientConf:
                                additionalProperties:
                                  type: "string"
                                description: "A map of additional key value pairs matching key value pairs in the beegfs-client.conf file. See\nbeegfs-client.conf for more details. Values MUST be specified as strings, even if they appear to be integers or\nbooleans (e.g. \"8000\", not 8000 and \"true\", not true)."
                                type: "object"
                              connInterfaces:
                                description: "A list of interfaces the BeeGFS client service can communicate over (e.g. \"ib0\" or \"eth0\"). Often not required.\nSee beegfs-client.conf for more details."
                                items:
                                  type: "string"
                                type: "array"
                              connNetFilter:
                                description: "A list of subnets the BeeGFS client service can use for outgoing communication (e.g. \"10.10.10.10/24\"). Often\nnot required. See beegfs-client.conf for more details."
                                items:
                                  type: "string"
                                type: "array"
                              connRDMAInterfaces:
                                description: "A list of interfaces the BeeGFS client will use for outbound RDMA connections. This is used in support\nof the BeeGFS multi-rail feature. This feature does not depend on or use the connInterfaces parameter.\nThis feature requires the BeeGFS client version 7.3.0 or later."
                                items:
                                  type: "string"
                                type: "array"
                              connTcpOnlyFilter:
                                description: "A list of subnets in which RDMA communication cannot or should not be established (e.g. \"10.10.10.11/24\").\nOften not required. See beegfs-client.conf for more details."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          sysMgmtdHost:
                            description: "The sysMgmtdHost used by the BeeGFS client service to make initial contact with the BeeGFS mgmtd service."
                            type: "string"
                        required:
                          - "sysMgmtdHost"
                        type: "object"
                      type: "array"
                    nodeSpecificConfigs:
                      description: "A list of node specific configurations that override file system specific configurations and the default\nconfiguration on specific nodes."
                      items:
                        description: "A node specific configuration that overrides file system specific configurations and the default configuration on\nspecific nodes."
                        properties:
                          config:
                            description: "The primary configuration structure containing all of the custom configuration (beegfs-client.conf keys/values and\nadditional CSI driver specific fields) associated with a single BeeGFS file system except for sysMgmtdHost, which is\nspecified elsewhere. WARNING: This structure includes a beegfsClientConf field. This field may not be rendered in\nform view by OpenShift or other graphical interfaces, but it can be critical in some environments. Add or modify it\nin YAML view."
                            properties:
                              beegfsClientConf:
                                additionalProperties:
                                  type: "string"
                                description: "A map of additional key value pairs matching key value pairs in the beegfs-client.conf file. See\nbeegfs-client.conf for more details. Values MUST be specified as strings, even if they appear to be integers or\nbooleans (e.g. \"8000\", not 8000 and \"true\", not true)."
                                type: "object"
                              connInterfaces:
                                description: "A list of interfaces the BeeGFS client service can communicate over (e.g. \"ib0\" or \"eth0\"). Often not required.\nSee beegfs-client.conf for more details."
                                items:
                                  type: "string"
                                type: "array"
                              connNetFilter:
                                description: "A list of subnets the BeeGFS client service can use for outgoing communication (e.g. \"10.10.10.10/24\"). Often\nnot required. See beegfs-client.conf for more details."
                                items:
                                  type: "string"
                                type: "array"
                              connRDMAInterfaces:
                                description: "A list of interfaces the BeeGFS client will use for outbound RDMA connections. This is used in support\nof the BeeGFS multi-rail feature. This feature does not depend on or use the connInterfaces parameter.\nThis feature requires the BeeGFS client version 7.3.0 or later."
                                items:
                                  type: "string"
                                type: "array"
                              connTcpOnlyFilter:
                                description: "A list of subnets in which RDMA communication cannot or should not be established (e.g. \"10.10.10.11/24\").\nOften not required. See beegfs-client.conf for more details."
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                          fileSystemSpecificConfigs:
                            description: "A list of file system specific configurations that override the default configuration for specific file systems\non these nodes."
                            items:
                              description: "A file system specific configuration that overrides the default configuration for a specific file system."
                              properties:
                                config:
                                  description: "The primary configuration structure containing all of the custom configuration (beegfs-client.conf keys/values and\nadditional CSI driver specific fields) associated with a single BeeGFS file system except for sysMgmtdHost, which is\nspecified elsewhere. WARNING: This structure includes a beegfsClientConf field. This field may not be rendered in\nform view by OpenShift or other graphical interfaces, but it can be critical in some environments. Add or modify it\nin YAML view."
                                  properties:
                                    beegfsClientConf:
                                      additionalProperties:
                                        type: "string"
                                      description: "A map of additional key value pairs matching key value pairs in the beegfs-client.conf file. See\nbeegfs-client.conf for more details. Values MUST be specified as strings, even if they appear to be integers or\nbooleans (e.g. \"8000\", not 8000 and \"true\", not true)."
                                      type: "object"
                                    connInterfaces:
                                      description: "A list of interfaces the BeeGFS client service can communicate over (e.g. \"ib0\" or \"eth0\"). Often not required.\nSee beegfs-client.conf for more details."
                                      items:
                                        type: "string"
                                      type: "array"
                                    connNetFilter:
                                      description: "A list of subnets the BeeGFS client service can use for outgoing communication (e.g. \"10.10.10.10/24\"). Often\nnot required. See beegfs-client.conf for more details."
                                      items:
                                        type: "string"
                                      type: "array"
                                    connRDMAInterfaces:
                                      description: "A list of interfaces the BeeGFS client will use for outbound RDMA connections. This is used in support\nof the BeeGFS multi-rail feature. This feature does not depend on or use the connInterfaces parameter.\nThis feature requires the BeeGFS client version 7.3.0 or later."
                                      items:
                                        type: "string"
                                      type: "array"
                                    connTcpOnlyFilter:
                                      description: "A list of subnets in which RDMA communication cannot or should not be established (e.g. \"10.10.10.11/24\").\nOften not required. See beegfs-client.conf for more details."
                                      items:
                                        type: "string"
                                      type: "array"
                                  type: "object"
                                sysMgmtdHost:
                                  description: "The sysMgmtdHost used by the BeeGFS client service to make initial contact with the BeeGFS mgmtd service."
                                  type: "string"
                              required:
                                - "sysMgmtdHost"
                              type: "object"
                            type: "array"
                          nodeList:
                            description: "The list of nodes this configuration should be applied on. Each entry is the hostname of the node or the name\nassigned to the node by the container orchestrator (e.g. \"node1\" or \"cluster05-node03\")."
                            items:
                              type: "string"
                            type: "array"
                        required:
                          - "nodeList"
                        type: "object"
                      type: "array"
                  type: "object"
              type: "object"
            status:
              description: "BeegfsDriverStatus defines the observed state of BeegfsDriver"
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
