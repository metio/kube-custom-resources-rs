apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.14.0"
  name: "authentications.operator.tigera.io"
spec:
  group: "operator.tigera.io"
  names:
    kind: "Authentication"
    listKind: "AuthenticationList"
    plural: "authentications"
    singular: "authentication"
  scope: "Cluster"
  versions:
    - name: "v1"
      schema:
        openAPIV3Schema:
          description: "Authentication is the Schema for the authentications API"
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "AuthenticationSpec defines the desired state of Authentication"
              properties:
                dexDeployment:
                  description: "DexDeployment configures the Dex Deployment."
                  properties:
                    spec:
                      description: "Spec is the specification of the Dex Deployment."
                      properties:
                        template:
                          description: "Template describes the Dex Deployment pod that will be created."
                          properties:
                            spec:
                              description: "Spec is the Dex Deployment's PodSpec."
                              properties:
                                containers:
                                  description: "Containers is a list of Dex containers.\nIf specified, this overrides the specified Dex Deployment containers.\nIf omitted, the Dex Deployment will use its default values for its containers."
                                  items:
                                    description: "DexDeploymentContainer is a Dex Deployment container."
                                    properties:
                                      name:
                                        description: "Name is an enum which identifies the Dex Deployment container by name.\nSupported values are: tigera-dex"
                                        enum:
                                          - "tigera-dex"
                                        type: "string"
                                      resources:
                                        description: "Resources allows customization of limits and requests for compute resources such as cpu and memory.\nIf specified, this overrides the named Dex Deployment container's resources.\nIf omitted, the Dex Deployment will use its default value for this container's resources."
                                        properties:
                                          claims:
                                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\nThis field is immutable. It can only be set for containers."
                                            items:
                                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                              properties:
                                                name:
                                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                  type: "string"
                                              required:
                                                - "name"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-map-keys:
                                              - "name"
                                            x-kubernetes-list-type: "map"
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                        type: "object"
                                    required:
                                      - "name"
                                    type: "object"
                                  type: "array"
                                initContainers:
                                  description: "InitContainers is a list of Dex init containers.\nIf specified, this overrides the specified Dex Deployment init containers.\nIf omitted, the Dex Deployment will use its default values for its init containers."
                                  items:
                                    description: "DexDeploymentInitContainer is a Dex Deployment init container."
                                    properties:
                                      name:
                                        description: "Name is an enum which identifies the Dex Deployment init container by name.\nSupported values are: tigera-dex-tls-key-cert-provisioner"
                                        enum:
                                          - "tigera-dex-tls-key-cert-provisioner"
                                        type: "string"
                                      resources:
                                        description: "Resources allows customization of limits and requests for compute resources such as cpu and memory.\nIf specified, this overrides the named Dex Deployment init container's resources.\nIf omitted, the Dex Deployment will use its default value for this init container's resources."
                                        properties:
                                          claims:
                                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\nThis field is immutable. It can only be set for containers."
                                            items:
                                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                              properties:
                                                name:
                                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                  type: "string"
                                              required:
                                                - "name"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-map-keys:
                                              - "name"
                                            x-kubernetes-list-type: "map"
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                        type: "object"
                                    required:
                                      - "name"
                                    type: "object"
                                  type: "array"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
                groupsPrefix:
                  description: "If specified, GroupsPrefix is prepended to each group obtained from the identity provider. Note that\nKibana does not support a groups prefix, so this prefix is removed from Kubernetes Groups when translating log access\nClusterRoleBindings into Elastic."
                  type: "string"
                ldap:
                  description: "LDAP contains the configuration needed to setup LDAP authentication."
                  properties:
                    groupSearch:
                      description: "Group search configuration to find the groups that a user is in."
                      properties:
                        baseDN:
                          description: "BaseDN to start the search from. For example \"cn=groups,dc=example,dc=com\""
                          type: "string"
                        filter:
                          description: "Optional filter to apply when searching the directory.\nFor example \"(objectClass=posixGroup)\""
                          type: "string"
                        nameAttribute:
                          description: "The attribute of the group that represents its name. This attribute can be used to apply RBAC to a user group."
                          type: "string"
                        userMatchers:
                          description: "Following list contains field pairs that are used to match a user to a group. It adds an additional\nrequirement to the filter that an attribute in the group must match the user's\nattribute value."
                          items:
                            description: "UserMatch when the value of a UserAttribute and a GroupAttribute match, a user belongs to the group."
                            properties:
                              groupAttribute:
                                description: "The attribute of a group that links it to a user."
                                type: "string"
                              userAttribute:
                                description: "The attribute of a user that links it to a group."
                                type: "string"
                            required:
                              - "groupAttribute"
                              - "userAttribute"
                            type: "object"
                          type: "array"
                      required:
                        - "baseDN"
                        - "nameAttribute"
                        - "userMatchers"
                      type: "object"
                    host:
                      description: "The host and port of the LDAP server. Example: ad.example.com:636"
                      type: "string"
                    startTLS:
                      description: "StartTLS whether to enable the startTLS feature for establishing TLS on an existing LDAP session.\nIf true, the ldap:// protocol is used and then issues a StartTLS command, otherwise, connections will use\nthe ldaps:// protocol."
                      type: "boolean"
                    userSearch:
                      description: "User entry search configuration to match the credentials with a user."
                      properties:
                        baseDN:
                          description: "BaseDN to start the search from. For example \"cn=users,dc=example,dc=com\""
                          type: "string"
                        filter:
                          description: "Optional filter to apply when searching the directory. For example \"(objectClass=person)\""
                          type: "string"
                        nameAttribute:
                          description: "A mapping of the attribute that is used as the username. This attribute can be used to apply RBAC to a user.\nDefault: uid"
                          type: "string"
                      required:
                        - "baseDN"
                      type: "object"
                  required:
                    - "host"
                    - "userSearch"
                  type: "object"
                managerDomain:
                  description: "ManagerDomain is the domain name of the Manager"
                  type: "string"
                oidc:
                  description: "OIDC contains the configuration needed to setup OIDC authentication."
                  properties:
                    emailVerification:
                      description: "Some providers do not include the claim \"email_verified\" when there is no verification in the user enrollment\nprocess or if they are acting as a proxy for another identity provider. By default those tokens are deemed invalid.\nTo skip this check, set the value to \"InsecureSkip\".\nDefault: Verify"
                      enum:
                        - "Verify"
                        - "InsecureSkip"
                      type: "string"
                    groupsClaim:
                      description: "GroupsClaim specifies which claim to use from the OIDC provider as the group."
                      type: "string"
                    groupsPrefix:
                      description: "Deprecated. Please use Authentication.Spec.GroupsPrefix instead."
                      type: "string"
                    issuerURL:
                      description: "IssuerURL is the URL to the OIDC provider."
                      type: "string"
                    promptTypes:
                      description: "PromptTypes is an optional list of string values that specifies whether the identity provider prompts the end user\nfor re-authentication and consent. See the RFC for more information on prompt types:\nhttps://openid.net/specs/openid-connect-core-1_0.html.\nDefault: \"Consent\""
                      items:
                        description: "PromptType is a value that specifies whether the identity provider prompts the end user for re-authentication and\nconsent.\nOne of: None, Login, Consent, SelectAccount."
                        enum:
                          - "None"
                          - "Login"
                          - "Consent"
                          - "SelectAccount"
                        type: "string"
                      type: "array"
                    requestedScopes:
                      description: "RequestedScopes is a list of scopes to request from the OIDC provider. If not provided, the following scopes are\nrequested: [\"openid\", \"email\", \"profile\", \"groups\", \"offline_access\"]."
                      items:
                        type: "string"
                      type: "array"
                    type:
                      description: "Default: \"Dex\""
                      enum:
                        - "Dex"
                        - "Tigera"
                      type: "string"
                    usernameClaim:
                      description: "UsernameClaim specifies which claim to use from the OIDC provider as the username."
                      type: "string"
                    usernamePrefix:
                      description: "Deprecated. Please use Authentication.Spec.UsernamePrefix instead."
                      type: "string"
                  required:
                    - "issuerURL"
                    - "usernameClaim"
                  type: "object"
                openshift:
                  description: "Openshift contains the configuration needed to setup Openshift OAuth authentication."
                  properties:
                    issuerURL:
                      description: "IssuerURL is the URL to the Openshift OAuth provider. Ex.: https://api.my-ocp-domain.com:6443"
                      type: "string"
                  required:
                    - "issuerURL"
                  type: "object"
                usernamePrefix:
                  description: "If specified, UsernamePrefix is prepended to each user obtained from the identity provider. Note that\nKibana does not support a user prefix, so this prefix is removed from Kubernetes User when translating log access\nClusterRoleBindings into Elastic."
                  type: "string"
              type: "object"
            status:
              description: "AuthenticationStatus defines the observed state of Authentication"
              properties:
                conditions:
                  description: "Conditions represents the latest observed set of conditions for the component. A component may be one or more of\nReady, Progressing, Degraded or other customer types."
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
                        format: "date-time"
                        type: "string"
                      message:
                        description: "message is a human readable message indicating details about the transition.\nThis may be an empty string."
                        maxLength: 32768
                        type: "string"
                      observedGeneration:
                        description: "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance."
                        format: "int64"
                        minimum: 0.0
                        type: "integer"
                      reason:
                        description: "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty."
                        maxLength: 1024
                        minLength: 1
                        pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        type: "string"
                      status:
                        description: "status of the condition, one of True, False, Unknown."
                        enum:
                          - "True"
                          - "False"
                          - "Unknown"
                        type: "string"
                      type:
                        description: "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                        maxLength: 316
                        pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        type: "string"
                    required:
                      - "lastTransitionTime"
                      - "message"
                      - "reason"
                      - "status"
                      - "type"
                    type: "object"
                  type: "array"
                state:
                  description: "State provides user-readable status."
                  type: "string"
              type: "object"
          type: "object"
      served: true
      storage: true
      subresources:
        status: {}
