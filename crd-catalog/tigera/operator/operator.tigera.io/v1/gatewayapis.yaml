apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.18.0"
  name: "gatewayapis.operator.tigera.io"
spec:
  group: "operator.tigera.io"
  names:
    kind: "GatewayAPI"
    listKind: "GatewayAPIList"
    plural: "gatewayapis"
    singular: "gatewayapi"
  scope: "Cluster"
  versions:
    - name: "v1"
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: "string"
            kind:
              description: "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: "string"
            metadata:
              type: "object"
            spec:
              description: "GatewayAPISpec has fields that can be used to customize our GatewayAPI support."
              properties:
                crdManagement:
                  description: "Configures how to manage and update Gateway API CRDs.  The default behaviour - which is\nused when this field is not set, or is set to \"PreferExisting\" - is that the Tigera\noperator will create the Gateway API CRDs if they do not already exist, but will not\noverwrite any existing Gateway API CRDs.  This setting may be preferable if the customer\nis using other implementations of the Gateway API concurrently with the Gateway API\nsupport in Calico Enterprise.  It is then the customer's responsibility to ensure that\nCRDs are installed that meet the needs of all the Gateway API implementations in their\ncluster.\nAlternatively, if this field is set to \"Reconcile\", the Tigera operator will keep the\ncluster's Gateway API CRDs aligned with those that it would install on a cluster that\ndoes not yet have any version of those CRDs."
                  enum:
                    - "Reconcile"
                    - "PreferExisting"
                  type: "string"
                envoyGatewayConfigRef:
                  description: "Reference to a custom EnvoyGateway YAML to use as the base EnvoyGateway configuration for\nthe gateway controller.  When specified, must identify a ConfigMap resource with an\n\"envoy-gateway.yaml\" key whose value is the desired EnvoyGateway YAML (i.e. following the\nsame pattern as the default `envoy-gateway-config` ConfigMap).\nWhen not specified, the Tigera operator uses the `envoy-gateway-config` from the Envoy\nGateway helm chart as its base.\nStarting from that base, the Tigera operator copies and modifies the EnvoyGateway\nresource as follows:\n1. If not already specified, it sets the ControllerName to\n\"gateway.envoyproxy.io/gatewayclass-controller\".\n2. It configures the `tigera/envoy-gateway` and `tigera/envoy-ratelimit` images that will\nbe used (according to the current Calico version, private registry and image set\nsettings) and any pull secrets that are needed to pull those images.\n3. It enables use of the Backend API.\nThe resulting EnvoyGateway is provisioned as the `envoy-gateway-config` ConfigMap (which\nthe gateway controller then uses as its config)."
                  properties:
                    name:
                      type: "string"
                    namespace:
                      type: "string"
                  required:
                    - "name"
                    - "namespace"
                  type: "object"
                gatewayCertgenJob:
                  description: "Allows customization of the gateway certgen job."
                  properties:
                    metadata:
                      description: "If non-nil, non-clashing labels and annotations from this metadata are added into the\njob's top-level metadata."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is a map of arbitrary non-identifying metadata. Each of these\nkey/value pairs are added to the object's annotations provided the key does not\nalready exist in the object's annotations."
                          type: "object"
                        labels:
                          additionalProperties:
                            type: "string"
                          description: "Labels is a map of string keys and values that may match replicaset and\nservice selectors. Each of these key/value pairs are added to the\nobject's labels provided the key does not already exist in the object's labels."
                          type: "object"
                      type: "object"
                    spec:
                      description: "GatewayCertgenJobSpec allows customization of the gateway certgen job spec."
                      properties:
                        template:
                          description: "GatewayCertgenJobPodTemplate allows customization of the gateway certgen job's pod template."
                          properties:
                            metadata:
                              description: "If non-nil, non-clashing labels and annotations from this metadata are added into the\njob's pod template."
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: "string"
                                  description: "Annotations is a map of arbitrary non-identifying metadata. Each of these\nkey/value pairs are added to the object's annotations provided the key does not\nalready exist in the object's annotations."
                                  type: "object"
                                labels:
                                  additionalProperties:
                                    type: "string"
                                  description: "Labels is a map of string keys and values that may match replicaset and\nservice selectors. Each of these key/value pairs are added to the\nobject's labels provided the key does not already exist in the object's labels."
                                  type: "object"
                              type: "object"
                            spec:
                              description: "GatewayCertgenJobPodSpec allows customization of the gateway certgen job's pod spec."
                              properties:
                                affinity:
                                  description: "If non-nil, Affinity sets the affinity field of the job's pod template."
                                  properties:
                                    nodeAffinity:
                                      description: "Describes node affinity scheduling rules for the pod."
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                          items:
                                            description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                            properties:
                                              preference:
                                                description: "A node selector term, associated with the corresponding weight."
                                                properties:
                                                  matchExpressions:
                                                    description: "A list of node selector requirements by node's labels."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchFields:
                                                    description: "A list of node selector requirements by node's fields."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              weight:
                                                description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                                format: "int32"
                                                type: "integer"
                                            required:
                                              - "preference"
                                              - "weight"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                          properties:
                                            nodeSelectorTerms:
                                              description: "Required. A list of node selector terms. The terms are ORed."
                                              items:
                                                description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                                properties:
                                                  matchExpressions:
                                                    description: "A list of node selector requirements by node's labels."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchFields:
                                                    description: "A list of node selector requirements by node's fields."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                          required:
                                            - "nodeSelectorTerms"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                      type: "object"
                                    podAffinity:
                                      description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                          items:
                                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                            properties:
                                              podAffinityTerm:
                                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                                properties:
                                                  labelSelector:
                                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  matchLabelKeys:
                                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  mismatchLabelKeys:
                                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  namespaceSelector:
                                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  namespaces:
                                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  topologyKey:
                                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                    type: "string"
                                                required:
                                                  - "topologyKey"
                                                type: "object"
                                              weight:
                                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                format: "int32"
                                                type: "integer"
                                            required:
                                              - "podAffinityTerm"
                                              - "weight"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                          items:
                                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      type: "object"
                                    podAntiAffinity:
                                      description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                          items:
                                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                            properties:
                                              podAffinityTerm:
                                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                                properties:
                                                  labelSelector:
                                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  matchLabelKeys:
                                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  mismatchLabelKeys:
                                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  namespaceSelector:
                                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  namespaces:
                                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  topologyKey:
                                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                    type: "string"
                                                required:
                                                  - "topologyKey"
                                                type: "object"
                                              weight:
                                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                format: "int32"
                                                type: "integer"
                                            required:
                                              - "podAffinityTerm"
                                              - "weight"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                          items:
                                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      type: "object"
                                  type: "object"
                                containers:
                                  items:
                                    description: "GatewayCertgenJobContainer allows customization of the gateway certgen job's resource\nrequirements."
                                    properties:
                                      name:
                                        enum:
                                          - "envoy-gateway-certgen"
                                        type: "string"
                                      resources:
                                        description: "If non-nil, Resources sets the ResourceRequirements of the job's \"envoy-gateway-certgen\"\ncontainer."
                                        properties:
                                          claims:
                                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\nThis field is immutable. It can only be set for containers."
                                            items:
                                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                              properties:
                                                name:
                                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                  type: "string"
                                                request:
                                                  description: "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request."
                                                  type: "string"
                                              required:
                                                - "name"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-map-keys:
                                              - "name"
                                            x-kubernetes-list-type: "map"
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                        type: "object"
                                    required:
                                      - "name"
                                    type: "object"
                                  type: "array"
                                nodeSelector:
                                  additionalProperties:
                                    type: "string"
                                  description: "If non-nil, NodeSelector sets the node selector for where job pods may be scheduled."
                                  type: "object"
                                tolerations:
                                  description: "If non-nil, Tolerations sets the tolerations field of the job's pod template."
                                  items:
                                    description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                                    properties:
                                      effect:
                                        description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                        type: "string"
                                      key:
                                        description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                        type: "string"
                                      operator:
                                        description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                        type: "string"
                                      tolerationSeconds:
                                        description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                        format: "int64"
                                        type: "integer"
                                      value:
                                        description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                        type: "string"
                                    type: "object"
                                  type: "array"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
                gatewayClasses:
                  description: "Configures the GatewayClasses that will be available; please see GatewayClassSpec for\nmore detail.  If GatewayClasses is nil, the Tigera operator defaults to provisioning a\nsingle GatewayClass named \"tigera-gateway-class\", without any of the detailed\ncustomizations that are allowed within GatewayClassSpec."
                  items:
                    properties:
                      envoyProxyRef:
                        description: "Reference to a custom EnvoyProxy resource to use as the base EnvoyProxy configuration for\nthis GatewayClass.  When specified, must identify an EnvoyProxy resource.\nWhen not specified, the Tigera operator uses an empty EnvoyProxy resource as its base.\nStarting from that base, the Tigera operator copies and modifies the EnvoyProxy resource\nas follows, in the order described:\n1. It configures the `tigera/envoy-proxy` image that will be used (according to the\ncurrent Calico version, private registry and image set settings) and any pull secrets\nthat are needed to pull that image.\n2. It applies customizations as specified by the following `GatewayKind`,\n`GatewayDeployment`, `GatewayDaemonSet` and `GatewayService` fields.\nThe resulting EnvoyProxy is provisioned in the `tigera-gateway` namespace, together with\na GatewayClass that references it.\nIf a custom EnvoyProxy resource is specified and uses `EnvoyDaemonSet` instead of the\ndefault `EnvoyDeployment`, deployment-related customizations will be applied within\n`EnvoyDaemonSet` instead of within `EnvoyDeployment`."
                        properties:
                          name:
                            type: "string"
                          namespace:
                            type: "string"
                        required:
                          - "name"
                          - "namespace"
                        type: "object"
                      gatewayDaemonSet:
                        description: "Allows customization of Gateways when deployed as Kubernetes DaemonSets, for Gateways in\nthis GatewayClass."
                        properties:
                          spec:
                            description: "GatewayDeploymentSpec allows customization of the spec of gateway daemonsets."
                            properties:
                              template:
                                description: "GatewayDeploymentPodTemplate allows customization of the pod template of gateway daemonsets."
                                properties:
                                  metadata:
                                    description: "If non-nil, non-clashing labels and annotations from this metadata are added into each\ndaemonset's pod template."
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: "string"
                                        description: "Annotations is a map of arbitrary non-identifying metadata. Each of these\nkey/value pairs are added to the object's annotations provided the key does not\nalready exist in the object's annotations."
                                        type: "object"
                                      labels:
                                        additionalProperties:
                                          type: "string"
                                        description: "Labels is a map of string keys and values that may match replicaset and\nservice selectors. Each of these key/value pairs are added to the\nobject's labels provided the key does not already exist in the object's labels."
                                        type: "object"
                                    type: "object"
                                  spec:
                                    description: "GatewayDaemonSetPodSpec allows customization of the pod spec of gateway daemonsets."
                                    properties:
                                      affinity:
                                        description: "If non-nil, Affinity sets the affinity field of the daemonset's pod template."
                                        properties:
                                          nodeAffinity:
                                            description: "Describes node affinity scheduling rules for the pod."
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                                items:
                                                  description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                                  properties:
                                                    preference:
                                                      description: "A node selector term, associated with the corresponding weight."
                                                      properties:
                                                        matchExpressions:
                                                          description: "A list of node selector requirements by node's labels."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchFields:
                                                          description: "A list of node selector requirements by node's fields."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    weight:
                                                      description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                                      format: "int32"
                                                      type: "integer"
                                                  required:
                                                    - "preference"
                                                    - "weight"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                                properties:
                                                  nodeSelectorTerms:
                                                    description: "Required. A list of node selector terms. The terms are ORed."
                                                    items:
                                                      description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                                      properties:
                                                        matchExpressions:
                                                          description: "A list of node selector requirements by node's labels."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchFields:
                                                          description: "A list of node selector requirements by node's fields."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                required:
                                                  - "nodeSelectorTerms"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                            type: "object"
                                          podAffinity:
                                            description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                                items:
                                                  description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                                  properties:
                                                    podAffinityTerm:
                                                      description: "Required. A pod affinity term, associated with the corresponding weight."
                                                      properties:
                                                        labelSelector:
                                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        matchLabelKeys:
                                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        mismatchLabelKeys:
                                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        namespaceSelector:
                                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        namespaces:
                                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        topologyKey:
                                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                          type: "string"
                                                      required:
                                                        - "topologyKey"
                                                      type: "object"
                                                    weight:
                                                      description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                      format: "int32"
                                                      type: "integer"
                                                  required:
                                                    - "podAffinityTerm"
                                                    - "weight"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                                items:
                                                  description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                                  properties:
                                                    labelSelector:
                                                      description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    matchLabelKeys:
                                                      description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    mismatchLabelKeys:
                                                      description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    namespaceSelector:
                                                      description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    namespaces:
                                                      description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    topologyKey:
                                                      description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                      type: "string"
                                                  required:
                                                    - "topologyKey"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                          podAntiAffinity:
                                            description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                                items:
                                                  description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                                  properties:
                                                    podAffinityTerm:
                                                      description: "Required. A pod affinity term, associated with the corresponding weight."
                                                      properties:
                                                        labelSelector:
                                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        matchLabelKeys:
                                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        mismatchLabelKeys:
                                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        namespaceSelector:
                                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        namespaces:
                                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        topologyKey:
                                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                          type: "string"
                                                      required:
                                                        - "topologyKey"
                                                      type: "object"
                                                    weight:
                                                      description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                      format: "int32"
                                                      type: "integer"
                                                  required:
                                                    - "podAffinityTerm"
                                                    - "weight"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                                items:
                                                  description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                                  properties:
                                                    labelSelector:
                                                      description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    matchLabelKeys:
                                                      description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    mismatchLabelKeys:
                                                      description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    namespaceSelector:
                                                      description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    namespaces:
                                                      description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    topologyKey:
                                                      description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                      type: "string"
                                                  required:
                                                    - "topologyKey"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                        type: "object"
                                      containers:
                                        items:
                                          description: "GatewayDaemonSetContainer allows customization of the resource requirements of gateway\ndaemonsets."
                                          properties:
                                            name:
                                              enum:
                                                - "envoy"
                                              type: "string"
                                            resources:
                                              description: "If non-nil, Resources sets the ResourceRequirements of the daemonset's \"envoy\"\ncontainer."
                                              properties:
                                                claims:
                                                  description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\nThis field is immutable. It can only be set for containers."
                                                  items:
                                                    description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                                    properties:
                                                      name:
                                                        description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                        type: "string"
                                                      request:
                                                        description: "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request."
                                                        type: "string"
                                                    required:
                                                      - "name"
                                                    type: "object"
                                                  type: "array"
                                                  x-kubernetes-list-map-keys:
                                                    - "name"
                                                  x-kubernetes-list-type: "map"
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                                  type: "object"
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                                  type: "object"
                                              type: "object"
                                          required:
                                            - "name"
                                          type: "object"
                                        type: "array"
                                      nodeSelector:
                                        additionalProperties:
                                          type: "string"
                                        description: "If non-nil, NodeSelector sets the node selector for where daemonset pods may be\nscheduled."
                                        type: "object"
                                      tolerations:
                                        description: "If non-nil, Tolerations sets the tolerations field of the daemonset's pod template."
                                        items:
                                          description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                                          properties:
                                            effect:
                                              description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                              type: "string"
                                            key:
                                              description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                              type: "string"
                                            operator:
                                              description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                              type: "string"
                                            tolerationSeconds:
                                              description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                              format: "int64"
                                              type: "integer"
                                            value:
                                              description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                              type: "string"
                                          type: "object"
                                        type: "array"
                                      topologySpreadConstraints:
                                        description: "If non-nil, TopologySpreadConstraints sets the topology spread constraints of the\ndaemonset's pod template.  TopologySpreadConstraints describes how a group of pods ought\nto spread across topology domains. Scheduler will schedule pods in a way which abides by\nthe constraints.  All topologySpreadConstraints are ANDed."
                                        items:
                                          description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                                          properties:
                                            labelSelector:
                                              description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            matchLabelKeys:
                                              description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            maxSkew:
                                              description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                                              format: "int32"
                                              type: "integer"
                                            minDomains:
                                              description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew."
                                              format: "int32"
                                              type: "integer"
                                            nodeAffinityPolicy:
                                              description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                              type: "string"
                                            nodeTaintsPolicy:
                                              description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                              type: "string"
                                            topologyKey:
                                              description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                                              type: "string"
                                            whenUnsatisfiable:
                                              description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                                              type: "string"
                                          required:
                                            - "maxSkew"
                                            - "topologyKey"
                                            - "whenUnsatisfiable"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                type: "object"
                            type: "object"
                        type: "object"
                      gatewayDeployment:
                        description: "Allows customization of Gateways when deployed as Kubernetes Deployments, for Gateways in\nthis GatewayClass."
                        properties:
                          spec:
                            description: "GatewayDeploymentSpec allows customization of the spec of gateway deployments."
                            properties:
                              replicas:
                                description: "If non-nil, Replicas sets the number of replicas for the deployment."
                                format: "int32"
                                type: "integer"
                              strategy:
                                description: "The deployment strategy to use to replace existing pods with new ones."
                                properties:
                                  rollingUpdate:
                                    description: "Spec to control the desired behavior of rolling update."
                                    properties:
                                      maxSurge:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods."
                                        x-kubernetes-int-or-string: true
                                      maxUnavailable:
                                        anyOf:
                                          - type: "integer"
                                          - type: "string"
                                        description: "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods."
                                        x-kubernetes-int-or-string: true
                                    type: "object"
                                type: "object"
                              template:
                                description: "GatewayDeploymentPodTemplate allows customization of the pod template of gateway deployments."
                                properties:
                                  metadata:
                                    description: "If non-nil, non-clashing labels and annotations from this metadata are added into each\ndeployment's pod template."
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: "string"
                                        description: "Annotations is a map of arbitrary non-identifying metadata. Each of these\nkey/value pairs are added to the object's annotations provided the key does not\nalready exist in the object's annotations."
                                        type: "object"
                                      labels:
                                        additionalProperties:
                                          type: "string"
                                        description: "Labels is a map of string keys and values that may match replicaset and\nservice selectors. Each of these key/value pairs are added to the\nobject's labels provided the key does not already exist in the object's labels."
                                        type: "object"
                                    type: "object"
                                  spec:
                                    description: "GatewayDeploymentPodSpec allows customization of the pod spec of gateway deployments."
                                    properties:
                                      affinity:
                                        description: "If non-nil, Affinity sets the affinity field of the deployment's pod template."
                                        properties:
                                          nodeAffinity:
                                            description: "Describes node affinity scheduling rules for the pod."
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                                items:
                                                  description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                                  properties:
                                                    preference:
                                                      description: "A node selector term, associated with the corresponding weight."
                                                      properties:
                                                        matchExpressions:
                                                          description: "A list of node selector requirements by node's labels."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchFields:
                                                          description: "A list of node selector requirements by node's fields."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    weight:
                                                      description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                                      format: "int32"
                                                      type: "integer"
                                                  required:
                                                    - "preference"
                                                    - "weight"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                                properties:
                                                  nodeSelectorTerms:
                                                    description: "Required. A list of node selector terms. The terms are ORed."
                                                    items:
                                                      description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                                      properties:
                                                        matchExpressions:
                                                          description: "A list of node selector requirements by node's labels."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchFields:
                                                          description: "A list of node selector requirements by node's fields."
                                                          items:
                                                            description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                            properties:
                                                              key:
                                                                description: "The label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                                type: "string"
                                                              values:
                                                                description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                required:
                                                  - "nodeSelectorTerms"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                            type: "object"
                                          podAffinity:
                                            description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                                items:
                                                  description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                                  properties:
                                                    podAffinityTerm:
                                                      description: "Required. A pod affinity term, associated with the corresponding weight."
                                                      properties:
                                                        labelSelector:
                                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        matchLabelKeys:
                                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        mismatchLabelKeys:
                                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        namespaceSelector:
                                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        namespaces:
                                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        topologyKey:
                                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                          type: "string"
                                                      required:
                                                        - "topologyKey"
                                                      type: "object"
                                                    weight:
                                                      description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                      format: "int32"
                                                      type: "integer"
                                                  required:
                                                    - "podAffinityTerm"
                                                    - "weight"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                                items:
                                                  description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                                  properties:
                                                    labelSelector:
                                                      description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    matchLabelKeys:
                                                      description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    mismatchLabelKeys:
                                                      description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    namespaceSelector:
                                                      description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    namespaces:
                                                      description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    topologyKey:
                                                      description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                      type: "string"
                                                  required:
                                                    - "topologyKey"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                          podAntiAffinity:
                                            description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                                items:
                                                  description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                                  properties:
                                                    podAffinityTerm:
                                                      description: "Required. A pod affinity term, associated with the corresponding weight."
                                                      properties:
                                                        labelSelector:
                                                          description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        matchLabelKeys:
                                                          description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        mismatchLabelKeys:
                                                          description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        namespaceSelector:
                                                          description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                          properties:
                                                            matchExpressions:
                                                              description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                              items:
                                                                description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                                properties:
                                                                  key:
                                                                    description: "key is the label key that the selector applies to."
                                                                    type: "string"
                                                                  operator:
                                                                    description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                    type: "string"
                                                                  values:
                                                                    description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                    items:
                                                                      type: "string"
                                                                    type: "array"
                                                                    x-kubernetes-list-type: "atomic"
                                                                required:
                                                                  - "key"
                                                                  - "operator"
                                                                type: "object"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: "string"
                                                              description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                              type: "object"
                                                          type: "object"
                                                          x-kubernetes-map-type: "atomic"
                                                        namespaces:
                                                          description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        topologyKey:
                                                          description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                          type: "string"
                                                      required:
                                                        - "topologyKey"
                                                      type: "object"
                                                    weight:
                                                      description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                      format: "int32"
                                                      type: "integer"
                                                  required:
                                                    - "podAffinityTerm"
                                                    - "weight"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                                items:
                                                  description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                                  properties:
                                                    labelSelector:
                                                      description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    matchLabelKeys:
                                                      description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    mismatchLabelKeys:
                                                      description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    namespaceSelector:
                                                      description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                      properties:
                                                        matchExpressions:
                                                          description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                          items:
                                                            description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                            properties:
                                                              key:
                                                                description: "key is the label key that the selector applies to."
                                                                type: "string"
                                                              operator:
                                                                description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                                type: "string"
                                                              values:
                                                                description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                                items:
                                                                  type: "string"
                                                                type: "array"
                                                                x-kubernetes-list-type: "atomic"
                                                            required:
                                                              - "key"
                                                              - "operator"
                                                            type: "object"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: "string"
                                                          description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                          type: "object"
                                                      type: "object"
                                                      x-kubernetes-map-type: "atomic"
                                                    namespaces:
                                                      description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                      items:
                                                        type: "string"
                                                      type: "array"
                                                      x-kubernetes-list-type: "atomic"
                                                    topologyKey:
                                                      description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                      type: "string"
                                                  required:
                                                    - "topologyKey"
                                                  type: "object"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                            type: "object"
                                        type: "object"
                                      containers:
                                        items:
                                          description: "GatewayDeploymentContainer allows customization of the resource requirements of gateway\ndeployments."
                                          properties:
                                            name:
                                              enum:
                                                - "envoy"
                                              type: "string"
                                            resources:
                                              description: "If non-nil, Resources sets the ResourceRequirements of the deployment's \"envoy\"\ncontainer."
                                              properties:
                                                claims:
                                                  description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\nThis field is immutable. It can only be set for containers."
                                                  items:
                                                    description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                                    properties:
                                                      name:
                                                        description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                        type: "string"
                                                      request:
                                                        description: "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request."
                                                        type: "string"
                                                    required:
                                                      - "name"
                                                    type: "object"
                                                  type: "array"
                                                  x-kubernetes-list-map-keys:
                                                    - "name"
                                                  x-kubernetes-list-type: "map"
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                                  type: "object"
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                      - type: "integer"
                                                      - type: "string"
                                                    pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                                    x-kubernetes-int-or-string: true
                                                  description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                                  type: "object"
                                              type: "object"
                                          required:
                                            - "name"
                                          type: "object"
                                        type: "array"
                                      nodeSelector:
                                        additionalProperties:
                                          type: "string"
                                        description: "If non-nil, NodeSelector sets the node selector for where deployment pods may be\nscheduled."
                                        type: "object"
                                      tolerations:
                                        description: "If non-nil, Tolerations sets the tolerations field of the deployment's pod template."
                                        items:
                                          description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                                          properties:
                                            effect:
                                              description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                              type: "string"
                                            key:
                                              description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                              type: "string"
                                            operator:
                                              description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                              type: "string"
                                            tolerationSeconds:
                                              description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                              format: "int64"
                                              type: "integer"
                                            value:
                                              description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                              type: "string"
                                          type: "object"
                                        type: "array"
                                      topologySpreadConstraints:
                                        description: "If non-nil, TopologySpreadConstraints sets the topology spread constraints of the\ndeployment's pod template.  TopologySpreadConstraints describes how a group of pods ought\nto spread across topology domains. Scheduler will schedule pods in a way which abides by\nthe constraints.  All topologySpreadConstraints are ANDed."
                                        items:
                                          description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                                          properties:
                                            labelSelector:
                                              description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                                              properties:
                                                matchExpressions:
                                                  description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                  items:
                                                    description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                    properties:
                                                      key:
                                                        description: "key is the label key that the selector applies to."
                                                        type: "string"
                                                      operator:
                                                        description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                        type: "string"
                                                      values:
                                                        description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                        items:
                                                          type: "string"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                    required:
                                                      - "key"
                                                      - "operator"
                                                    type: "object"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                                matchLabels:
                                                  additionalProperties:
                                                    type: "string"
                                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                  type: "object"
                                              type: "object"
                                              x-kubernetes-map-type: "atomic"
                                            matchLabelKeys:
                                              description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                                              items:
                                                type: "string"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                            maxSkew:
                                              description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                                              format: "int32"
                                              type: "integer"
                                            minDomains:
                                              description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew."
                                              format: "int32"
                                              type: "integer"
                                            nodeAffinityPolicy:
                                              description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                              type: "string"
                                            nodeTaintsPolicy:
                                              description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                              type: "string"
                                            topologyKey:
                                              description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                                              type: "string"
                                            whenUnsatisfiable:
                                              description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                                              type: "string"
                                          required:
                                            - "maxSkew"
                                            - "topologyKey"
                                            - "whenUnsatisfiable"
                                          type: "object"
                                        type: "array"
                                    type: "object"
                                type: "object"
                            type: "object"
                        type: "object"
                      gatewayKind:
                        description: "Specifies whether Gateways in this class are deployed as Deployments (default) or as\nDaemonSets.  It is an error for GatewayKind to specify a choice that is incompatible with\nthe custom EnvoyProxy, when EnvoyProxyRef is also specified."
                        enum:
                          - "Deployment"
                          - "DaemonSet"
                        type: "string"
                      gatewayService:
                        description: "Allows customization of gateway services, for Gateways in this GatewayClass."
                        properties:
                          metadata:
                            description: "If non-nil, non-clashing labels and annotations from this metadata are added into the\neach Gateway Service's metadata."
                            properties:
                              annotations:
                                additionalProperties:
                                  type: "string"
                                description: "Annotations is a map of arbitrary non-identifying metadata. Each of these\nkey/value pairs are added to the object's annotations provided the key does not\nalready exist in the object's annotations."
                                type: "object"
                              labels:
                                additionalProperties:
                                  type: "string"
                                description: "Labels is a map of string keys and values that may match replicaset and\nservice selectors. Each of these key/value pairs are added to the\nobject's labels provided the key does not already exist in the object's labels."
                                type: "object"
                            type: "object"
                          spec:
                            description: "GatewayServiceSpec allows customization of the services that front gateway deployments.\nThe LoadBalancer fields allow customization of the corresponding fields in the Kubernetes\nServiceSpec.  These can be used for some cloud-independent control of the external load balancer\nthat is provisioned for each Gateway.  For finer-grained cloud-specific control please use\nthe Metadata.Annotations field in GatewayService."
                            properties:
                              allocateLoadBalancerNodePorts:
                                type: "boolean"
                              loadBalancerClass:
                                type: "string"
                              loadBalancerIP:
                                type: "string"
                              loadBalancerSourceRanges:
                                items:
                                  type: "string"
                                type: "array"
                            type: "object"
                        type: "object"
                      name:
                        description: "The name of this GatewayClass."
                        type: "string"
                    required:
                      - "name"
                    type: "object"
                  type: "array"
                gatewayControllerDeployment:
                  description: "Allows customization of the gateway controller deployment."
                  properties:
                    metadata:
                      description: "If non-nil, non-clashing labels and annotations from this metadata are added into the\ndeployment's top-level metadata."
                      properties:
                        annotations:
                          additionalProperties:
                            type: "string"
                          description: "Annotations is a map of arbitrary non-identifying metadata. Each of these\nkey/value pairs are added to the object's annotations provided the key does not\nalready exist in the object's annotations."
                          type: "object"
                        labels:
                          additionalProperties:
                            type: "string"
                          description: "Labels is a map of string keys and values that may match replicaset and\nservice selectors. Each of these key/value pairs are added to the\nobject's labels provided the key does not already exist in the object's labels."
                          type: "object"
                      type: "object"
                    spec:
                      description: "GatewayControllerDeploymentSpec allows customization of the gateway controller deployment spec."
                      properties:
                        minReadySeconds:
                          description: "If non-nil, MinReadySeconds sets the minReadySeconds field for the deployment."
                          format: "int32"
                          maximum: 2147483647.0
                          minimum: 0.0
                          type: "integer"
                        replicas:
                          description: "If non-nil, Replicas sets the number of replicas for the deployment."
                          format: "int32"
                          type: "integer"
                        template:
                          description: "GatewayControllerDeploymentPodTemplate allows customization of the gateway controller deployment\npod template."
                          properties:
                            metadata:
                              description: "If non-nil, non-clashing labels and annotations from this metadata are added into the\ndeployment's pod template."
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: "string"
                                  description: "Annotations is a map of arbitrary non-identifying metadata. Each of these\nkey/value pairs are added to the object's annotations provided the key does not\nalready exist in the object's annotations."
                                  type: "object"
                                labels:
                                  additionalProperties:
                                    type: "string"
                                  description: "Labels is a map of string keys and values that may match replicaset and\nservice selectors. Each of these key/value pairs are added to the\nobject's labels provided the key does not already exist in the object's labels."
                                  type: "object"
                              type: "object"
                            spec:
                              description: "GatewayControllerDeploymentPodSpec allows customization of the gateway controller deployment pod\nspec."
                              properties:
                                affinity:
                                  description: "If non-nil, Affinity sets the affinity field of the deployment's pod template."
                                  properties:
                                    nodeAffinity:
                                      description: "Describes node affinity scheduling rules for the pod."
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred."
                                          items:
                                            description: "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
                                            properties:
                                              preference:
                                                description: "A node selector term, associated with the corresponding weight."
                                                properties:
                                                  matchExpressions:
                                                    description: "A list of node selector requirements by node's labels."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchFields:
                                                    description: "A list of node selector requirements by node's fields."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              weight:
                                                description: "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                                                format: "int32"
                                                type: "integer"
                                            required:
                                              - "preference"
                                              - "weight"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node."
                                          properties:
                                            nodeSelectorTerms:
                                              description: "Required. A list of node selector terms. The terms are ORed."
                                              items:
                                                description: "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
                                                properties:
                                                  matchExpressions:
                                                    description: "A list of node selector requirements by node's labels."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchFields:
                                                    description: "A list of node selector requirements by node's fields."
                                                    items:
                                                      description: "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
                                                      properties:
                                                        key:
                                                          description: "The label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                                                          type: "string"
                                                        values:
                                                          description: "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              type: "array"
                                              x-kubernetes-list-type: "atomic"
                                          required:
                                            - "nodeSelectorTerms"
                                          type: "object"
                                          x-kubernetes-map-type: "atomic"
                                      type: "object"
                                    podAffinity:
                                      description: "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                          items:
                                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                            properties:
                                              podAffinityTerm:
                                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                                properties:
                                                  labelSelector:
                                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  matchLabelKeys:
                                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  mismatchLabelKeys:
                                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  namespaceSelector:
                                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  namespaces:
                                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  topologyKey:
                                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                    type: "string"
                                                required:
                                                  - "topologyKey"
                                                type: "object"
                                              weight:
                                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                format: "int32"
                                                type: "integer"
                                            required:
                                              - "podAffinityTerm"
                                              - "weight"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                          items:
                                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      type: "object"
                                    podAntiAffinity:
                                      description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred."
                                          items:
                                            description: "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
                                            properties:
                                              podAffinityTerm:
                                                description: "Required. A pod affinity term, associated with the corresponding weight."
                                                properties:
                                                  labelSelector:
                                                    description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  matchLabelKeys:
                                                    description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  mismatchLabelKeys:
                                                    description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  namespaceSelector:
                                                    description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                    properties:
                                                      matchExpressions:
                                                        description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                        items:
                                                          description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                          properties:
                                                            key:
                                                              description: "key is the label key that the selector applies to."
                                                              type: "string"
                                                            operator:
                                                              description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                              type: "string"
                                                            values:
                                                              description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                              items:
                                                                type: "string"
                                                              type: "array"
                                                              x-kubernetes-list-type: "atomic"
                                                          required:
                                                            - "key"
                                                            - "operator"
                                                          type: "object"
                                                        type: "array"
                                                        x-kubernetes-list-type: "atomic"
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: "string"
                                                        description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                        type: "object"
                                                    type: "object"
                                                    x-kubernetes-map-type: "atomic"
                                                  namespaces:
                                                    description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                    items:
                                                      type: "string"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  topologyKey:
                                                    description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                    type: "string"
                                                required:
                                                  - "topologyKey"
                                                type: "object"
                                              weight:
                                                description: "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                                                format: "int32"
                                                type: "integer"
                                            required:
                                              - "podAffinityTerm"
                                              - "weight"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied."
                                          items:
                                            description: "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
                                            properties:
                                              labelSelector:
                                                description: "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              matchLabelKeys:
                                                description: "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              mismatchLabelKeys:
                                                description: "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default)."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              namespaceSelector:
                                                description: "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces."
                                                properties:
                                                  matchExpressions:
                                                    description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                                    items:
                                                      description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                                      properties:
                                                        key:
                                                          description: "key is the label key that the selector applies to."
                                                          type: "string"
                                                        operator:
                                                          description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                          type: "string"
                                                        values:
                                                          description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                          items:
                                                            type: "string"
                                                          type: "array"
                                                          x-kubernetes-list-type: "atomic"
                                                      required:
                                                        - "key"
                                                        - "operator"
                                                      type: "object"
                                                    type: "array"
                                                    x-kubernetes-list-type: "atomic"
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: "string"
                                                    description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                                    type: "object"
                                                type: "object"
                                                x-kubernetes-map-type: "atomic"
                                              namespaces:
                                                description: "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\"."
                                                items:
                                                  type: "string"
                                                type: "array"
                                                x-kubernetes-list-type: "atomic"
                                              topologyKey:
                                                description: "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                                                type: "string"
                                            required:
                                              - "topologyKey"
                                            type: "object"
                                          type: "array"
                                          x-kubernetes-list-type: "atomic"
                                      type: "object"
                                  type: "object"
                                containers:
                                  items:
                                    description: "GatewayControllerDeploymentContainer allows customization of the gateway controller's resource\nrequirements."
                                    properties:
                                      name:
                                        enum:
                                          - "envoy-gateway"
                                        type: "string"
                                      resources:
                                        description: "If non-nil, Resources sets the ResourceRequirements of the controller's \"envoy-gateway\"\ncontainer."
                                        properties:
                                          claims:
                                            description: "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\nThis field is immutable. It can only be set for containers."
                                            items:
                                              description: "ResourceClaim references one entry in PodSpec.ResourceClaims."
                                              properties:
                                                name:
                                                  description: "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                                                  type: "string"
                                                request:
                                                  description: "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request."
                                                  type: "string"
                                              required:
                                                - "name"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-map-keys:
                                              - "name"
                                            x-kubernetes-list-type: "map"
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: "integer"
                                                - type: "string"
                                              pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                                              x-kubernetes-int-or-string: true
                                            description: "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                            type: "object"
                                        type: "object"
                                    required:
                                      - "name"
                                    type: "object"
                                  type: "array"
                                nodeSelector:
                                  additionalProperties:
                                    type: "string"
                                  description: "If non-nil, NodeSelector sets the node selector for where deployment pods may be\nscheduled."
                                  type: "object"
                                tolerations:
                                  description: "If non-nil, Tolerations sets the tolerations field of the deployment's pod template."
                                  items:
                                    description: "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
                                    properties:
                                      effect:
                                        description: "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
                                        type: "string"
                                      key:
                                        description: "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys."
                                        type: "string"
                                      operator:
                                        description: "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category."
                                        type: "string"
                                      tolerationSeconds:
                                        description: "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system."
                                        format: "int64"
                                        type: "integer"
                                      value:
                                        description: "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string."
                                        type: "string"
                                    type: "object"
                                  type: "array"
                                topologySpreadConstraints:
                                  description: "If non-nil, TopologySpreadConstraints sets the topology spread constraints of the\ndeployment's pod template.  TopologySpreadConstraints describes how a group of pods ought\nto spread across topology domains. Scheduler will schedule pods in a way which abides by\nthe constraints.  All topologySpreadConstraints are ANDed."
                                  items:
                                    description: "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
                                    properties:
                                      labelSelector:
                                        description: "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain."
                                        properties:
                                          matchExpressions:
                                            description: "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                                            items:
                                              description: "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                                              properties:
                                                key:
                                                  description: "key is the label key that the selector applies to."
                                                  type: "string"
                                                operator:
                                                  description: "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                                  type: "string"
                                                values:
                                                  description: "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch."
                                                  items:
                                                    type: "string"
                                                  type: "array"
                                                  x-kubernetes-list-type: "atomic"
                                              required:
                                                - "key"
                                                - "operator"
                                              type: "object"
                                            type: "array"
                                            x-kubernetes-list-type: "atomic"
                                          matchLabels:
                                            additionalProperties:
                                              type: "string"
                                            description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                            type: "object"
                                        type: "object"
                                        x-kubernetes-map-type: "atomic"
                                      matchLabelKeys:
                                        description: "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default)."
                                        items:
                                          type: "string"
                                        type: "array"
                                        x-kubernetes-list-type: "atomic"
                                      maxSkew:
                                        description: "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                                        format: "int32"
                                        type: "integer"
                                      minDomains:
                                        description: "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew."
                                        format: "int32"
                                        type: "integer"
                                      nodeAffinityPolicy:
                                        description: "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                        type: "string"
                                      nodeTaintsPolicy:
                                        description: "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag."
                                        type: "string"
                                      topologyKey:
                                        description: "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                                        type: "string"
                                      whenUnsatisfiable:
                                        description: "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                                        type: "string"
                                    required:
                                      - "maxSkew"
                                      - "topologyKey"
                                      - "whenUnsatisfiable"
                                    type: "object"
                                  type: "array"
                              type: "object"
                          type: "object"
                      type: "object"
                  type: "object"
              type: "object"
          type: "object"
      served: true
      storage: true
